Managing NoSQL Data Using Azure Cosmos DB 156 id: product.id, new PartitionKey(product.productId)); WriteLine("Item with id: {0} exists. Query consumed {1} RUs.", productResponse.Resource.id, productResponse. RequestCharge); totalCharge += productResponse.RequestCharge; } catch (CosmosException ex) when (ex.StatusCode == HttpStatusCode.NotFound) { // Create the item if it does not exist. ItemResponse<ProductCosmos> productResponse = await container.CreateItemAsync(product); WriteLine("Created item with id: {0}. Insert consumed {1} RUs.", productResponse.Resource.id, productResponse. RequestCharge); totalCharge += productResponse.RequestCharge; } catch (Exception ex) { WriteLine("Error: {0} says {1}", arg0: ex.GetType(), arg1: ex.Message); } } } } } catch (HttpRequestException ex) { WriteLine($"Error: {ex.Message}"); WriteLine("Hint: If you are using the Azure Cosmos Emulator then please make sure it is running."); } catch (Exception ex) { WriteLine("Error: {0} says {1}", 