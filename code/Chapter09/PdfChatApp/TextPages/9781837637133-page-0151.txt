Building Entity Models for SQL Server Using EF Core 118 Creating a class library for the data context using SQL Server Next, you will move the context model that represents the database to a separate class library: 1. Add a new project, as defined in the following list: • Project template: Class Library / classlib. Northwind.Common.DataContext.SqlServer. • Project file and folder: Chapter03. • Solution file and folder: DataContext project, add a project reference to the EntityModels project, and • In the add a package reference to the EF Core data provider for SQL Server, as shown in the following markup: <ItemGroup> <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="8.0.0" /> </ItemGroup> <ItemGroup> <ProjectReference Include="..\Northwind.Common.EntityModels .SqlServer\Northwind.Common.EntityModels.SqlServer.csproj" /> </ItemGroup> Warning! The path to the project reference should not have a line break in your project file. 2. In the Northwind.Common.DataContext.SqlServer project, delete the Class1.cs file. Northwind.Common.DataContext.SqlServer project. 3. Build the NorthwindContext.cs file from the Northwind.Common.EntityModels.SqlServer 4. Move the project/folder to the Northwind.Common.DataContext.SqlServer project/folder. In the Northwind.Common.DataContext.SqlServer project, add a class named 5. NorthwindContextExtensions.cs, and modify its contents to define an extension method that adds the Northwind database context to a collection of dependency services, as shown in the following code: using Microsoft.Data.SqlClient; // SqlConnectionStringBuilder using Microsoft.EntityFrameworkCore; // UseSqlServer using Microsoft.Extensions.DependencyInjection; // IServiceCollection namespace Northwind.EntityModels; public static class NorthwindContextExtensions 