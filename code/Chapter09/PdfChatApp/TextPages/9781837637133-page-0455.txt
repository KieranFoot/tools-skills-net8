Caching, Queuing, and Resilient Background Services 422 info: Microsoft.Hosting.Lifetime[0] Content root path: C:\apps-services-net8\Chapter09\Northwind. Background.Workers 5. Leave the background workers running for at least 10 seconds, and note the queue worker writes to the log every second and the timer worker writes to the log every five seconds, as shown in the following output: info: Northwind.Background.Workers.TimerWorker[0] TimerWorker is working, execution count: 1 info: Northwind.Background.Workers.QueueWorker[0] Worker running at: 06/12/2023 12:58:26 +01:00 info: Northwind.Background.Workers.QueueWorker[0] Worker running at: 06/12/2023 12:58:27 +01:00 info: Northwind.Background.Workers.QueueWorker[0] Worker running at: 06/12/2023 12:58:28 +01:00 info: Northwind.Background.Workers.QueueWorker[0] Worker running at: 06/12/2023 12:58:29 +01:00 info: Northwind.Background.Workers.TimerWorker[0] TimerWorker is working, execution count: 2 6. Press Ctrl + C to shut down the background workers, and note the clean shutdown of the timer worker, as shown in the following output: info: Microsoft.Hosting.Lifetime[0] Application is shutting down... info: Northwind.Background.Workers.TimerWorker[0] TimerWorker is stopping. If we wanted to use the timer background service to have more flexibility, instead of running it at a regular interval like five seconds, we could have it run a scheduled task check every second, and only if a task has reached its scheduled time does it then run that task. We need somewhere to define tasks and when they are scheduled to run. Although you can build this infrastructure yourself, it is easier to use a third-party library like Hangfire. Building a website to host Hangfire Hangfire is open source and free for commercial use. It supports the following patterns of use: • Fire-and-forget: Jobs that are executed once and started immediately. • Delayed: Jobs that are executed once but at a date and time in the future. • Recurring: Jobs that are executed repeatedly at a regular CRON schedule. • Continuation: Jobs that are executed on completion of a parent job. • Batches: Jobs that are transactional. These are only available in the paid version. 