Chapter 13 673 â€¢ After the <script> elements for Bootstrap, we have defined a section named Scripts so that a Razor Page can optionally inject additional scripts that it needs. 6. In index.cshtml, remove all HTML markup except <div class="jumbotron"> and its con- tents, and leave the C# code in the @functions block that you added earlier. Add a statement to the OnGet method to set a page title in the ViewData dictionary, and modify the button to navigate to a suppliers page (which we will create in the next section), as shown highlighted in the following markup: @page @functions { public string? DayName { get; set; } public void OnGet() { ViewData["Title"] = "Northwind B2B"; DayName = DateTime.Now.ToString("dddd"); } } <div class="jumbotron"> <h1 class="display-3">Welcome to @ViewData["Title"]</h1> <p class="lead">We supply products to our customers.</p> <hr /> <p>It's @DayName! Our customers include restaurants, hotels, and cruise lines.</p> <p> <a class="btn btn-primary" href="suppliers"> Learn more about our suppliers </a> </p> </div> 7. Start the website using the https launch profile. 8. Visit it with Chrome and note that it has a similar behavior to before, although clicking the button for suppliers will give a 404 Not Found error because we have not created that page yet. 9. Close Chrome and shut down the web server. Temporarily storing data You often need to temporarily store data in a shared location that can then be accessed in other com- ponents of the website. This allows one part of the website to share data with another. For example, a specific page could share data with a layout for it to render, or one page could share data with another. 