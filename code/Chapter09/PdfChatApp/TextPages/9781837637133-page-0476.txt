Chapter 10 443 • In-process: Your function is implemented in a class library that must run in the same process as the host, which means your functions must run on the most recent LTS release of .NET. The latest LTS release is .NET 8. The next LTS release will be .NET 10 in November 2025, but .NET 8 will be the last release that supports in-process hosting. After .NET 8, only the isolated worker model will be supported for all versions. • Isolated: Your function is implemented in a console app that runs in its own process. Your Main function can therefore execute on any supported .NET version, have full control over its entry point, and have additional features like invocation middleware. From .NET 9 onward, this will be the only worker model. You can read more about this decision at the following link: https://techcommunity.microsoft.com/t5/apps-on-azure-blog/net-on-azure-functions- august-2023-roadmap-update/ba-p/3910098. Good Practice: New projects should use the isolated worker model. Azure Functions hosting plans After testing locally, you must deploy your Azure Functions project to an Azure hosting plan. There are three Azure Functions plans to choose from, as described in the following list: • Consumption: In this plan, host instances are dynamically added and removed based on ac- tivity. This plan is the closest to serverless. It scales automatically during periods of high load. The cost is only for compute resources when your functions are running. You can configure a timeout for function execution times to ensure your functions do not run forever. Premium: This plan supports elastic scaling up and down, perpetually warm instances to avoid • cold starts, unlimited execution duration, multicore instance sizes up to four cores, potentially more predictable costs, and high-density app allocation for multiple Azure Functions projects. The cost is based on the number of core seconds and memory allocated across instances. At least one instance must be allocated at all times, so there will always be a minimum monthly cost per active plan, even if it never executes that month. • Dedicated: Executes in the cloud equivalent of a server farm. Hosting is provided by an Azure App Service plan that controls the allocated server resources. Azure App Service plans include Basic, Standard, Premium, and Isolated. This plan can be an especially good choice if you already have an App Service plan used for other projects like ASP.NET Core MVC websites, gRPC, OData, and GraphQL services, and so on. The cost is only for the App Service plan. You can host as many Azure Functions and other web apps in it as you like. Warning! Premium and Dedicated plans both run on Azure App Service plans. You must carefully select the correct App Service plan that works with your Azure Functions hosting plan. For example, for Premium, you should choose an Elastic Premium plan like EP1. If you choose an App Service plan like P1V1, then you are choosing a dedicated plan that will not elastically scale! 