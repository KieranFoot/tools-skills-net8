Chapter 13 669 Warning! If you have installed ReSharper for Visual Studio, or you use JetBrains Rider, then they might give warnings like “Cannot resolve symbol” in your Razor Pages, Razor views, and Blazor components. This does not always mean there is an actual problem. If the file compiles, then you can ignore their errors. Sometimes the poor things get confused and needlessly worry developers. 8. Start the website project using the https launch profile. In Chrome, enter https://localhost:5131/ and note the element that says that this is a static 9. HTML page is gone. If it is still there, then you might have to empty the browser cache. View Developer Tools, click and hold on the Reload this page button, and then select Empty cache and hard reload, as shown in Figure 13.4: Figure 13.4: View Developer Tools, then click and hold the Reload this page button to see more commands Adding code to a Razor Page In the HTML markup of a web page, Razor syntax is indicated by the @ symbol. Razor Pages can be described as follows: • Razor Pages requires the @page directive at the top of the file. Warning! Razor Pages are different from Razor Views (used in ASP.NET Core MVC) but they share the same .cshtml file extension. Razor Pages must have the @page directive. Razor Views must not use the @page directive. • Razor Pages can optionally have an @functions section that defines any of the following: • Properties for storing data values, like in a class definition. An instance of that class is automatically instantiated, named Model, which can have its properties set in special methods, and you can get the property values in the HTML. Methods named OnGet, OnPost, OnDelete, and so on that execute when HTTP requests • are made, such as GET, POST, and DELETE. • Razor Pages markup can have comments using @* and *@, as shown in the following code: @* . This is a comment. *@ 