Introducing Apps and Services with .NET 14 Setting up your development environment Before you start programming, you’ll need a code editor for C#. Microsoft has a family of code editors and Integrated Development Environments (IDEs), which include: • Visual Studio 2022 for Windows • Visual Studio Code for Windows, Mac, or Linux • Visual Studio Code for the Web or GitHub Codespaces Third parties have created their own C# code editors, for example, JetBrains Rider, which is available for Windows, Mac, or Linux but does have a license cost. JetBrains Rider is popular with more expe- rienced .NET developers. Warning! Although JetBrains is a fantastic company with great products, both Rider and the ReSharper extension for Visual Studio are software, and all software has bugs and quirky behavior. For example, they might show errors like “Cannot resolve symbol” in your Razor Pages, Razor views, and Blazor components. Yet you can build and run those files because there is no actual problem. If you have installed the Unity Support plugin, then it will complain about boxing operations, which are a genuine problem for Unity game developers. But in this book we will not create any Unity projects so the boxing warnings do not apply. In Chapters 1 to 15, you can use Visual Studio 2022 or cross-platform Visual Studio Code and JetBrains Rider to build all the apps and services. In Chapter 16, Building Mobile and Desktop Apps Using .NET MAUI; and its online sections, Implementing Model-View-ViewModel for .NET MAUI and Integrating .NET MAUI Apps with Blazor and Native Platforms, although you could use Visual Studio Code to build the mobile and desktop app, it is not easy. Visual Studio 2022 has better support for .NET MAUI than Visual Studio Code does (for now). Choosing the appropriate tool and application type for learning What is the best tool and application type for building apps and services with C# and .NET? I want you to be free to choose any C# code editor or IDE to complete the coding tasks in this book, including Visual Studio Code, Visual Studio 2022, or even JetBrains Rider. In this book, I give general instructions that work with all tools so you can use whichever tool you prefer. Using Visual Studio 2022 for general development Visual Studio 2022 can create most types of applications, including console apps, websites, web ser- vices, desktop, and mobile apps. Although you can use Visual Studio 2022 with a .NET MAUI project to write a cross-platform mobile app, you still need macOS and Xcode to compile it. Visual Studio 2022 only runs on Windows 10 version 1909 or later, or Windows Server 2016 or later, and only on 64-bit versions. Version 17.4 is the first version to support native Arm64. 