Chapter 4 171 3. Run the console app and note that the namespace for the Program class is null, as shown in the following output: * Top-level functions example Namespace of Program class: null What is automatically generated for a local function? The compiler automatically generates a Program class with a <Main>$ function, then moves your statements and function inside the <Main>$ method, which makes the function local, and renames the function, as shown highlighted in the following code: using static System.Console; partial class Program { static void <Main>$(String[] args) { WriteLine("* Top-level functions example"); <<Main>$>g__WhatsMyNamespace|0_0(); // Call the function. void <<Main>$>g__WhatsMyNamespace|0_0() // Define a local function. { WriteLine("Namespace of Program class: {0}", arg0: typeof(Program).Namespace ?? "null"); } } } For the compiler to know what statements need to go where, you must follow some rules: • Import statements (using) must go at the top of the Program.cs file. <Main>$ function can be mixed with functions in the middle of • Statements that will go in the Program.cs file. Any functions will become local functions in the <Main>$ method. the The last point is important because local functions have limitations, like they cannot have XML com- ments to document them. You are about to see some C# keywords like static and partial, which will be formally introduced in Chapter 5, Building Your Own Types with Object-Oriented Programming. 