Using Popular Third-Party Libraries 208 2. In Properties, set Copy to Output Directory to Copy always, as shown in Figure 6.1: Figure 6.1: Setting images to always copy to the output directory 3. Open the project file and note the <ItemGroup> entries that will copy the nine images to the correct folder, as partially shown in the following markup: <ItemGroup> <None Update="images\categories.jpeg"> <CopyToOutputDirectory>Always</CopyToOutputDirectory> </None> <None Update="images\category1.jpeg"> <CopyToOutputDirectory>Always</CopyToOutputDirectory> </None> ... 4. In the WorkingWithImages project, treat warnings as errors, globally and statically import the System.Console class, and add a package reference for SixLabors.ImageSharp, as shown highlighted in the following markup: <Project Sdk="Microsoft.NET.Sdk"> <PropertyGroup> <OutputType>Exe</OutputType> <TargetFramework>net8.0</TargetFramework> <ImplicitUsings>enable</ImplicitUsings> <Nullable>enable</Nullable> <TreatWarningsAsErrors>true</TreatWarningsAsErrors> </PropertyGroup> <ItemGroup> 