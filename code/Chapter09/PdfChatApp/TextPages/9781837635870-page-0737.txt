Building and Consuming Web Services 718 The GetCustomers method can have a string parameter passed with a country name. If it is missing, all customers are returned. If it is present, it is used to filter customers by country. 6. In CustomersController.cs, add statements to define an action method that responds to HTTP GET requests for an individual customer, as shown in the following code: // GET: api/customers/[id] [HttpGet("{id}", Name = nameof(GetCustomer))] // Named route. [ProducesResponseType(200, Type = typeof(Customer))] [ProducesResponseType(404)] public async Task<IActionResult> GetCustomer(string id) { Customer? c = await _repo.RetrieveAsync(id); if (c == null) { return NotFound(); // 404 Resource not found. } return Ok(c); // 200 OK with customer in body } The GetCustomer method has a route explicitly named GetCustomer so that it can be used to generate a URL after inserting a new customer. 7. In CustomersController.cs, add statements to define an action method that responds to HTTP POST requests to insert a new customer entity, as shown in the following code: // POST: api/customers // BODY: Customer (JSON, XML) [HttpPost] [ProducesResponseType(201, Type = typeof(Customer))] [ProducesResponseType(400)] public async Task<IActionResult> Create([FromBody] Customer c) { if (c == null) { return BadRequest(); // 400 Bad request. } Customer? addedCustomer = await _repo.CreateAsync(c); 