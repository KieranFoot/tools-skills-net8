Implementing Interfaces and Inheriting Classes 330 3. In Program.cs, add statements to create two new instances of DisplacementVector, add them together, and output the result, as shown in the following code: DisplacementVector dv1 = new(3, 5); DisplacementVector dv2 = new(-2, 7); DisplacementVector dv3 = dv1 + dv2; WriteLine($"({dv1.X}, {dv1.Y}) + ({dv2.X}, {dv2.Y}) = ({dv3.X}, {dv3.Y})"); 4. Run the PeopleApp project and view the result, as shown in the following output: (3, 5) + (-2, 7) = (1, 12) Value types always have a default constructor even if an explicit one is not defined because the values on the stack must be initialized, even if they are initialized to default values. For the two integer fields in DisplacementVector, they will be initialized to 0. 5. In Program.cs, add statements to create a new instance of DisplacementVector, and output the objectâ€™s properties, as shown in the following code: DisplacementVector dv4 = new(); WriteLine($"({dv4.X}, {dv4.Y})"); 6. Run the PeopleApp project and view the result, as shown in the following output: (0, 0) 7. In Program.cs, add statements to create a new instance of DisplacementVector, and compare it to dv1, as shown in the following code: DisplacementVector dv5 = new(3, 5); WriteLine($"dv1.Equals(dv5): {dv1.Equals(dv5)})"); WriteLine($"dv1 == dv5: {dv1 == dv5})"); 8. Note that you cannot compare struct variables using ==, but you can call the Equals method, which has a default implementation that compares all fields within the struct for equality. We could now make our struct overload the == operator ourselves, but an easier way is to use a feature introduced with C# 10: record struct types. Good Practice: If the total memory used by all the fields in your type is 16 bytes or less, your type only uses value types for its fields, and you will never want to derive from your type, then Microsoft recommends that you use struct. If your type uses more than 16 bytes of stack memory, it uses reference types for its fields, or you might want to inherit from it, then use class. 