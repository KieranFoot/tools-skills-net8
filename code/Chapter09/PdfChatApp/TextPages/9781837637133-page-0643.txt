Building Efficient Microservices Using gRPC 610 5. In the top navigation bar, click Employees, and note employees and their birth dates and photos are included in the table, as shown in Figure 13.11: Figure 13.11: Employees including birth dates and photos using timestamp and bytes 6. Close the browser and shut down the web servers. You’ve now seen how to use gRPC to build several services that work with data. Now let’s see some more advanced features of gRPC. Implementing interceptors and handling faults gRPC interceptors are a way to perform additional processing during requests and responses and they can be injected at the client or service. They are often used for logging, monitoring, and validation. Adding a client-side interceptor Let’s add a client-side gRPC interceptor for logging: 1. In the Northwind.Grpc.Client.Mvc project, add a new folder named Interceptors. Interceptors folder, add a new class file named ClientLoggingInterceptor.cs, and 2. In the then add statements to define an interceptor, as shown in the following code: using Grpc.Core.Interceptors; // To use Interceptor and so on. using Grpc.Core; // To use AsyncUnaryCall<T>. namespace Northwind.Grpc.Client.Mvc.Interceptors; public class ClientLoggingInterceptor : Interceptor { private readonly ILogger _logger; 