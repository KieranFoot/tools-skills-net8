Building and Consuming Web Services 740 3. Click OK. Navigate to Debug | Start Debugging or Debug | Start Without Debugging or click the equivalent 4. buttons in the toolbar to start all the projects that you selected. You can learn more about multi-project startup using Visual Studio 2022 at the follow- ing link: https://learn.microsoft.com/en-us/visualstudio/ide/how-to-set- multiple-startup-projects. If you are using Visual Studio Code If you need to start multiple projects at the command line with dotnet, then write a script or batch file to execute multiple dotnet run commands, or open multiple command prompt or terminal windows. If you need to debug multiple projects using Visual Studio Code, then after youâ€™ve started the first debug session, you can just launch another session. Once the second session is running, the user interface switches to multi-target mode. For example, in the CALL STACK, you will see both named projects with their own threads, and then the debug toolbar shows a drop-down list of sessions with the active one selected. Alternatively, you can define compound launch configurations in the launch.json. You can learn more about multi-target debugging using Visual Studio Code at the follow- ing link: https://code.visualstudio.com/Docs/editor/debugging#_multitarget- debugging. Starting the web service and MVC client projects Now we can try out the web service with the MVC client calling it: 1. Start the Northwind.WebApi project and confirm that the web service is listening on ports 5151 and 5150, as shown in the following output: info: Microsoft.Hosting.Lifetime[14] Now listening on: https://localhost:5151 info: Microsoft.Hosting.Lifetime[14] Now listening on: http://localhost:5150 2. Start the Northwind.Mvc project and confirm that the website is listening on ports 5141 and 5140, as shown in the following output: info: Microsoft.Hosting.Lifetime[14] Now listening on: https://localhost:5141 info: Microsoft.Hosting.Lifetime[14] Now listening on: http://localhost:5140 3. Start Chrome and navigate to https://localhost:5141/. 