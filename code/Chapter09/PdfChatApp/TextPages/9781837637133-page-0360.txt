Chapter 8 327 Let’s see some examples of calling the web service from a web page with a different origin and from a .NET app. Configuring HTTP logging for the web service First, let’s enable HTTP logging for the web service and configure it to show the origin of requests: 1. In the Northwind.WebApi.Service project, add a new class file named IServiceCollection. . Extensions.cs IServiceCollection.Extensions.cs, import the namespace for controlling which HTTP 2. In fields are logged, and then define an extension method for the IServiceCollection interface Origin header and all fields including the response body, to add HTTP logging, including the as shown in the following code: using Microsoft.AspNetCore.HttpLogging; // To use HttpLoggingFields. namespace Packt.Extensions; public static class IServiceCollectionExtensions { public static IServiceCollection AddCustomHttpLogging( this IServiceCollection services) { services.AddHttpLogging(options => { // Add the Origin header so it will not be redacted. options.RequestHeaders.Add("Origin"); // By default, the response body is not included. options.LoggingFields = HttpLoggingFields.All; }); return services; } } 3. In Program.cs, before the call to builder.Build(), add a statement to add custom HTTP logging, as shown in the following code: builder.Services.AddCustomHttpLogging(); 4. In Program.cs, after the call to UseHttpsRedirection(), add a statement to use HTTP logging, as shown in the following code: app.UseHttpLogging(); 