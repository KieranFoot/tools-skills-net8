Chapter 6 317 // use the string implementation of CompareTo. position = Name.CompareTo(other.Name); } else if ((Name is not null) && (other.Name is null)) { position = -1; // this Person precedes other Person. } else if ((Name is null) && (other.Name is not null)) { position = 1; // this Person follows other Person. } else { position = 0; // this and other are at same position. } } else if (other is null) { position = -1; // this Person precedes other Person. } else { position = 0; // this and other are at same position. } return position; We have chosen to compare two Person instances by comparing their Name fields. Person instances will, therefore, be sorted alphabetically by their name. null val- ues will be sorted to the bottom of the collection. Storing the calculated position before returning it is useful when debugging. Iâ€™ve also used more round brackets than the compiler needs to make the code easier for me to read. If you prefer fewer brackets, then feel free to remove them. 10. Run the PeopleApp project, and note that this time it works as it should, sorted alphabetically by name, as shown in the following output: Initial list of people: Simon <null> Person Jenny Adam <null> Name 