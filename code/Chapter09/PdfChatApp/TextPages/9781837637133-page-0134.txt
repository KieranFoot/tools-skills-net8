Chapter 3 101 Action Entities in data context Row in database Query for customers in Germany Alfred’s Futterkiste, 123-4567 Alfred’s Futterkiste, 123-4567 Change telephone in database Alfred’s Futterkiste, 123-4567 Alfred’s Futterkiste, 123-9876 Query for customers starting with A Alfred’s Futterkiste, 123-4567 Alfred’s Futterkiste, 123-9876 Alfred’s Futterkiste, 123-9876 Query for customers in Germany Alfred’s Futterkiste, 123-4567 Alfred’s Futterkiste, 123-9876 Alfred’s Futterkiste, 123-9876 Alfred’s Futterkiste, 123-9876 Alfred’s Futterkiste, 123-9876 Change telephone in entity Alfred’s Futterkiste, 123-4567 Alfred’s Futterkiste, 123-9876 Alfred’s Futterkiste, 123-1928 Alfred’s Futterkiste, 123-9876 Save changes Alfred’s Futterkiste, 123-4567 Alfred’s Futterkiste, 123-9876 Alfred’s Futterkiste, 123-1928 Table 3.3: No tracking scenario The same scenario using no tracking with identity resolution No tracking with identity resolution. Once an entity is loaded into the data context, underlying changes are not reflected and only one copy exists. No local entity changes are tracked, so SaveChanges does nothing, as shown in Table 3.4: Action Entities in data context Row in database Query for customers in Germany Alfred’s Futterkiste, 123-4567 Alfred’s Futterkiste, 123-4567 Change telephone in database Alfred’s Futterkiste, 123-4567 Alfred’s Futterkiste, 123-9876 Query for customers starting with A Alfred’s Futterkiste, 123-4567 Alfred’s Futterkiste, 123-9876 Query for customers in Germany Alfred’s Futterkiste, 123-4567 Alfred’s Futterkiste, 123-9876 Change telephone in entity Alfred’s Futterkiste, 123-1928 Alfred’s Futterkiste, 123-9876 Save changes Alfred’s Futterkiste, 123-1928 Alfred’s Futterkiste, 123-9876 Table 3.4: Identity resolution scenario Summary of tracking Which should you choose? Of course, it depends on your specific scenario. You will sometimes read blogs that excitedly tell you that you can dramatically improve your EF Core queries by calling AsNoTracking. But if you run a query that returns thousands of entities and then run the same query again within the same data context, you now have thousands of duplicates! This wastes memory and impacts performance. 