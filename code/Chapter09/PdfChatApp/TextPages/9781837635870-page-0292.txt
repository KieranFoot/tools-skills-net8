Chapter 5 273 { get { return string.Format("{0} was born on {1}.", arg0: Name, arg1: HomePlanet); } } // Two readonly properties defined using C# 6 or later // lambda expression body syntax. public string Greeting => $"{Name} says 'Hello!'"; public int Age => DateTime.Today.Year - Born.Year; #endregion Good Practice: This isn’t the best way to calculate someone’s age, but we aren’t learning how to calculate an age from a date and time of birth. If you need to do that properly, then read the discussion at the following link: https://stackoverflow. com/questions/9/how-do-i-calculate-someones-age-in-c. 2. In Program.cs, add the statements to get the properties, as shown in the following code: Person sam = new() { Name = "Sam", Born = new(1969, 6, 25, 0, 0, 0, TimeSpan.Zero) }; WriteLine(sam.Origin); WriteLine(sam.Greeting); WriteLine(sam.Age); 3. Run the PeopleApp project and view the result, as shown in the following output: Sam was born on Earth Sam says 'Hello!' 54 The output shows 54 because I ran the console app on July 5, 2023, when Sam was 54 years old. 