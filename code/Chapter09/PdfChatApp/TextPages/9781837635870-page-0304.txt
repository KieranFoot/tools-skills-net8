Chapter 5 285 Brand = "Mazda MX-5 RF", Color = "Soul Red Crystal Metallic", Wheels = 4 }; ImmutableVehicle repaintedCar = car with { Color = "Polymetal Grey Metallic" }; WriteLine($"Original car color was {car.Color}."); WriteLine($"New car color is {repaintedCar.Color}."); 3. Run the PeopleApp project to view the results, and note the change to the car color in the mutated copy, as shown in the following output: Original car color was Soul Red Crystal Metallic. New car color is Polymetal Grey Metallic. You could also release the memory for the car variable and the repaintedCar would still fully exist. Equality of record types One of the most important behaviors of record types is their equality. Two records with the same property values are considered equal. This may not sound surprising, but if you used a normal class instead of a record, then they would not be considered equal. Letâ€™s see: 1. In the PacktLibraryModern project, add a new file named Equality.cs. Equality.cs, define a class and a record type, as shown in the following code: 2. In namespace Packt.Shared; public class AnimalClass { public string? Name { get; set; } } public record AnimalRecord { public string? Name { get; set; } } 