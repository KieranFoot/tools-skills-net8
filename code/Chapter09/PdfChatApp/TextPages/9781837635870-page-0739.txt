Building and Consuming Web Services 720 Note the following: • The Create and Update methods both decorate the customer parameter with [FromBody] to POST request. tell the model binder to populate it with values from the body of the The Create method returns a response that uses the GetCustomer route so that the client • knows how to get the newly created resource in the future. We are matching up two methods to create and then get a customer. Create and Update methods would need to check the model state of the cus- • In the past, the 400 Bad tomer passed in the body of the HTTP request. If it is invalid, they should return a containing details of the model validation errors. This happens automatically now Request because the controller is decorated with [ApiController]. 1. In CustomersController.cs, add statements to define an action method that responds to HTTP DELETE requests, as shown in the following code: // DELETE: api/customers/[id] [HttpDelete("{id}")] [ProducesResponseType(204)] [ProducesResponseType(400)] [ProducesResponseType(404)] public async Task<IActionResult> Delete(string id) { Customer? existing = await _repo.RetrieveAsync(id); if (existing == null) { return NotFound(); // 404 Resource not found. } bool? deleted = await _repo.DeleteAsync(id); if (deleted.HasValue && deleted.Value) // Short circuit AND. { return new NoContentResult(); // 204 No content. } else { return BadRequest( // 400 Bad request. $"Customer {id} was found but failed to delete."); } } 2. Save all the changes. When an HTTP request is received by the service, it will create an instance of the Controller class, call the appropriate action method, return the response in the format preferred by the client, and release the resources used by the controller, including the repository and its data context. 