Building Web User Interfaces Using ASP.NET Core 630 7. Note the rendering of links to support Bootstrap and a site stylesheet, where ~ means the wwwroot folder in the project, as shown in the following markup: <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" /> <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" /> <link rel="stylesheet" href="~/Northwind.Mvc.styles.css" asp-append-version="true" /> 8. Note the rendering of a navigation bar in the header, as shown in the following markup: <body> <header> <nav class="navbar ..."> 9. Note the rendering of a collapsible <div> containing a partial view named _LoginPartial for logging in, and hyperlinks to allow users to navigate between pages using ASP.NET Core Tag Helpers with attributes like asp-controller and asp-action, as shown in the following markup: <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between"> <ul class="navbar-nav flex-grow-1"> <li class="nav-item"> <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a> </li> <li class="nav-item"> <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a> </li> </ul> <partial name="_LoginPartial" /> </div> The <a> elements use Tag Helper attributes named asp-controller and asp- action to specify the controller name and action name that will execute when the link is clicked on. The asp-area attribute can be used to organize and group pages within large, complex MVC websites. If you want to navigate to a feature in a Razor Class Library, then you can also use asp-area to specify the feature name. 