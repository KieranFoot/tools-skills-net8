Chapter 12 651 Note the following aspects: • Request Method is GET. Other HTTP methods that you could see here include POST, PUT, DELETE, HEAD, and PATCH. 200 OK. This means that the server found the resource that the brows- • Status Code is er requested and has returned it in the body of the response. Other status codes that GET request include 301 Moved Permanently, 400 Bad you might see in response to a , 401 Unauthorized, and 404 Not Found. Request • Request Headers sent by the browser to the web server include: • accept, which lists what formats the browser accepts. In this case, the browser HTML, XHTML, XML, and some image formats, but it will is saying it understands accept all other files (*/*). Default weightings, also known as quality values, are 1.0. XML is specified with a quality value of 0.9 so it is preferred less than HTML or XHTML. All other file types are given a quality value of 0.8 so are least preferred. accept-encoding, which lists what compression algorithms the browser under- • stands, in this case, GZIP, DEFLATE, and Brotli. • accept-language, which lists the human languages it would prefer the content 1.0, then to use. In this case, US English, which has a default quality value of any dialect of English, which has an explicitly specified quality value of 0.9, and then any dialect of Swedish, which has an explicitly specified quality value of 0.8. • Response Headers, content-encoding, which tells me the server has sent back the HTML web page response compressed using the GZIP algorithm because it knows that the client can decompress that format. (This is not visible in Figure 12.6 because there is not enough space to expand the Response Headers section.) 7. Close Chrome. Understanding client-side web development technologies When building websites, a developer needs to know more than just C# and .NET. On the client (that is, in the web browser), you will use a combination of the following technologies: • HTML5: This is used for the content and structure of a web page. • CSS3: This is used for the styles applied to elements on the web page. • JavaScript: This is used to code any business logic needed on the web page, for example, vali- dating form input or making calls to a web service to fetch more data needed by the web page. Although HTML5, CSS3, and JavaScript are the fundamental components of frontend web development, there are many additional technologies that can make frontend web development more productive, including: • Bootstrap, the world’s most popular frontend open-source toolkit. • SASS and LESS, CSS preprocessors for styling. 