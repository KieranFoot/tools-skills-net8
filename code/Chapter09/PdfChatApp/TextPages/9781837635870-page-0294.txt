Chapter 5 275 _favoritePrimaryColor = value; break; default: throw new ArgumentException( $"{value} is not a primary color. " + "Choose from: red, green, blue."); } } } Good Practice: Avoid adding too much code to your getters and setters. This could indicate a problem with your design. Consider adding private methods that you then call in the set and get methods to simplify your implementations. 4. In Program.cs, add statements to set Samâ€™s favorite ice cream and color, and then write them out, as shown in the following code: sam.FavoriteIceCream = "Chocolate Fudge"; WriteLine($"Sam's favorite ice-cream flavor is {sam.FavoriteIceCream}."); string color = "Red"; try { sam.FavoritePrimaryColor = color; WriteLine($"Sam's favorite primary color is {sam. FavoritePrimaryColor}."); } catch (Exception ex) { WriteLine("Tried to set {0} to '{1}': {2}", nameof(sam.FavoritePrimaryColor), color, ex.Message); } The print book is limited to about 820 pages. If I added exception handling code to all code examples as we have done here, then I would probably have to remove at least one chapter from the book to make enough space. In the future, I will not explicitly tell you to add exception handling code, but get into the habit of adding it yourself when needed. 