Chapter 13 689 AddDbContext<T> Your DbContext type and its optional DbContextOptions<TContext>. A custom extension method we created to make it easier to register the AddNorthwindContext NorthwindContext class for either SQLite or SQL Server based on the project referenced. Table 13.2: Common methods that register dependency services You will see more examples of using these extension methods to register services in the next few chapters when working with ASP.NET Core MVC and ASP.NET Core Web API services. Setting up the HTTP pipeline After building the web application and its services, the next statements configure the HTTP pipeline through which HTTP requests and responses flow in and out. The pipeline is made up of a connect- ed sequence of delegates that can perform processing and then decide to either return a response themselves or pass processing on to the next delegate in the pipeline. Responses that come back can also be manipulated. Remember that delegates define a method signature that a delegate implementation can plug into. You might want to refer to Chapter 6, Implementing Interfaces and Inheriting Classes, to refresh your understanding of delegates. The delegate for the HTTP request pipeline is simple, as shown in the following code: public delegate Task RequestDelegate(HttpContext context); You can see that the input parameter is an HttpContext. This provides access to everything you might need to process the incoming HTTP request, including the URL path, query string parameters, cookies, and user agent. These delegates are often called middleware because they sit in between the browser client and the website or web service. Middleware delegates are configured using one of the following methods or a custom method that calls them itself: • Run: Adds a middleware delegate that terminates the pipeline by immediately returning a response instead of calling the next middleware delegate. Map: Adds a middleware delegate that creates a branch in the pipeline when there is a matching • request usually based on a URL path like /hello. Use: Adds a middleware delegate that forms part of the pipeline so it can decide if it wants to • pass the request to the next delegate in the pipeline. It can modify the request and response before and after the next delegate. 