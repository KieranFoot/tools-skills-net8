Working with Common .NET Types 426 3. Run the code, view the result, and note that a lowercase “a” is “less than” (-1) an upper case “A,” so the comparison returns -1. But we can either set an option to ignore case, or even better, do a culture- and case-invariant comparison to treat the two string values as equal (0), as shown in the following output: text1: Mark, text2: MARK Compare: -1. Compare (ignoreCase): 0. Compare (InvariantCultureIgnoreCase): 0. More Information: You can learn more about string comparisons at the following link: https://learn.microsoft.com/en-us/globalization/locale/sorting-and- string-comparison. Joining, formatting, and other string members There are many other string members, as shown in Table 8.4: Member Description These methods trim whitespace characters such as space, tab, Trim, TrimStart, TrimEnd and carriage return from the start and/or end. ToUpper, ToLower These convert all the characters into uppercase or lowercase. Insert, Remove These methods insert or remove some text. Replace This replaces some text with other text. This can be used instead of allocating memory each time you string.Empty use a literal string value using an empty pair of double quotes (""). This concatenates two string variables. The + operator does the string.Concat equivalent when used between string operands. This concatenates one or more string variables with a character string.Join in between each one. string.IsNullOrEmpty This checks whether a string variable is null or empty. This checks whether a string variable is null or whitespace; that is, a mix of any number of horizontal and vertical spacing string.IsNullOrWhiteSpace characters, for example, tab, space, carriage return, line feed, and so on. An alternative method to string interpolation for outputting string.Format formatted string values, which uses positioned instead of named parameters. Table 8.4: Joining, formatting, and other string members 