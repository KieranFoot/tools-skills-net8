Building Your Own Types with Object-Oriented Programming 276 5. Run the PeopleApp project and view the result, as shown in the following output: Sam's favorite ice-cream flavor is Chocolate Fudge. Sam's favorite primary color is Red. 6. Try to set the color to any value other than red, green, or blue, like black. PeopleApp project and view the result, as shown in the following output: 7. Run the Tried to set FavoritePrimaryColor to 'Black': Black is not a primary color. Choose from: red, green, blue. Good Practice: Use properties instead of fields when you want to execute state- ments during a read or write to a field without using a method pair, like GetAge and SetAge. Limiting flags enum values Earlier in this chapter we defined a field to store a person’s favorite ancient wonder. But we then made the enum able to store combinations of values. Now let’s limit the favorite to one: 1. In Person.cs, comment out the FavoriteAncientWonder field and add a comment to note it has moved to the PersonAutoGen.cs code file, as shown in the following code: // This has been moved to PersonAutoGen.cs as a property. // public WondersOfTheAncientWorld FavoriteAncientWonder; 2. In PersonAutoGen.cs, add a private field and public property for FavoriteAncientWonder, as shown in the following code: private WondersOfTheAncientWorld _favoriteAncientWonder; public WondersOfTheAncientWorld FavoriteAncientWonder { get { return _favoriteAncientWonder; } set { string wonderName = value.ToString(); if (wonderName.Contains(',')) { throw new ArgumentException( message: "Favorite ancient wonder can only have a single enum value.", paramName: nameof(FavoriteAncientWonder)); } 