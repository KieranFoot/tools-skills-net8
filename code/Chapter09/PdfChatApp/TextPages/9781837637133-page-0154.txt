Chapter 3 121 Now letâ€™s implement this for Northwind Employee entities: 1. In the Northwind.Common.EntityModels.SqlServer project, add a new file named IHasLastRefreshed.cs, and modify its contents to define the interface, as shown in the fol- lowing code: namespace Northwind.EntityModels; public interface IHasLastRefreshed { DateTimeOffset LastRefreshed { get; set; } } 2. In the Northwind.Common.EntityModels.SqlServer project, add a new file named EmployeePartial.cs, and modify its contents to implement the interface, as shown high- lighted in the following code: using System.ComponentModel.DataAnnotations.Schema; // [NotMapped] namespace Northwind.EntityModels; public partial class Employee : IHasLastRefreshed { [NotMapped] public DateTimeOffset LastRefreshed { get; set; } } Good Practice: Add extension code like this to a separate partial entity class file so that you can later regenerate the Employee.cs file using the dotnet-ef tool without overwriting your additional code. 3. In the Northwind.Common.DataContext.SqlServer project, add a new file named SetLastRefreshedInterceptor.cs, and modify its contents to define the interceptor, as shown in the following code: // IMaterializationInterceptor, MaterializationInterceptionData using Microsoft.EntityFrameworkCore.Diagnostics; namespace Northwind.EntityModels; public class SetLastRefreshedInterceptor : IMaterializationInterceptor { public object InitializedInstance( 