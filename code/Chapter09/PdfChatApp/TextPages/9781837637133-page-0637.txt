Building Efficient Microservices Using gRPC 604 5. Rebuild the project to make sure the gRPC tool has created the C# classes in the obj\Debug\ folder, as shown in Figure 13.9: net8.0\Protos Figure 13.9: gRPC tool-generated classes for a custom decimal type with a Units property 6. In the Northwind.Grpc.Service project, add a new folder named Converters. In the Converters folder, add a new class file named DecimalValue.Converters.cs, and modify 7. its contents to extend the partial class created by the gRPC tools with a constructor and a pair DecimalValue type and the built-in .NET decimal of operators to convert between our custom type, as shown in the following code: namespace Northwind.Grpc.Service; // This will merge with the DecimalValue type generated by the // gRPC tools in the obj\Debug\net8.0\Protos\Decimal.cs file. public partial class DecimalValue { private const decimal NanoFactor = 1_000_000_000; public DecimalValue(long units, int nanos) { Units = units; Nanos = nanos; } public static implicit operator decimal(DecimalValue grpcDecimal) { return grpcDecimal.Units + (grpcDecimal.Nanos / NanoFactor); } 