Chapter 11 483 proxy = Clients.Client(Users[userOrGroup].ConnectionId); } else // Assume the item is a group name to send the message to. { message.To = $"Group: {userOrGroup}"; proxy = Clients.Group(userOrGroup); } await proxy.SendAsync("ReceiveMessage", message); } } } Note the following: • ChatHub has a private field to store a list of registered users. It is a dictionary with their name as a unique key. ChatHub has two methods that a client can call: Register and SendMessage. • Register has a single parameter of type UserModel. The user’s name, connection ID, • and groups are stored in the static dictionary so that the user’s name can be used to look up the connection ID later and send messages directly to that one user. After reg- istering a new user or updating the registration of an existing user, a message is sent back to the client informing them of success. SendMessage has a single parameter of type MessageModel. The method branches based • on the value of the To property. If To does not have a value, it calls the All property to get a proxy that will communicate with every client. If To has a value, the string is split using comma separators into an array. Each item in the array is checked to see if it matches a user in Users. If it matches, it calls the Client method to get a proxy that will communicate just with that one client. If it does not match, the item might be a Group method to get a proxy that will communicate with just the group, so it calls the members of that group. Finally, it sends the message asynchronously using the proxy. 6. In Program.cs, import the namespace for your SignalR hub, as shown in the following code: using Northwind.SignalR.Service.Hubs; // To use ChatHub. 7. In the section that configures services, add a statement to add support for SignalR to the ser- vices collection, as shown in the following code: builder.Services.AddSignalR(); 8. In the section that configures the HTTP pipeline, before the call to map controller routes, add a statement to map the relative URL path /chat to your SignalR hub, as shown in the following code: app.MapHub<ChatHub>("/chat"); 