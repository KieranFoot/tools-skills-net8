Managing NoSQL Data Using Azure Cosmos DB 154 double totalCharge = 0.0; try { using (CosmosClient client = new( accountEndpoint: endpointUri, authKeyOrResourceToken: primaryKey)) { Container container = client.GetContainer( databaseId: "Northwind", containerId: "Products"); using (NorthwindContext db = new()) { if (!db.Database.CanConnect()) { WriteLine("Cannot connect to the SQL Server database to " + " read products using database connection string: " + db.Database.GetConnectionString()); return; } ProductCosmos[] products = db.Products // Get the related data for embedding. .Include(p => p.Category) .Include(p => p.Supplier) // Filter any products with null category or supplier // to avoid null warnings. .Where(p => (p.Category != null) && (p.Supplier != null)) // Project the EF Core entities into Cosmos JSON types. .Select(p => new ProductCosmos { id = p.ProductId.ToString(), productId = p.ProductId.ToString(), productName = p.ProductName, quantityPerUnit = p.QuantityPerUnit, // If the related category is null, store null, 