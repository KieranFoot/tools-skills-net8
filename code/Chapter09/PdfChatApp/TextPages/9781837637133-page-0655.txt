Building Web User Interfaces Using ASP.NET Core 622 ASP.NET Core has many Razor file types, which can be confusing because they all use the term “Razor”, so I will now remind you of them and highlight the important similarities and differences, as shown in Table 14.1: Technology Special filename File extension Directive .razor Razor Component (for Blazor) .razor @page Razor Component (for Blazor with page routing) .cshtml @page Razor Page .cshtml Razor View (for MVC) _{customname} .cshtml Razor Layout _{customname} .cshtml Razor View (partial) _ViewStart .cshtml Razor View Start _ViewImports .cshtml Razor View Imports Table 14.1: Important similarities and differences between Razor files Warning! Be careful to use the correct file extension and directive at the top of the file or you will get unexpected behavior. A Razor View file is technically identical to a Razor Layout or a Razor View (partial). That is why it is so important to follow the convention of prefixing a layout or partial view with an underscore. What turns a Razor View into a Razor Layout is the name of the Razor file being set as the Layout property of another Razor file or the default layout in the _ViewStart.cshtml file, as shown in the following code: @{ Layout = "_LayoutWithAdverts"; } What turns a Razor View into a Razor View (partial) is the Razor View name being used in a <partial> component on a page, as shown in the following code: <partial name="_Product" model="product" /> Good Practice: The naming convention for special and shared Razor files like layouts and partial views is to prefix them with an underscore _, for example, _ViewStart.cshtml, _Layout.cshtml, or _Product.cshtml (this might be a partial view for rendering a product). 