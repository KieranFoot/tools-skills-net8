15 Building User Interfaces Using Blazor This chapter is about using Blazor to build user interfaces. You will learn how to build Blazor com- ponents that can execute their C# and .NET code on the web server or in the web browser. When components execute on the server, Blazor uses SignalR to communicate needed updates to the user interface in the browser. When components execute in the browser using WebAssembly, they must make HTTP calls to interact with data on the server. In this chapter, we will cover the following topics: • History of Blazor • Reviewing the Blazor Web App project template • Building components using Blazor • Enabling client-side execution using WebAssembly History of Blazor Blazor lets you build interactive web user interface components using C# instead of JavaScript. Blazor is supported on all modern browsers. JavaScript and friends Traditionally, any code that needs to be executed in a web browser must be written using the JavaS- cript programming language or a higher-level technology that transpiles (transforms or compiles) into JavaScript. This is because all browsers have supported JavaScript for over two decades, so it is the lowest common denominator for implementing business logic in the client. JavaScript does have some issues, however. Although it has superficial similarities to C-style languages like C# and Java, it is actually very different once you dig beneath the surface. It is a dynamically typed pseudo-functional language that uses prototypes instead of class inheritance for object reuse. It might look human, but you will get a surprise when it’s revealed to be a Skrull. 