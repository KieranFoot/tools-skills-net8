Working with Common .NET Types 438 5. Right-click the DigitsOnly partial method, select Go To Definition, and note that you can review the implementation of the auto-generated partial methods, as shown in Figure 8.5: Figure 8.5: The auto-generated source code for the regular expression 6. Run the project and confirm that the functionality is the same as before. You can learn more about the improvements to regular expressions with .NET 7 at the following link: https://devblogs.microsoft.com/dotnet/regular-expression- improvements-in-dotnet-7. Storing multiple objects in collections Another of the most common types of data is collections. If you need to store multiple values in a variable, then you can use a collection. A collection is a data structure in memory that can manage multiple items in different ways, although all collections have some shared functionality. The most common types in .NET for working with collections are shown in Table 8.8: Namespace Example type(s) Description IEnumerable, System Interfaces and base classes used by collections. .Collections IEnumerable<T> List<T>, Introduced in C# 2.0 with .NET Framework 2.0. System Dictionary<T>, These collections allow you to specify the type you .Collections want to store using a generic type parameter (which Queue<T>, .Generic is safer, faster, and more efficient). Stack<T> BlockingCollection, System These collections are safe to use in multithreaded .Collections ConcurrentDictionary, scenarios. .Concurrent ConcurrentQueue 