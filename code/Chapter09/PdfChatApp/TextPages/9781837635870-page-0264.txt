Chapter 5 245 The format code for arg1 is one of the standard date and time formats. D means a long date format and d would mean a short date format. You can learn more about standard date and time format codes at the following link: https://learn. microsoft.com/en-us/dotnet/standard/base-types/standard-date-and- time-format-strings. 2. Run the PeopleApp project and view the result, as shown in the following output: Bob Smith was born on Wednesday, December 22, 1965. If you change the call to ConfigureConsole to use your local computer culture or a specified culture like French in France ("fr-FR"), then your output will look different. Setting field values using object initializer syntax You can also initialize fields using a shorthand object initializer syntax with curly braces, which was introduced with C# 3. Letâ€™s see how: 1. Add statements underneath the existing code to create another new person named Alice. Note the different standard format code for the date and time of birth when writing her to the con- sole, as shown in the following code: Person alice = new() { Name = "Alice Jones", Born = new(1998, 3, 7, 16, 28, 0, // This is an optional offset from UTC time zone. TimeSpan.Zero) }; WriteLine(format: "{0} was born on {1:d}.", // Short date. arg0: alice.Name, arg1: alice.Born); We could have used string interpolation to format the output, but for long strings, it will wrap over multiple lines, which can be harder to read in a printed book. In the code examples in this book, remember that {0} is a placeholder for arg0, and so on. 2. Run the PeopleApp project and view the result, as shown in the following output: Alice Jones was born on 3/7/1998. Good Practice: Use named parameters to pass arguments, so it is clearer what the values mean, especially for types like DateTimeOffset where there are a bunch of numbers one after the other. 