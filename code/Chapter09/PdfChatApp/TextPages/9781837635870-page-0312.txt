6 Implementing Interfaces and Inheriting Classes This chapter is about deriving new types from existing ones using object-oriented programming (OOP). You will learn how to use operators as an alternative method to implement simple functionality, and you will learn how to use generics to make your code safer and more performant. You will learn about delegates and events to exchange messages between types. You will see the differences between reference and value types. You will implement interfaces for common functionality. You will create a derived class to inherit from a base class to reuse functionality, override an inherited type member, and use polymorphism. Finally, you will learn how to create extension methods and cast between classes in an inheritance hierarchy. This chapter covers the following topics: • Setting up a class library and console application • Static methods and overloading operators • Making types safely reusable with generics • Raising and handling events • Implementing interfaces • Managing memory with reference and value types null values • Working with • Inheriting from classes • Casting within inheritance hierarchies • Inheriting and extending .NET types • Summarizing custom type choices 