Chapter 9 477 This reads from streams as .NET types. For example, the ReadDecimal method reads the next 16 bytes from the underlying System.IO BinaryReader stream as a decimal value, and the ReadInt32 method reads the next 4 bytes as an int value. This writes to streams as .NET types. For example, the Write method with a decimal parameter writes 16 bytes to the System.IO BinaryWriter underlying stream, and the Write method with an int parameter writes 4 bytes. System.Xml XmlReader This reads from the underlying stream using the XML format. System.Xml XmlWriter This writes to the underlying stream using the XML format. Table 9.5: Stream helper classes Building a stream pipeline It is very common to combine a helper like StreamWriter and multiple function streams like CryptoStream and GZipStream with a storage stream like FileStream into a pipeline, as shown in Figure 9.4: Figure 9.4: Writing plain text, then encrypting and compressing it into a file stream Your code would just call a simple helper method like WriteLine to send a string value like "Hello" through the pipeline until it arrives at its final destination having been encrypted and compressed so it gets written to the file as "G7x" (or whatever it would be). Writing to text streams When you open a file to read or write to it, you use resources outside of .NET. These are called unman- aged resources and must be disposed of when you are done working with them. To deterministically control when they are disposed of, we can call the Dispose method. When the Stream class was first designed, all cleanup code was expected to go in the Close method. But later, the concept of IDisposable was added to .NET and Stream had to implement a Dispose method. Later, the using statement was added to .NET, which can automatically call Dispose. So today, you can call Close or Dispose, and they actually do the same thing. either Let’s type some code to write text to a stream: 1. Use your preferred code editor to add a new Console App / console project named WorkingWithStreams to the Chapter09 solution: • In Visual Studio, set the startup project for the solution to the current selection. 2. In the project file, add an element to import the System.Console, System.Environment, and System.IO.Path classes statically and globally. 