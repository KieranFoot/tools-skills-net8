Chapter 10 459 } ], 7. Add a third request that will trigger the timer function manually without having to wait for the hour mark by sending a POST request with an empty JSON document in the body to its admin endpoint, as shown in the following code: ### Make a manual request to the Timer function. POST {{base_address}}admin/functions/ScrapeAmazonFunction Content-Type: application/json {} 8. Send the third request and note that it was successfully accepted, as shown in the following response: HTTP/1.1 202 Accepted 9. Remove the {} in the body of the request, send it again, and note the client error response from which we can deduce that an empty JSON document is required, as shown in the follow- ing response: HTTP/1.1 400 Bad Request 10. Add the empty JSON document back. 11. At the command prompt or terminal for the Azure Functions service, note that the function was triggered by our call. It outputs the time it was triggered (13:49 p.m.) and the time of its next occurrence in its normal timer schedule (2 p.m.) if I were to leave the service running, as shown in the following output: [2023-10-01T13:49:53.939Z] Executing 'Functions.ScrapeAmazonFunction' (Reason='This function was programmatically called via the host APIs.', Id=1df349a1-79c5-4b52-a7f1-d0f8f0d5cd9c) [2023-10-01T13:49:54.095Z] C# Timer trigger function executed at 01/10/2023 13:49:54. [2023-10-01T13:49:54.095Z] C# Timer trigger function next occurrence at: 01/10/2023 14:00:00. [2023-10-01T13:49:54.105Z] Start processing HTTP request GET https://www. amazon.com/12-NET-Cross-Platform-Development-Fundamentals/dp/1837635870/ [2023-10-01T13:49:54.106Z] Sending HTTP request GET https://www.amazon. com/12-NET-Cross-Platform-Development-Fundamentals/dp/1837635870/ [2023-10-01T13:49:54.520Z] Received HTTP response after 407.4353ms - OK [2023-10-01T13:49:54.521Z] End processing HTTP request after 420.1273ms - OK [2023-10-01T13:49:56.212Z] Successful HTTP request. 