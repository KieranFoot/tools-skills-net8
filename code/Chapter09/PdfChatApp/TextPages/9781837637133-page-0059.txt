Introducing Apps and Services with .NET 26 3. In Program.cs, confirm that its entire content is now just three statements, as shown in the following code: using static System.Console; WriteLine("Top-level functions example"); WhatsMyNamespace(); // Call the function. 4. Run the console app and note that it has the same behavior as before. What is automatically generated for a static function? When you use a separate file to define a partial Program class with static functions, the compil- er defines a Program class with a <Main>$ function and moves your top-level statements inside the <Main>$ method, and then merges your function as a member of the Program class, as shown in the following code: using static System.Console; partial class Program { static void <Main>$(String[] args) { WriteLine("Top-level functions example"); WhatsMyNamespace(); // Call the function. } static void WhatsMyNamespace() // Define a static function. { WriteLine("Namespace of Program class: {0}", arg0: typeof(Program).Namespace ?? "null"); } } This is much cleaner, and you can document your functions with XML comments, which also provide tooltips in your code editor when calling the function. Good Practice: Create any functions that you will call in Program.cs in a separate file and manually define them inside a partial Program class. This will merge them into the automatically generated Program class at the same level as the <Main>$ method, instead of as local functions inside the <Main>$ method. 