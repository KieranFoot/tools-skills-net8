Working with Data Using Entity Framework Core 520 If you are using Visual Studio 2022 If you are using Visual Studio Code and the dotnet run command, the compiled application exe- cutes in the WorkingWithEFCore folder, allowing it to locate the database file stored therein. But if you are using Visual Studio 2022, or JetBrains Rider, then the compiled application executes in the WorkingWithEFCore\bin\Debug\net8.0 folder, so it will not find the database file because it is not in that directory. Letâ€™s tell Visual Studio 2022 to copy the database file to the directory that it runs the code in so that it can find the file, but only if the database file is newer or is missing so it will not overwrite any database changes we make during runtime: 1. In Solution Explorer, right-click the Northwind.db file and select Properties. 2. In Properties, set Copy to Output Directory to Copy if newer. WorkingWithEFCore.csproj, note the new elements, as shown in the following markup: 3. In <ItemGroup> <None Update="Northwind.db"> <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory> </None> </ItemGroup> If you prefer to overwrite the data changes every time you start the project, then set CopyToOutputDirectory to Always. Managing the Northwind sample database with SQLiteStudio You can use a cross-platform graphical database manager named SQLiteStudio to easily manage SQLite databases: 1. Navigate to the following link, https://sqlitestudio.pl, and then download and install the application. 2. Start SQLiteStudio. 3. Navigate to Database | Add a database. In the Database dialog, in the File section, click on the yellow folder button to browse for an ex- 4. isting database file on the local computer, select the Northwind.db file in the WorkingWithEFCore project folder, and then click OK, as shown in Figure 10.3: 