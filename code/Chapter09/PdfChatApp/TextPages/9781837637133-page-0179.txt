Managing NoSQL Data Using Azure Cosmos DB 146 <Using Include="System.Console" Static="true" /> </ItemGroup> </Project> 3. Build the Northwind.CosmosDb.SqlApi project at the command prompt or terminal using the following command: dotnet build. Warning! If you are using Visual Studio 2022 and you reference a project outside of the current solution, then using the Build menu gives the following error: NU1105 Unable to find project information for 'C:\apps-services- net8\Chapter03\Northwind.Common.DataContext.SqlServer\Northwind. Common.DataContext.SqlServer.csproj'. If you are using Visual Studio, this may be because the project is unloaded or not part of the current solution. You must enter a dotnet build command at the command prompt or terminal. In Solution Explorer, you can right-click the project and select Open in Terminal. 4. Add a class file named Program.Helpers.cs, delete any existing statements, and then add statements to define a partial Program class with a method to output a section title to the con- sole, as shown in the following code: // This is defined in the default empty namespace, so it merges with // the SDK-generated partial Program class. partial class Program { static void SectionTitle(string title) { ConsoleColor previousColor = ForegroundColor; ForegroundColor = ConsoleColor.DarkYellow; WriteLine("*"); WriteLine($"* {title}"); WriteLine("*"); ForegroundColor = previousColor; } } 5. Add a class file named Program.Methods.cs. In Program.Methods.cs, add statements to import the namespace for working with Azure 6. Cosmos. Then, define a method for the Program class that creates a Cosmos client and uses it to create a database named Northwind and a container named Products, in either the local emulator or in the cloud, as shown in the following code: 