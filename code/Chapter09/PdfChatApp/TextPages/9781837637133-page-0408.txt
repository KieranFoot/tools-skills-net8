Chapter 9 375 public IEnumerable<Product> GetOutOfStockProducts() { return _db.Products .Where(p => p.UnitsInStock == 0 && !p.Discontinued); } // GET: api/products/discontinued [HttpGet] [Route("discontinued")] [Produces(typeof(Product[]))] public IEnumerable<Product> GetDiscontinuedProducts() { return _db.Products .Where(product => product.Discontinued); } // GET api/products/5 [HttpGet("{id:int}")] public async ValueTask<Product?> Get(int id) { return await _db.Products.FindAsync(id); } // GET api/products/cha [HttpGet("{name}")] public IEnumerable<Product> Get(string name) { return _db.Products.Where(p => p.ProductName.Contains(name)); } // POST api/products [HttpPost] public async Task<IActionResult> Post([FromBody] Product product) { _db.Products.Add(product); await _db.SaveChangesAsync(); return Created($"api/products/{product.ProductId}", product); } // PUT api/products/5 [HttpPut("{id}")] 