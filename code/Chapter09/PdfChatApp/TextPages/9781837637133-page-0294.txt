Chapter 7 261 4. Run the code, and note the results, as shown in the following output: Kids wake up: 25/12/2024 06:30:00 AM The kids woke me up at 06:30 AM Microseconds and nanoseconds In earlier versions of .NET, the smallest unit of time measurement was a tick. A tick is 100 nanoseconds, so developers used to have to do the calculation for nanoseconds themselves. .NET 7 introduced mil- lisecond and microsecond parameters to constructors, and microsecond and nanosecond properties DateTime, DateTimeOffset, TimeSpan, and TimeOnly types. to the Letâ€™s see some examples: 1. In Program.cs, add statements to construct a date and time value with more precision than was possible and to display its value, as shown in the following code: SectionTitle("Milli-, micro-, and nanoseconds"); DateTime preciseTime = new( year: 2022, month: 11, day: 8, hour: 12, minute: 0, second: 0, millisecond: 6, microsecond: 999); WriteLine($"Millisecond: {preciseTime.Millisecond}, Microsecond: { preciseTime.Microsecond}, Nanosecond: {preciseTime.Nanosecond}"); preciseTime = DateTime.UtcNow; // Nanosecond value will be 0 to 900 in 100 nanosecond increments. WriteLine($"Millisecond: {preciseTime.Millisecond}, Microsecond: { preciseTime.Microsecond}, Nanosecond: {preciseTime.Nanosecond}"); 2. Run the code, and note the results, as shown in the following output: *** Milli-, micro-, and nanoseconds Millisecond: 6, Microsecond: 999, Nanosecond: 0 Millisecond: 243, Microsecond: 958, Nanosecond: 400 Globalization with dates and times The current culture controls how dates and times are formatted and parsed: 1. At the top of Program.cs, import the namespace to work with globalization, as shown in the following code: using System.Globalization; // To use CultureInfo. 