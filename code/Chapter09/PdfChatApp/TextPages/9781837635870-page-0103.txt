Speaking C# 84 2. Run the code and view the output, as shown in Figure 2.6: Figure 2.6: Size and range information for common number data types An int variable uses four bytes of memory and can store positive or negative numbers up to about 2 billion. A double variable uses 8 bytes of memory and can store much bigger values! A decimal variable uses 16 bytes of memory and can store big numbers, but not as big as a double type. But you may be asking yourself, why might a double variable be able to store bigger numbers than a decimal variable, yet it’s only using half the space in memory? Well, let’s now find out! Comparing double and decimal types You will now write some code to compare double and decimal values. Although it isn’t hard to follow, don’t worry about understanding the syntax right now: 1. Type statements to declare two double variables, add them together, and compare them to the expected result. Then, write the result to the console, as shown in the following code: Console.WriteLine("Using doubles:"); double a = 0.1; double b = 0.2; if (a + b == 0.3) { Console.WriteLine($"{a} + {b} equals {0.3}"); } else { Console.WriteLine($"{a} + {b} does NOT equal {0.3}"); } 