Chapter 6 357 Let’s write some code: 1. In the PacktLibrary project, add a new class file named StringExtensions.cs. StringExtensions.cs, as shown in the following code, and note the following: 2. Modify • The class imports a namespace to handle regular expressions. IsValidEmail method is static, and it uses the Regex type to check for matches • The against a simple email pattern that looks for valid characters before and after the @ symbol: using System.Text.RegularExpressions; // To use Regex. namespace Packt.Shared; public class StringExtensions { public static bool IsValidEmail(string input) { // Use a simple regular expression to check // that the input string is a valid email. return Regex.IsMatch(input, @"[a-zA-Z0-9\.-_]+@[a-zA-Z0-9\.-_]+"); } } 3. In Program.cs, add statements to validate two examples of email addresses, as shown in the following code: string email1 = "pamela@test.com"; string email2 = "ian&test.com"; WriteLine("{0} is a valid e-mail address: {1}", arg0: email1, arg1: StringExtensions.IsValidEmail(email1)); WriteLine("{0} is a valid e-mail address: {1}", arg0: email2, arg1: StringExtensions.IsValidEmail(email2)); 4. Run the PeopleApp project and view the result, as shown in the following output: pamela@test.com is a valid e-mail address: True ian&test.com is a valid e-mail address: False 