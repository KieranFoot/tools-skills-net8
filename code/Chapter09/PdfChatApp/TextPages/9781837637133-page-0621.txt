Building Efficient Microservices Using gRPC 588 _shipperClient = factory.CreateClient<Shipper. ShipperClient>("Shipper"); } 7. In HomeController.cs, in the Index action method, add a parameter named id and statements to call the Shipper gRPC service to get a shipper with the matching ShipperId, as shown highlighted in the following code: public async Task<IActionResult> Index( string name = "Henrietta", int id = 1) { HomeIndexViewModel model = new(); try { HelloReply reply = await greeterClient.SayHelloAsync( new HelloRequest { Name = name }); model.Greeting = "Greeting from gRPC service: " + reply.Message; ShipperReply shipperReply = await _shipperClient.GetShipperAsync( new ShipperRequest { ShipperId = id }); model.ShipperSummary = "Shipper from gRPC service: " + $"ID: {shipperReply.ShipperId}, Name: {shipperReply.CompanyName}," + $" Phone: {shipperReply.Phone}."; } catch (Exception ex) { _logger.LogWarning($"Northwind.Grpc.Service is not responding."); model.ErrorMessage = ex.Message; } return View(); } 8. In Views/Home, in Index.cshtml, add code to render a form for the visitor to enter a shipper ID, and render the shipper details after the greeting, as shown highlighted in the following markup: @using Northwind.Grpc.Client.Mvc.Models @model HomeIndexViewModel @{ 