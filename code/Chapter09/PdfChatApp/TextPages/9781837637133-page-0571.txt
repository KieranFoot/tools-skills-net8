Combining Data Sources Using GraphQL 538 options.DefaultRequestHeaders.Accept.Add( new MediaTypeWithQualityHeaderValue( "application/json", 1.0)); }); 12. In the Controllers folder, in HomeController.cs, import the namespace to work with text encodings and for the local project models, as shown in the following code: using Northwind.Mvc.GraphQLClient.Models; // To use IndexViewModel. using System.Text; // To use Encoding. 13. Define a field to store the registered HTTP client factory, and set it in the constructor, as shown in the following code: protected readonly IHttpClientFactory _clientFactory; public HomeController(ILogger<HomeController> logger, IHttpClientFactory clientFactory) { _logger = logger; _clientFactory = clientFactory; } 14. In the Index action method, modify the method to be asynchronous. Then, add statements to call the GraphQL service, and note that the HTTP request is a POST, the media type is for an application/json document that contains a GraphQL query, and the query requests the ID, name, and number of units in stock for all products in a given category, passed as a parameter named id, as shown in the following code: public async Task<IActionResult> Index(string id = "1") { IndexViewModel model = new(); try { HttpClient client = _clientFactory.CreateClient( name: "Northwind.GraphQL.Service"); // First, try a simple GET request to service root. HttpRequestMessage request = new( method: HttpMethod.Get, requestUri: "/"); HttpResponseMessage response = await client.SendAsync(request); 