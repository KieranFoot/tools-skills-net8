Working with Data Using Entity Framework Core 576 { using NorthwindDb db = new(); int affected = 0; IQueryable<Product>? products = db.Products?.Where( p => p.ProductName.StartsWith(productNameStartsWith)); if (products is null || !products.Any()) { WriteLine("No products found to delete."); return 0; } else { affected = products.ExecuteDelete(); } return affected; } 6. In Program.cs, comment out previous method calls except ConfigureConsole, and then add statements to call DeleteProductsBetter, as shown in the following code: WriteLine("About to delete all products whose name starts with Bob."); Write("Press Enter to continue or any other key to exit: "); if (ReadKey(intercept: true).Key == ConsoleKey.Enter) { int deleted = DeleteProductsBetter(productNameStartsWith: "Bob"); WriteLine($"{deleted} product(s) were deleted."); } else { WriteLine("Delete was canceled."); } 7. Run the console app and confirm that the products are deleted, as shown in the following output: 3 product(s) were deleted. Warning! If you mix traditional tracked changes with the ExecuteUpdate and ExecuteDelete methods, then note that they are not kept synchronized. The change tracker will not know what you have updated and deleted using those methods. 