Chapter 9 475 Streams can also be used to process terminal input and output and networking resources, such as sockets and ports, that do not provide random access and cannot seek (that is, move) to a position. You can write code to process some arbitrary bytes without knowing or caring where they come from. Your code simply reads or writes to a stream, and another piece of code handles where the bytes are stored. Understanding abstract and concrete streams There is an abstract class named Stream that represents any type of stream. Remember that an abstract class cannot be instantiated using new; it can only be inherited. This is because it is only partially implemented. There are many concrete classes that inherit from this base class, including FileStream, MemoryStream, BufferedStream, GZipStream, and SslStream. They all work the same way. All streams implement IDisposable, so they have a Dispose method to release unmanaged resources. Some of the common members of the Stream class are described in Table 9.2: Member Description CanRead, These properties determine if you can read from and write to the stream. CanWrite These properties determine the total number of bytes and the current position Length, within the stream. These properties may throw a NotSupportedException for Position some types of streams, for example, if CanSeek returns false. This method closes the stream and releases its resources. You can call either Close, Dispose method since the implementation of Dispose calls Close! If the stream has a buffer, then this method writes the bytes in the buffer to the Flush stream, and the buffer is cleared. CanSeek This property determines if the Seek method can be used. Seek This method moves the current position to the one specified in its parameter. These methods read a specified number of bytes from the stream into a byte Read, ReadAsync array and advance the position. ReadByte This method reads the next byte from the stream and advances the position. Write, These methods write the contents of a byte array into the stream. WriteAsync WriteByte This method writes a byte to the stream. Table 9.2: Common members of the Stream class 