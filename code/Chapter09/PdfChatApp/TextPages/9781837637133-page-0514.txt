Chapter 11 481 // Try to get a stored user with a match on new user. if (Users.ContainsKey(newUser.Name)) { user = Users[newUser.Name]; // Remove any existing group registrations. if (user.Groups is not null) { foreach (string group in user.Groups.Split(',')) { await Groups.RemoveFromGroupAsync(user.ConnectionId, group); } } user.Groups = newUser.Groups; // Connection ID might have changed if the browser // refreshed so update it. user.ConnectionId = Context.ConnectionId; action = "updated your registered user"; } else { if (string.IsNullOrEmpty(newUser.Name)) { // Assign a GUID for name if they are anonymous. newUser.Name = Guid.NewGuid().ToString(); } newUser.ConnectionId = Context.ConnectionId; Users.Add(key: newUser.Name, value: newUser); user = newUser; } if (user.Groups is not null) { // A user does not have to belong to any groups // but if they do, register them with the Hub. foreach (string group in user.Groups.Split(',')) { 