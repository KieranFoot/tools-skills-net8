Working with Data Using Entity Framework Core 564 To disable tracking but perform identity resolution by default for an instance of a data context, set the change tracker’s query tracking behavior to NoTrackingWithIdentityResolution, as shown in the following code: db.ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTrackingWithIdentityResolution; To set defaults for all new instances of a data context, in its OnConfiguring method, call the UseQueryTrackingBehavior method, as shown in the following code: protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { optionsBuilder.UseSqlServer(connectionString) .UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking); } Three tracking scenarios First, let’s review a scenario using default tracking. The default is tracking with identity resolution. Once an entity is loaded into the data context, underlying changes are not reflected and only one copy exists locally. Entities have local changes tracked and a call to SaveChanges updates the database. Actions and states for scenario 1 are illustrated in Table 10.4: Action Entity in data context Row in database Query for customers in Germany Alfreds Futterkiste, 030-7432 Alfreds Futterkiste, 030-7432 Change telephone in database Alfreds Futterkiste, 030-7432 Alfreds Futterkiste, 030-9876 Query for customers starting with A Alfreds Futterkiste, 030-7432 Alfreds Futterkiste, 030-9876 Query for customers in Germany Alfreds Futterkiste, 030-7432 Alfreds Futterkiste, 030-9876 Change telephone in local entity Alfreds Futterkiste, 030-1928 Alfreds Futterkiste, 030-9876 Save changes Alfreds Futterkiste, 030-1928 Alfreds Futterkiste, 030-1928 Table 10.4: Scenario 1, change tracking with identity resolution Second, let’s compare the same set of actions using no tracking and no identity resolution. Every query loads another instance of a database row into the data context, including underlying changes, allowing duplicates and mixed out-of-date and updated data. No local entity changes are tracked, so SaveChanges does nothing. Actions and states for scenario 2 are illustrated in Table 10.5: Action Entities in data context Row in database Query for customers in Germany Alfreds Futterkiste, 030-7432 Alfreds Futterkiste, 030-7432 Change telephone in database Alfreds Futterkiste, 030-7432 Alfreds Futterkiste, 030-9876 Query for customers starting with A Alfreds Futterkiste, 030-7432 Alfreds Futterkiste, 030-9876 Alfreds Futterkiste, 030-9876 