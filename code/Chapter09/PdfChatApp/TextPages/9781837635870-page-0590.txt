Chapter 10 571 if (db.Products is null) return (0, 0); // Get the first product whose name starts with the parameter value. Product updateProduct = db.Products.First( p => p.ProductName.StartsWith(productNameStartsWith)); updateProduct.Cost += amount; int affected = db.SaveChanges(); return (affected, updateProduct.ProductId); } 2. In Program.cs, comment out the statements to add a new product, and then add statements to call IncreaseProductPrice and then ListProducts, as shown in the following code: var resultUpdate = IncreaseProductPrice( productNameStartsWith: "Bob", amount: 20M); if (resultUpdate.affected == 1) { WriteLine($"Increase price success for ID: {resultUpdate.productId}."); } ListProducts(productIdsToHighlight: new[] { resultUpdate.productId }); 3. Run the code, view the result, and note that the existing entity for Bobâ€™s Burgers has increased in price by $20, as shown in the following partial output: dbug: 05/03/2022 14:44:47.024 RelationalEventId.CommandExecuting[20100] (Microsoft.EntityFrameworkCore.Database.Command) Executing DbCommand [Parameters=[@__productNameStartsWith_0='Bob' (Size = 3)], CommandType='Text', CommandTimeout='30'] SELECT "p"."ProductId", "p"."CategoryId", "p"."UnitPrice", "p"."Discontinued", "p"."ProductName", "p"."UnitsInStock" FROM "Products" AS "p" WHERE NOT ("p"."Discontinued") AND (@__productNameStartsWith_0 = '' OR (("p"."ProductName" LIKE @__productNameStartsWith_0 || '%') AND substr("p"."ProductName", 1, length(@__productNameStartsWith_0)) = @__ productNameStartsWith_0) OR @__productNameStartsWith_0 = '') LIMIT 1 dbug: 05/03/2022 14:44:47.028 RelationalEventId.CommandExecuting[20100] (Microsoft.EntityFrameworkCore.Database.Command) 