Broadcasting Real-Time Communication Using SignalR 486 <input type="button" class="form-control" id="sendButton" value="Send Message" /> </div> </div> </div> <div class="row"> <div class="col"> <hr /> <h2>Messages received</h2> <ul id="messages"></ul> </div> </div> </div> <script src="~/js/signalr/dist/browser/signalr.js"></script> <script src="~/js/chat.js"></script> Note the following: • There are three sections on the page: Register User, Send Message, and Messages received. • The Register User section has two inputs for the visitor’s name, a comma-separated list of the groups that they want to be a member of, and a button to click to register. • The Send Message section has three inputs for the name of the user that the message is from, the names of users and groups that the message will be sent to, and the body of the message – and a button to click to send the message. • The Messages received section has a bullet list element that will be dynamically pop- ulated with a list item when a message is received. There are two script elements for the SignalR JavaScript client-side library and the • JavaScript implementation of the chat client. 2. In wwwroot/js, add a new JavaScript file named chat.js and modify its contents, as shown in the following code: "use strict"; var connection = new signalR.HubConnectionBuilder() .withUrl("/chat").build(); document.getElementById("registerButton").disabled = true; document.getElementById("sendButton").disabled = true; document.getElementById("myName").addEventListener("input", function () { 