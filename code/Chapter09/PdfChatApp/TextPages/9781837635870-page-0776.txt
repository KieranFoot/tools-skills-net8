Chapter 15 757 public string Country { get; set; } } The recommended way to handle a parameter that should have a default value when it is missing is to suffix the parameter with ? and use the null-coalescing operator in the OnParametersSet method, as shown in the following markup: @page "/customers/{country?}" <div>Country parameter as the value: @Country</div> @code { [Parameter] public string Country { get; set; } protected override void OnParametersSet() { // If the automatically set property is null, then // set its value to USA. Country = Country ?? "USA"; } } How to use the navigation link component with routes In HTML, you use the <a> element to define navigation links, as shown in the following markup: <a href="/customers">Customers</a> In Blazor, use the <NavLink> component, as shown in the following markup: <NavLink href="/customers">Customers</NavLink> The NavLink component is better than an anchor element because it automatically sets its class to active if its href is a match on the current location URL. If your CSS uses a different class name, then you can set the class name in the NavLink.ActiveClass property. By default, in the matching algorithm, the href is a path prefix, so if NavLink has an href of /customers, as shown in the preceding code example, then it would match all the following paths and set them active class style: all to have the /customers /customers/USA /customers/Germany/Berlin 