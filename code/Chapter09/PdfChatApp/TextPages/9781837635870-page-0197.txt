Writing, Debugging, and Testing Functions 178 To summarize, parameters define inputs to a function; arguments are passed to a function when calling the function. Good Practice: Try to use the correct term depending on the context, but do not get pedan- tic with other developers if they “misuse” a term. I must have used the terms parameter and argument thousands of times in this book. I’m sure some of those times I’ve been imprecise. Please do not @ me about it. Writing a function that returns a value The previous function performed actions (looping and writing to the console), but it did not return a value. Let’s say that you need to calculate sales or value-added tax (VAT). In Europe, VAT rates can range from 8% in Switzerland to 27% in Hungary. In the United States, state sales taxes can range from 0% in Oregon to 8.25% in California. Tax rates change all the time, and they vary based on many factors. The values used in this example do not need to be accurate. Let’s implement a function to calculate taxes in various regions around the world: 1. In Program.Functions.cs, in the Program class, write a function named CalculateTax, as shown in the following code: static decimal CalculateTax( decimal amount, string twoLetterRegionCode) { decimal rate = twoLetterRegionCode switch { "CH" => 0.08M, // Switzerland "DK" or "NO" => 0.25M, // Denmark, Norway "GB" or "FR" => 0.2M, // UK, France "HU" => 0.27M, // Hungary "OR" or "AK" or "MT" => 0.0M, // Oregon, Alaska, Montana "ND" or "WI" or "ME" or "VA" => 0.05M, "CA" => 0.0825M, // California _ => 0.06M // Most other states. }; return amount * rate; } 