Chapter 2 73 // If the previous line returned nothing then end the app. if (myApp is null) return; // Loop through the assemblies that my app references. foreach (AssemblyName name in myApp.GetReferencedAssemblies()) { // Load the assembly so we can read its details. Assembly a = Assembly.Load(name); // Declare a variable to count the number of methods. int methodCount = 0; // Loop through all the types in the assembly. foreach (TypeInfo t in a.DefinedTypes) { // Add up the counts of all the methods. methodCount += t.GetMethods().Length; } // Output the count of types and their methods. WriteLine("{0:N0} types with {1:N0} methods in {2} assembly.", arg0: a.DefinedTypes.Count(), arg1: methodCount, arg2: name.Name); } N0 is uppercase N followed by the digit zero. It is not uppercase N followed by uppercase O. It means “format a number (N) with zero (0) decimal places.” 4. Run the project. You will see the actual number of types and methods that are available to you in the simplest application when running on your operating system (OS). The number of types and methods displayed will be different depending on the OS that you are using, as shown in the following output on Windows: 0 types with 0 methods in System.Runtime assembly. 41 types with 639 methods in System.Console assembly. 112 types with 1,190 methods in System.Linq assembly. 