Broadcasting Real-Time Communication Using SignalR 498 return char.ConvertFromUtf32(Random.Shared.Next(65, 91)); } } 4. In the Northwind.SignalR.Client.Console.Streams project, in Program.cs, delete the existing statements. Import namespaces for working with SignalR as a client, and then add statements to prompt the user to enter a stock, create a hub connection, listen for received streams of stock prices, and then send an asynchronous stream of stocks to the service, as shown in the following code: using Microsoft.AspNetCore.SignalR.Client; // To use HubConnection. using Northwind.SignalR.Streams; // To use StockPrice. Write("Enter a stock (press Enter for MSFT): "); string? stock = ReadLine(); if (string.IsNullOrEmpty(stock)) { stock = "MSFT"; } HubConnection hubConnection = new HubConnectionBuilder() .WithUrl("https://localhost:5111/stockprice") .Build(); await hubConnection.StartAsync(); try { CancellationTokenSource cts = new(); IAsyncEnumerable<StockPrice> stockPrices = hubConnection.StreamAsync<StockPrice>( "GetStockPriceUpdates", stock, cts.Token); await foreach (StockPrice sp in stockPrices) { WriteLine($"{sp.Stock} is now {sp.Price:C}."); Write("Do you want to cancel (y/n)? "); ConsoleKey key = ReadKey().Key; if (key == ConsoleKey.Y) 