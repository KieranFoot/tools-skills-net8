Chapter 9 411 WriteLine("Queue name: {response.QueueName}, Message count: { response.MessageCount}, Consumer count: {response.ConsumerCount}."); WriteLine("Waiting for messages..."); EventingBasicConsumer consumer = new(channel); consumer.Received += (model, args) => { byte[] body = args.Body.ToArray(); ProductQueueMessage? message = JsonSerializer .Deserialize<ProductQueueMessage>(body); if (message is not null) { WriteLine("Received product. Id: {message.Product.ProductId }, Name: { message.Product.ProductName}, Message: { message.Text}"); } else { WriteLine($"Received unknown: {args.Body.ToArray()}."); } }; // Start consuming as messages arrive in the queue. channel.BasicConsume(queue: queueName, autoAck: true, consumer: consumer); WriteLine(">>> Press Enter to stop consuming and quit. <<<"); ReadLine(); 5. If your database server is not running (for example, because you are hosting it in Docker, a virtual machine, or in the cloud), then make sure to start it. Northwind.WebApi.Service project, using the https profile without debugging. 6. Start the Northwind.WebApi.Client.Mvc project, using the https profile without debugging. 7. Start the 