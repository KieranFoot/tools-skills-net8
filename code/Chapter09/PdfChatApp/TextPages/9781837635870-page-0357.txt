Implementing Interfaces and Inheriting Classes 338 To disable the nullability warning check feature at the project level, have the <Nullable> element set to disable in your project file, as highlighted in the following markup: <PropertyGroup> ... <Nullable>disable</Nullable> </PropertyGroup> You could also remove the <Nullable> element completely because the default, if not explicitly set, is disabled. To disable the feature at the file level, add the following to the top of a code file: #nullable disable To enable the feature at the file level, add the following to the top of a code file: #nullable enable Disabling null and other compiler warnings You could decide to enable the nullability feature at the project or file level but then disable some of the 50+ warnings related to it. Some common nullability warnings are shown in Table 6.4: Code Description CS8600 Converting a null literal or a possible null value to a non-nullable type. CS8601 A possible null reference assignment. CS8602 A dereference of a possibly null reference. CS8603 A possible null reference return. CS8604 A possible null reference argument for a parameter. CS8618 A non-nullable field â€˜<field_name>' must contain a non-null value when exiting a constructor. Consider declaring the field as nullable. CS8625 Cannot convert a null literal to a non-nullable reference type. CS8655 The switch expression does not handle some null inputs (it is not exhaustive). Table 6.4: Common nullability warnings You can disable compiler warnings for a whole project. To do so, add a NoWarn element with a semi- colon-separated list of compiler warning codes, as shown in the following markup: <NoWarn>CS8600;CS8602</NoWarn> To disable compiler warnings at the statement level, you can disable and then restore a specified compiler warning to temporarily suppress it for a block of statements, as shown in the following code: #pragma warning disable CS8602 WriteLine(firstName.Length); 