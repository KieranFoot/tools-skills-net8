14 Building Web User Interfaces Using ASP.NET Core This chapter is about building web user interfaces with ASP.NET Core. You will learn about ASP.NET Core MVC views, Razor syntax, HTML and Tag Helpers, internationalizing your website, and how to use Bootstrap for quick user interface prototyping. This chapter will cover the following topics: • Setting up an ASP.NET Core MVC website • Defining web user interfaces with Razor views • Localizing and globalizing with ASP.NET Core • Defining web user interfaces with Tag Helpers • Output caching Setting up an ASP.NET Core MVC website The Model-View-Controller (MVC) design pattern allows a clean separation between technical con- cerns, as shown in the following list: • Models: Classes that represent the data entities and view models used on the website. Views: Razor files, that is, .cshtml files, that render data in view models into HTML web pages. • Blazor uses the .razor file extension, but do not confuse them with Razor files! • Controllers: Classes that execute code when an HTTP request arrives at the web server. The controller methods usually create a view model that may contain entity models and pass it to a view to generate an HTTP response to send back to the web browser or other client. 