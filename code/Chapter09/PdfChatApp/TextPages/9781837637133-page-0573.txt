Combining Data Sources Using GraphQL 540 _logger.LogWarning( $"Northwind.GraphQL.Service exception: {ex.Message}"); model.Errors = new[] { new Error { Message = ex.Message } }; } return View(model); } Good Practice: To set the content of our request, we will use the C# 11 or later raw interpolated string literal syntax of three-dollar signs and three double quotes. This allows us to embed the id variable using three curly braces, which should not be confused with the two curly braces after unitsInStock, which end the query itself. 15. In the Views/Home folder, in Index.cshtml, delete its existing markup, and then add markup to render the seafood products, as shown in the following markup: @using Northwind.EntityModels @using Northwind.GraphQL.Client.Mvc.Models @* for VS Code only *@ @model IndexViewModel @{ ViewData["Title"] = "Products from GraphQL service"; } <div class="text-center"> <h1 class="display-4">@ViewData["Title"]</h1> <div class="card card-body"> <form> Enter a category id <input name="id" value="1" /> <input type="submit" /> </form> </div> @if (Model.Errors is not null) { <div class="alert alert-danger" role="alert"> <table class="table table-striped"> <thead> <tr> <td>Message</td> <td>Path</td> <td>Locations</td> </tr> 