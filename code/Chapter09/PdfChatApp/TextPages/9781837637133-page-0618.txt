Chapter 13 585 4. Open the project file and add an entry to include the shipper.proto file, as shown highlighted in the following markup: <ItemGroup> <Protobuf Include="Protos\greet.proto" GrpcServices="Server" /> <Protobuf Include="Protos\shipper.proto" GrpcServices="Server" /> </ItemGroup> 5. Build the Northwind.Grpc.Service project. In the Services folder, add a new class file named ShipperService.cs, and modify its contents 6. to define a shipper service that uses the Northwind database context to return shippers, as shown in the following code: using Grpc.Core; // To use ServerCallContext. using Northwind.EntityModels; // To use NorthwindContext. using ShipperEntity = Northwind.EntityModels.Shipper; namespace Northwind.Grpc.Service.Services; public class ShipperService : Shipper.ShipperBase { private readonly ILogger<ShipperService> _logger; private readonly NorthwindContext _db; public ShipperService(ILogger<ShipperService> logger, NorthwindContext context) { _logger = logger; _db = context; } public override async Task<ShipperReply?> GetShipper( ShipperRequest request, ServerCallContext context) { ShipperEntity? shipper = await _db.Shippers .FindAsync(request.ShipperId); return shipper is null ? null : ToShipperReply(shipper); } // A mapping method to convert from a Shipper in the // entity model to a gRPC ShipperReply. private ShipperReply ToShipperReply(ShipperEntity shipper) 