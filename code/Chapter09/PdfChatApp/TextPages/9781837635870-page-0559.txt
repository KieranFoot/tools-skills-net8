Working with Data Using Entity Framework Core 540 { entity.Property(e => e.ProductId).ValueGeneratedNever(); entity.Property(e => e.Discontinued).HasDefaultValueSql("0"); entity.Property(e => e.ReorderLevel).HasDefaultValueSql("0"); entity.Property(e => e.UnitPrice).HasDefaultValueSql("0"); entity.Property(e => e.UnitsInStock).HasDefaultValueSql("0"); entity.Property(e => e.UnitsOnOrder).HasDefaultValueSql("0"); }); OnModelCreatingPartial(modelBuilder); } partial void OnModelCreatingPartial(ModelBuilder modelBuilder); } Note the following: • The NorthwindDb data context class is partial to allow you to extend it and regenerate it in the future. • It has two constructors: a default parameter-less one and one that allows options to be passed in. This is useful in apps where you want to specify the connection string at runtime. OnConfiguring method, if options have not been specified in the constructor, • In the then it defaults to using a connection string that looks for the database file in the current folder. It has a compiler warning to remind you that you should not hardcode security information in this connection string. In the OnModelCreating method, the Fluent API is used to configure the two entity class- • es, and then a partial method named OnModelCreatingPartial is invoked. This allows you to implement that partial method in your own partial Northwind class to add your own Fluent API configuration that will not be lost if you regenerate the model classes. 10. Close the automatically generated class files. Customizing the reverse engineering templates One of the features introduced with EF Core 7 was the ability to customize the code that is automati- dotnet-ef scaffolding tool. This is an advanced technique, so I do not cover it cally generated by the in this book. Usually, it is easier to just modify the code that is generated by default anyway. If you would like to learn how to modify the T4 templates used by the dotnet-ef scaffolding tool, then you can find that information at the following link: https://learn.microsoft.com/en-us/ef/core/managing-schemas/scaffolding/templates 