Chapter 3 127 Exercise 3.1 – Test your knowledge Answer the following questions: 1. What can the dotnet-ef tool be used for? Products 2. What type would you use for the property that represents a table, for example, the property of a data context? What type would you use for the property that represents a one-to-many relationship, for 3. example, the Products property of a Category entity? 4. What is the EF Core convention for primary keys? 5. Why might you choose the Fluent API in preference to annotation attributes? IMaterializationInterceptor interface in an entity type? 6. Why might you implement the Exercise 3.2 – Practice benchmarking ADO.NET against EF Core In the Chapter03 solution, create a console app named Ch03Ex02_ADONETvsEFCore that uses Benchmark. NET to compare retrieving all the products from the Northwind database using ADO.NET (SqlClient) and using EF Core. You can learn how to use Benchmark.NET by reading the online-only section Benchmarking Performance and Testing at the following link: https://github.com/markjprice/apps- services-net8/blob/main/docs/ch01-benchmarking.md. Exercise 3.3 – Review performance choices The data tier can have an outsized influence on the overall performance of an app or service. Docs: https://learn.microsoft.com/en-us/ef/core/performance/ Exercise 3.4 – Explore topics Use the links on the following page to learn more details about the topics covered in this chapter: https://github.com/markjprice/apps-services-net8/blob/main/docs/book-links.md#chapter- 3---building-entity-models-for-sql-server-using-ef-core Summary In this chapter, you learned: • How to execute a simple query and process the results using the slower but more object-ori- ented EF Core. • How to configure and decide between three mapping strategies for type hierarchies. • How to implement calculated properties on entity creation. In the next chapter, you will learn how to use cloud-native data storage with Azure Cosmos DB. 