Building Mobile and Desktop Apps Using .NET MAUI 734 9. In App.xaml, add the light and dark mode colors and system theme resources, as shown high- lighted in the following markup: <ResourceDictionary.MergedDictionaries> <ResourceDictionary Source="Resources/Styles/Colors.xaml" /> <ResourceDictionary Source="Resources/Styles/Styles.xaml" /> <ResourceDictionary Source="Resources/Styles/Northwind.xaml" /> <ResourceDictionary Source="Resources/Styles/LightDarkModeColors.xaml" /> <ResourceDictionary Source="Resources/Styles/SystemModeTheme.xaml" /> </ResourceDictionary.MergedDictionaries> Good Practice: The SystemModeTheme.xaml resources file references colors de- fined in the LightDarkModelColors.xaml file, so the order is important. 10. In the project, create a folder named Controls. Controls folder, add a class file named ThemeEnum.cs, and define an enum type with 11. In the three values: System, Light, and Dark, for selecting themes, as shown in the following code: namespace Northwind.Maui.Client.Controls; public enum Theme { System, Light, Dark } 12. In the Controls folder, add a class file named EnumPicker.cs, and define a class that inherits from the Picker control that can be bound to any enum type and show a dropdown list of its values, as shown in the following code: using System.Reflection; // To use GetTypeInfo method. namespace Northwind.Maui.Client.Controls; public class EnumPicker : Picker { public Type EnumType { set => SetValue(EnumTypeProperty, value); get => (Type)GetValue(EnumTypeProperty); 