Chapter 2 65 ... | 76 | Lakkalikööri | $18.00 | | 77 | Original Frankfurter grüne Soße | $13.00 | ---------------------------------------------------------- 4. In Program.cs, modify the SQL statement to define a parameter for the unit price and use it to filter the results to products that cost more than that unit price, as shown highlighted in the following code: Write("Enter a unit price: "); string? priceText = ReadLine(); if(!decimal.TryParse(priceText, out decimal price)) { WriteLine("You must enter a valid unit price."); return; } SqlCommand cmd = connection.CreateCommand(); cmd.CommandType = CommandType.Text; cmd.CommandText = "SELECT ProductId, ProductName, UnitPrice FROM Products" + " WHERE UnitPrice >= @minimumPrice"; cmd.Parameters.AddWithValue("minimumPrice", price); 5. Run the console app, enter a unit price like 50, and note the results, as shown in the following partial output: Enter a unit price: 50 ---------------------------------------------------------- | Id | Name | Price | ---------------------------------------------------------- | 9 | Mishi Kobe Niku | $97.00 | | 18 | Carnarvon Tigers | $62.50 | | 20 | Sir Rodney's Marmalade | $81.00 | | 29 | Thüringer Rostbratwurst | $123.79 | | 38 | Côte de Blaye | $263.50 | | 51 | Manjimup Dried Apples | $53.00 | | 59 | Raclette Courdavault | $55.00 | ---------------------------------------------------------- 