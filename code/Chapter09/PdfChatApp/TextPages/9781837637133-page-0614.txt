Chapter 13 581 { public string? Greeting { get; set; } public string? ErrorMessage { get; set; } } 13. In the Controllers folder, in HomeController.cs, import the namespace to work with the gRPC client factory, as shown in the following code: using Grpc.Net.ClientFactory; // To use GrpcClientFactory. 14. In the Controller class, declare a field to store a Greeter Client instance and set it by using the client factory in the constructor, as shown highlighted in the following code: public class HomeController : Controller { private readonly ILogger<HomeController> _logger; private readonly Greeter.GreeterClient _greeterClient; public HomeController(ILogger<HomeController> logger, GrpcClientFactory factory) { _logger = logger; _greeterClient = factory.CreateClient<Greeter. GreeterClient>("Greeter"); } 15. In the Index action method, make the method asynchronous, add a string parameter named name with a default value of Henrietta, and then add statements to use the gRPC client to call the SayHelloAsync method, passing a HelloRequest object and storing the HelloReply re- sponse in ViewData, while catching any exceptions, as shown highlighted in the following code: public async Task<IActionResult> Index(string name = "Henrietta") { HomeIndexViewModel model = new(); try { HelloReply reply = await _greeterClient.SayHelloAsync( new HelloRequest { Name = name }); model.Greeting = "Greeting from gRPC service: " + reply.Message; } catch (Exception ex) { 