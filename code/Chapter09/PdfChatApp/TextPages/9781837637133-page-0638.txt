Chapter 13 605 public static implicit operator DecimalValue(decimal value) { long units = decimal.ToInt64(value); int nanos = decimal.ToInt32((value - units) * NanoFactor); return new DecimalValue(units, nanos); } } Implementing the product and employee gRPC services Now we need to implement and register the services: 1. In the Northwind.Grpc.Service project, in the Services folder, add a new class file named ProductService.cs and modify its content to implement the products service. I will leave this as an optional exercise for you, or you can copy the code from the following link: https:// github.com/markjprice/apps-services-net8/blob/main/code/Chapter13/Northwind.Grpc. Service/Services/ProductService.cs. In the Services folder, add a new class file named EmployeeService.cs and modify its content 2. to implement the products service. I will leave this as an optional exercise for you, or you can copy the code from the following link: https://github.com/markjprice/apps-services- net8/blob/main/code/Chapter13/Northwind.Grpc.Service/Services/EmployeeService.cs. 3. In Program.cs, register the two new services, as shown in the following code: app.MapGrpcService<ProductService>(); app.MapGrpcService<EmployeeService>(); Adding product and employee gRPC clients Next, we need to add clients to the MVC project to call the two new gRPC services: 1. In the Northwind.Grpc.Client.Mvc project, copy the three .proto files from the service project to the MVC project Protos folder. .proto files, modify the namespace, as shown in the following code: 2. In the three option csharp_namespace = "Northwind.Grpc.Client.Mvc"; 3. In the project file, register the three files to create client-side representations, as shown in the following markup: <ItemGroup> <Protobuf Include="Protos\greet.proto" GrpcServices="Client" /> <Protobuf Include="Protos\shipper.proto" GrpcServices="Client" /> <Protobuf Include="Protos\decimal.proto" GrpcServices="Client" /> <Protobuf Include="Protos\employee.proto" GrpcServices="Client" /> 