Chapter 12 505 } } The response is in the JSON format, for example, an array of customer objects, as shown in the fol- lowing document: { "data": [ { "customerId": "ALFKI", "companyName": "Alfreds Futterkiste", "country": "Germany" }, ... ] } Specifying filters and arguments With an HTTP or REST-style API, the caller is limited to only passing parameters when the API pre- defines that. With GraphQL, you can set parameters anywhere in the query, for example, filtering orders by order date and by the country of the customer who made the order, as shown in the following code: query GetOrdersByDateAndCountry { order(orderDate: "23/04/1998") { orderId orderDate customer(country: "UK") { companyName country } } } Note that although GraphQL uses camelCase for entity, property, and parameter names, you should use PascalCase for query names. You might want to pass values for named parameters instead of hardcoding them, as shown in the following code: query GetOrdersByDateAndCountry($country: String, $orderDate: String) { order(orderDate: $orderDate) { orderId orderDate customer(country: $country) { companyName 