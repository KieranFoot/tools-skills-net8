Chapter 8 317 app.MapPut("api/products/{id:int}", async ( [FromRoute] int id, [FromBody] Product product, [FromServices] NorthwindContext db) => { Product? foundProduct = await db.Products.FindAsync(id); if (foundProduct is null) return Results.NotFound(); foundProduct.ProductName = product.ProductName; foundProduct.CategoryId = product.CategoryId; foundProduct.SupplierId = product.SupplierId; foundProduct.QuantityPerUnit = product.QuantityPerUnit; foundProduct.UnitsInStock = product.UnitsInStock; foundProduct.UnitsOnOrder = product.UnitsOnOrder; foundProduct.ReorderLevel = product.ReorderLevel; foundProduct.UnitPrice = product.UnitPrice; foundProduct.Discontinued = product.Discontinued; await db.SaveChangesAsync(); return Results.NoContent(); }).WithOpenApi() .Produces(StatusCodes.Status404NotFound) .Produces(StatusCodes.Status204NoContent); return app; } 12. In WebApplication.Extensions.cs, define an extension method for the WebApplication class to configure a response to the HTTP DELETE request documented in the API table, as shown in the following code: public static WebApplication MapDeletes(this WebApplication app) { app.MapDelete("api/products/{id:int}", async ( [FromRoute] int id, [FromServices] NorthwindContext db) => { if (await db.Products.FindAsync(id) is Product product) { db.Products.Remove(product); 