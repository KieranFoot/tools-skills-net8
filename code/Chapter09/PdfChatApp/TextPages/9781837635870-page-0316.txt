Chapter 6 297 2. In Person.cs, add one instance method and one static method that will allow two Person objects to marry, as shown in the following code: // Static method to marry two people. public static void Marry(Person p1, Person p2) { ArgumentNullException.ThrowIfNull(p1); ArgumentNullException.ThrowIfNull(p2); if (p1.Spouses.Contains(p2) || p2.Spouses.Contains(p1)) { throw new ArgumentException( string.Format("{0} is already married to {1}.", arg0: p1.Name, arg1: p2.Name)); } p1.Spouses.Add(p2); p2.Spouses.Add(p1); } // Instance method to marry another person. public void Marry(Person partner) { Marry(this, partner); // "this" is the current person. } Note the following: • In the static method, the Person objects are passed as parameters named p1 and p2, null values. If either is already married to the and guard clauses are used to check for other an exception is thrown; otherwise, they are each added to each other’s list of spouses. You can model this differently if you want to allow two people to have multiple marriage ceremonies. In that case, you might choose to not throw an exception and instead do nothing. Their state of marriage would remain the same. Additional calls Marry would not change if they are married or not. In this scenario, I want you to to see that the code recognizes that they are already married by throwing an exception. In the instance method, a call is made to the static method, passing the current person • (this) and the partner they want to marry. 