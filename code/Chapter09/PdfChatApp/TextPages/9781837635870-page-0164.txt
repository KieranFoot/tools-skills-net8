Chapter 3 145 2. Run the code and note the result, as shown in the following output: sequentialNumbers: Contains 1, 2, any range including empty, 10. oneTwoNumbers: Contains 1 then 2. oneTwoTenNumbers: Contains 1, 2, any range including empty, 10. oneTwoThreeTenNumbers: Contains 1, 2, any single number, 10. primeNumbers: Starts with 2, then 9 more numbers. fibonacciNumbers: Starts with 0, then any range of numbers. emptyNumbers: Empty array threeNumbers: Contains 9 then 7 then 5. sixNumbers: Any items in any order. You can learn more about list pattern matching at the following link: https:// learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/ patterns#list-patterns. Understanding inline arrays Inline arrays were introduced with C# 12, and they are an advanced feature used by the .NET runtime team to improve performance. You are unlikely to use them yourself unless you are a public library author, but you will automatically benefit from others use of them. More Information: You can learn more about inline arrays at the following link: https:// learn.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/ csharp-12.0/inline-arrays. Summarizing arrays We use slightly different syntax to declare different types of arrays, as shown in Table 3.4: Type of array Declaration syntax One dimension datatype[], for example, string[] string[,] Two dimensions string[,,] Three dimensions string[,,,,,,,,,] Ten dimensions string[][] Array of arrays aka two-dimensional jagged array string[][][] Array of arrays of arrays aka three-dimensional jagged array Table 3.4: Summary of array declaration syntax 