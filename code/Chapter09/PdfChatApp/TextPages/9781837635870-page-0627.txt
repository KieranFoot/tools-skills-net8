Querying and Manipulating Data Using LINQ 608 • GroupJoin: This method has the same parameters, but it combines the matches into a group object with a Key property for the matching value and an IEnumerable<T> type for the multiple matches. ToLookup: This method creates a new data structure with the sequence grouped by a key. • Joining sequences Let’s explore these methods when working with two tables, Categories and Products: 1. In Program.Functions.cs, add a method to select categories and products, join them, and output them, as shown in the following code: private static void JoinCategoriesAndProducts() { SectionTitle("Join categories and products"); using NorthwindDb db = new(); // Join every product to its category to return 77 matches. var queryJoin = db.Categories.Join( inner: db.Products, outerKeySelector: category => category.CategoryId, innerKeySelector: product => product.CategoryId, resultSelector: (c, p) => new { c.CategoryName, p.ProductName, p.ProductId }); foreach (var p in queryJoin) { WriteLine($"{p.ProductId}: {p.ProductName} in {p.CategoryName}."); } } In a join, there are two sequences, outer and inner. In the preceding example, categories is the outer sequence and products is the inner sequence. 2. In Program.cs , comment out the call to FilterAndSort , and then call the JoinCategoriesAndProducts method, as shown highlighted in the following code: ConfigureConsole(); // Sets US English by default. // FilterAndSort(); JoinCategoriesAndProducts(); 