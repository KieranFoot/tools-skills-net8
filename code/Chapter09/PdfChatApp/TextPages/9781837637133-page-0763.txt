Building Mobile and Desktop Apps Using .NET MAUI 730 <Application.Resources> <ResourceDictionary> <ResourceDictionary.MergedDictionaries> <ResourceDictionary Source="Resources/Styles/Colors.xaml" /> <ResourceDictionary Source="Resources/Styles/Styles.xaml" /> <ResourceDictionary Source="Resources/Styles/Northwind.xaml" /> </ResourceDictionary.MergedDictionaries> </ResourceDictionary> </Application.Resources> </Application> Referencing shared resources Now we can reference the shared resource: 1. In CategoriesPage.xaml, modify the ContentPage to set its background to the brush resource with the key of Rainbow, as shown highlighted in the following markup: <ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui" xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" x:Class="Northwind.Maui.Client.CategoriesPage" Background="{StaticResource Rainbow}" Title="Categories"> StaticResource means the resource is read once when the app first starts. If the resource changes after that, any elements that reference it will not be updated. 2. Start the Northwind.Maui.Client project with debugging. 3. Navigate to Categories and note that the background of the page is a rainbow. 4. Close the app. Changing shared resources dynamically Now we can implement a settings page to allow the user to change between light mode, dark mode, or system mode used in the UI at runtime: 1. In the Resources folder, in the Styles folder, add a new .NET MAUI Resource Dictionary (XAML) project item named LightDarkModeColors.xaml. ResourceDictionary element to define sets of suitable colors 2. Add markup inside the existing for light and dark mode, as shown in the following markup: <?xml version="1.0" encoding="utf-8" ?> <ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui" 