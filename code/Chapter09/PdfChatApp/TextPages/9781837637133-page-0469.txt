Building Serverless Nanoservices Using Azure Functions 436 For another example, with a content management system, editors might upload new images, and those images might need to be processed in various ways, like generating thumbnails and other op- timizations. This work can be added to a queue, or an Azure function can be triggered when the file is uploaded to Blob Storage. Azure Functions can be much more than just a single function. They support complex, stateful, work- flows and event-driven solutions using Durable Functions. I do not cover Durable Functions in this book, so if you are interested, you can learn more about implementing them using C# and .NET at the following link: https://learn. microsoft.com/en-us/azure/azure-functions/durable/durable-functions- overview?tabs=csharp. Azure Functions has a programming model based on triggers and bindings that enable your serverless service to respond to events and connect to other services like data stores. Azure Functions triggers and bindings Triggers and bindings are key concepts for Azure Functions. Triggers are what cause a function to execute. Each function must have one, and only one, trigger. The most common triggers are shown in the following list: • HTTP: This trigger responds to an incoming HTTP request, typically a GET or POST. • Azure SQL: This trigger responds when a change is detected on a SQL table. • Cosmos DB: This trigger uses the Cosmos DB Change Feed to listen for inserts and updates. Timer: This trigger responds to a scheduled time occurring. It does not retry if a function fails. • The function is not called again until the next time on the schedule. • SignalR: This trigger responds to messages sent from Azure SignalR Service. Queue and RabbitMQ: These triggers respond to a message arriving in a queue ready for • processing. • Blob Storage: This trigger responds to a new or updated binary large object (Blob). • Event Grid and Event Hub: These triggers respond when a predefined event occurs. Bindings allow functions to have inputs and outputs. Each function can have zero, one, or more bind- ings. Some common bindings are shown in the following list: • Azure SQL: Read or write to a table in a SQL Server database. • Blob Storage: Read or write to any file stored as a BLOB. • Cosmos DB: Read or write documents to a cloud-scale data store. • SignalR: Receive or make remote method calls. • HTTP: Make an HTTP request and receive the response. • Queue and RabbitMQ: Write a message to a queue or read a message from a queue. • SendGrid: Send an email message. 