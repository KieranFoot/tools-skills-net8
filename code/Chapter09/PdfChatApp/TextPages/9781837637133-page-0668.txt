Chapter 14 635 .OrderByDescending(order => order.OrderDetails .Sum(detail => detail.Quantity * detail.UnitPrice)) .AsEnumerable(); return View(model); } 4. In the Views folder, in _ViewImports.cshtml, add a statement to import the EF Core entity models for all Razor views and pages, as shown in the following code: @using Northwind.EntityModels 5. In the Views\Home folder, in Index.cshtml, at the top of the file, add a statement to set the model type to use a collection of orders, as shown in the following code: @model IEnumerable<Order> Now, whenever we type Model in this view, our code editor will know the correct type for the model and will provide IntelliSense for it. While entering code in a view, remember the following: • Declare the type for the model using @model (with a lowercase m). • Interact with the instance of the model using @Model (with an uppercase M). 6. In Index.cshtml, in the initial Razor code block, replace the existing content with an HTML table of the orders, as shown in the following markup: @model IEnumerable<Order> @{ ViewData["Title"] = "Orders"; } <div class="text-center"> <h1 class="display-4">@ViewData["Title"]</h1> <table class="table table-bordered table-striped"> <thead> <tr> <th>Order ID</th> <th>Order Date</th> <th>Company Name</th> <th>Country</th> <th>Item Count</th> <th>Order Total</th> </tr> </thead> 