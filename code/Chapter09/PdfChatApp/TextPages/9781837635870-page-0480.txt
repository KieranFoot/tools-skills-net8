Chapter 8 461 3. Run the code and view the result, as shown in the following output: First: Samantha, Last: Jones First: Samantha, Last: Jones Practicing and exploring Test your knowledge and understanding by answering some questions, getting some hands-on practice, and exploring, with deeper research into the topics in this chapter. Exercise 8.1 – Test your knowledge Use the web to answer the following questions: 1. What is the maximum number of characters that can be stored in a string variable? SecureString type? 2. When and why should you use a StringBuilder class? 3. When is it appropriate to use a LinkedList<T> class? 4. When should you use a SortedDictionary<T> class rather than a SortedList<T> class? 5. When should you use a $ mean? 6. In a regular expression, what does 7. In a regular expression, how can you represent digits? Why should you not use the official standard for email addresses to create a regular expression 8. to validate a user’s email address? 9. What characters are output when the following code runs? string city = "Aberdeen"; ReadOnlySpan<char> citySpan = city.AsSpan()[^5..^0]; WriteLine(citySpan.ToString()); 10. How could you check that a web service is available before calling it? Exercise 8.2 – Practice regular expressions In the Chapter08 solution, create a console app named Ch08Ex02RegularExpressions that prompts the user to enter a regular expression and then prompts the user to enter some input, and compare the two for a match until the user presses Esc, as shown in the following output: The default regular expression checks for at least one digit. Enter a regular expression (or press ENTER to use the default): ^[a-z]+$ Enter some input: apples apples matches ^[a-z]+$? True Press ESC to end or any key to try again. Enter a regular expression (or press ENTER to use the default): ^[a-z]+$ Enter some input: abc123xyz abc123xyz matches ^[a-z]+$? False Press ESC to end or any key to try again. 