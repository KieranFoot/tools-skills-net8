Building Web User Interfaces Using ASP.NET Core 654 7. Start the Northwind.Mvc website project. Navigate to the Privacy page, and note the message for public visitors, as shown in Figure 14.12: 8. Figure 14.12: The Privacy page in the Production environment 9. Close the browser and shut down the web server. Properties folder, in launchSettings.json, for the https profile, change the environ- 10. In the ment setting back to Development. Understanding how cache busting with Tag Helpers works When asp-append-version is specified with a true value in a <link>, <img>, or <script> element, the Tag Helper for that tag type is invoked. They work by automatically appending a query string value named v that is generated from a SHA256 hash of the referenced source file, as shown in the following example generated output: <script src="~/js/site.js? v=Kl_dqr9NVtnMdsM2MUg4qthUnWZm5T1fCEimBPWDNgM"></ script> You can see this for yourself in the current project because the _Layout.cshtml file has the <script src="~/js/site.js" asp-append-version="true"></script> element. If even a single byte within the site.js file changes, then its hash value will be different, and there- fore if a browser or CDN is caching the script file, then it will bust the cached copy and replace it with the new version. The src attribute must be set to a static file stored on the local web server, usually in the wwwroot folder, but you can configure additional locations. Remote references are not supported. Exploring Forms-related Tag Helpers The Form Tag Helper generates the <form> elements action attribute for an MVC controller ac- tion or named route. Like the Anchor Tag Helper, you can pass parameters using the asp-route- <parametername> attribute. It also generates a hidden verification token to prevent cross-site request forgery. You must apply the [ValidateAntiForgeryToken] attribute to the HTTP POST action method to properly use this feature. 