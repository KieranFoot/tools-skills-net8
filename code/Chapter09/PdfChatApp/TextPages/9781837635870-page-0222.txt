Chapter 4 203 The Debug and Trace classes write to any trace listener. A trace listener is a type that can be config- ured to write output anywhere you like when the WriteLine method is called. There are several trace listeners provided by .NET, including one that outputs to the console, and you can even make your TraceListener type so you can write to anywhere you want. own by inheriting from the Writing to the default trace listener One trace listener, the DefaultTraceListener class, is configured automatically and writes to Visual Studio Code’s DEBUG CONSOLE window or Visual Studio’s Debug window. You can configure other trace listeners using code. Let’s see trace listeners in action: 1. Use your preferred coding tool to add a new Console App / console project named Instrumenting to the Chapter04 solution. In Program.cs, delete the existing statements and then import the System.Diagnostics name- 2. space, as shown in the following code: using System.Diagnostics; // To use Debug and Trace. 3. In Program.cs, write messages from the two classes, as shown in the following code: Debug.WriteLine("Debug says, I am watching!"); Trace.WriteLine("Trace says, I am watching!"); 4. If you are using Visual Studio 2022, navigate to View | Output and make sure Show output from: Debug is selected. Start the Instrumenting project with debugging, and note that DEBUG CONSOLE in Visual 5. Studio Code or the Output window in Visual Studio 2022 shows the two messages, mixed with other debugging information, such as loaded assembly DLLs, as shown in Figures 4.16 and 4.17: Figure 4.16: Visual Studio Code DEBUG CONSOLE shows the two messages in blue 