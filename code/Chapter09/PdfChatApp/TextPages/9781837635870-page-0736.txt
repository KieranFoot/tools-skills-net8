Chapter 14 717 // Base address: api/customers [Route("api/[controller]")] [ApiController] public class CustomersController : ControllerBase { private readonly ICustomerRepository _repo; // Constructor injects repository registered in Program.cs. public CustomersController(ICustomerRepository repo) { _repo = repo; } } The Controller class registers a route using the [Route] attribute that starts with api/ and includes the name of the controller, that is, api/customers. The [controller] part is automatically replaced with the class name with the Controller suffix removed. Therefore, the base address of the route to the CustomersController is api/customers. The constructor uses dependency injection to get the registered repository for working with customers. 5. In CustomersController.cs, add statements to define an action method that responds to HTTP GET requests for all customers, as shown in the following code: // GET: api/customers // GET: api/customers/?country=[country] // this will always return a list of customers (but it might be empty) [HttpGet] [ProducesResponseType(200, Type = typeof(IEnumerable<Customer>))] public async Task<IEnumerable<Customer>> GetCustomers(string? country) { if (string.IsNullOrWhiteSpace(country)) { return await _repo.RetrieveAllAsync(); } else { return (await _repo.RetrieveAllAsync()) .Where(customer => customer.Country == country); } } 