Chapter 4 181 switch (lastTwoDigits) { case 11: // Special cases for 11th to 13th. case 12: case 13: return $"{number:N0}th"; default: uint lastDigit = number % 10; string suffix = lastDigit switch { 1 => "st", 2 => "nd", 3 => "rd", _ => "th" }; return $"{number:N0}{suffix}"; } } From the preceding code, note the following: • CardinalToOrdinal has one input, a parameter of the uint type named number be- cause we do not want to allow negative numbers, and one output: a return value of string type. the switch statement is used to handle the special cases of 11, 12, and 13. • A switch expression then handles all other cases: if the last digit is 1, then use st as the • A suffix; if the last digit is 2, then use nd as the suffix; if the last digit is 3, then use rd as th as the suffix. the suffix; and if the last digit is anything else, then use 2. In Program.Functions.cs, write a function named RunCardinalToOrdinal that uses a for statement to loop from 1 to 150, calling the CardinalToOrdinal function for each number and writing the returned string to the console, separated by a space character, as shown in the following code: static void RunCardinalToOrdinal() { for (uint number = 1; number <= 150; number++) { Write($"{CardinalToOrdinal(number)} "); } WriteLine(); } 