Chapter 1 25 void <<Main>$>g__WhatsMyNamespace|0_0() // Define a local function. { WriteLine("Namespace of Program class: {0}", arg0: typeof(Program).Namespace ?? "null"); } } } For the compiler to know where what statements need to go, you must follow some rules: • Import statements (using) must go at the top of the Program.cs file. <Main>$ function must go in the middle of the Program.cs file. • Statements that will go in the Any functions will become local functions in the <Main>$ method. The last point is important because local functions have limitations, for example, they cannot have XML comments to document them. Writing static functions in a separate Program class file A better approach is to write any functions in a separate class file and define them as static members of the Program class: 1. Add a new class file named Program.Functions.cs. The name has no effect, but it is a good practice to name it so that it is clear that this file is related to the Program.cs class file. In Program.Functions.cs, define a partial Program class, then cut and paste the 2. WhatsMyNamespace function to move it from Program.cs into Program.Functions.cs, and finally add the static keyword, as shown highlighted in the following code: using static System.Console; // Do not define a namespace so this class goes in the default empty namespace // just like the auto-generated partial Program class. partial class Program { static void WhatsMyNamespace() // Define a static function. { WriteLine("Namespace of Program class: {0}", arg0: typeof(Program).Namespace ?? "null"); } } 