Writing, Debugging, and Testing Functions 200 Just before the release of .NET 6, a high-level Microsoft employee caused controversy by attempting to make the feature Visual Studio-only. Luckily the open-source contingent within Microsoft success- fully had the decision overturned. Hot Reload remains available using the command-line tool as well. Letâ€™s see it in action: 1. Use your preferred coding tool to add a new Console App / console project named HotReloading to the Chapter04 solution. HotReloading.csproj to statically import System.Console for all code files. 2. Modify Program.cs, delete the existing statements and then write a message to the console every 3. In two seconds, as shown in the following code: /* Visual Studio 2022: run the app, change the message, click Hot Reload. * Visual Studio Code: run the app using dotnet watch, change the message. */ while (true) { WriteLine("Hello, Hot Reload!"); await Task.Delay(2000); } Hot reloading using Visual Studio 2022 If you are using Visual Studio, Hot Reload is built into the user interface: 1. In Visual Studio 2022, start the project and note that the message is output every two seconds. 2. Leave the project running. Program.cs, change Hello to Goodbye. 3. In Navigate to Debug | Apply Code Changes or click the Hot Reload button in the toolbar, as 4. shown in Figure 4.15, and note the change is applied without needing to restart the console app. 5. Drop down the Hot Reload button menu and select Hot Reload on File Save, as shown in Figure 4.15: Figure 4.15: Changing Hot Reload options 