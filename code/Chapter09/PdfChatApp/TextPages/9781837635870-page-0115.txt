Speaking C# 96 Formatting using numbered positional arguments One way of generating formatted strings is to use numbered positional arguments. This feature is supported by methods like Write and WriteLine. For methods that do not support the feature, the string parameter can be formatted using the Format method of string. Letâ€™s begin formatting: 1. Use your preferred code editor to add a new Console App / console project named Formatting to the Chapter02 solution. In Program.cs, delete the existing statements and then type statements to declare some number 2. variables and write them to the console, as shown in the following code: int numberOfApples = 12; decimal pricePerApple = 0.35M; Console.WriteLine( format: "{0} apples cost {1:C}", arg0: numberOfApples, arg1: pricePerApple * numberOfApples); string formatted = string.Format( format: "{0} apples cost {1:C}", arg0: numberOfApples, arg1: pricePerApple * numberOfApples); //WriteToFile(formatted); // Writes the string into a file. The WriteToFile method is a nonexistent method used to illustrate the idea. The Write, WriteLine, and Format methods can have up to three numbered arguments, named arg0, arg1, and arg2. If you need to pass more than three values, then you cannot name them. 3. In Program.cs, type statements to write three and then five arguments to the console, as shown in the following code: // Three parameter values can use named arguments. Console.WriteLine("{0} {1} lived in {2}.", arg0: "Roger", arg1: "Cevung", arg2: "Stockholm"); // Four or more parameter values cannot use named arguments. Console.WriteLine( 