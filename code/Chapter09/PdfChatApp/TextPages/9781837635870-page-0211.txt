Writing, Debugging, and Testing Functions 192 Using Visual Studio Code Let’s set a breakpoint and then start debugging using Visual Studio Code: 1. Click in line 1, which is the statement that declares the variable named a. 2. Navigate to Run | Toggle Breakpoint or press F9. A red circle will appear in the margin bar on the left-hand side to indicate that a breakpoint has been set. Breakpoints can be toggled off with the same action. You can also left-click in the margin to toggle a breakpoint on and off; right-click to see more options, such as remove, edit, or dis- able an existing breakpoint; or add a breakpoint, conditional breakpoint, or logpoint when a breakpoint does not yet exist. Logpoints, also known as tracepoints, indicate that you want to record some information without having to stop executing the code at that point. 3. Navigate to View | Run, or in the left navigation bar, you can click the Run and Debug icon (the triangle “play” button and “bug”) or press Ctrl + Shift + D (on Windows). 4. At the top of the RUN AND DEBUG window, click the Run and Debug button, and then select the Debugging project, as shown in Figure 4.5: Figure 4.5: Selecting the project to debug using Visual Studio Code If you are first prompted to choose a debugger, select C#, not .NET 5+ or .NET Core. 5. Visual Studio Code starts the console app and then pauses when it hits the breakpoint. This is known as break mode. The line that will be executed next is highlighted in yellow, and a yellow block points at the line from the margin bar, as shown in Figure 4.6: 