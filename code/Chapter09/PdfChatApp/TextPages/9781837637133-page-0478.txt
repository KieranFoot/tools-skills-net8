Chapter 10 445 Azure Functions support for dependency injection Dependency injection in Azure Functions is built on the standard .NET dependency injection features, but there are implementation differences depending on your chosen worker model. FunctionsStartup class and To register dependency services, create a class that inherits from the override its Configure method. Add the [FunctionsStartup] assembly attribute to specify the class name registered for startup. Add services to the IFunctionsHostBuilder instance passed to the method. You will do this in a task later in this chapter. static with a static method. A Normally, the class that implements an Azure Functions function is static class is not instantiated with a constructor. Dependency injection uses constructor injection so that means you must use instance classes for injected services and for your function class imple- mentation. You will see how to do this in the coding task. Installing Azure Functions Core Tools Azure Functions Core Tools provides the core runtime and templates for creating functions, which enable local development on Windows, macOS, and Linux using any code editor. Azure Functions Core Tools is included in the Azure development workload of Visual Studio 2022, so you might already have it installed. You can install the latest version of Azure Functions Core Tools from the following link: https://www.npmjs.com/package/azure-functions-core-tools The page found at the preceding link has instructions for installing using Microsoft Software Installer (MSI) and winget on Windows, Homebrew on Mac, npm on any operating system, and common Linux distributions. If you are using JetBrains Rider, then install Azure Functions Core Tools via Rider. Building an Azure Functions project Now, we can create an Azure Functions project. Although they can be created in the cloud using the Azure portal, developers will have a better experience creating and running them locally first. You can then deploy to the cloud once you have tested your function on your own computer. Each code editor has a slightly different experience to get started with an Azure Functions project, so let’s have a look at each in turn, starting with Visual Studio 2022. Using Visual Studio 2022 If you prefer to use Visual Studio 2022, here are the steps to create an Azure Functions project: 1. In Visual Studio 2022, create a new project, as defined in the following list: • Project template: Azure Functions 