Controlling Flow, Converting Types, and Handling Exceptions 154 By default, an int value would output assuming decimal notation, that is, Base10. You can use format codes such as :X2 to format the value using hexadecimal notation. 2. Run the code and view the result, as shown in the following output: Binary Object as bytes: EB 53 8B 11 9D 83 E6 4D 45 85 F4 68 F8 18 55 E5 B8 33 C9 B6 F4 00 10 7F CB 59 23 7B 26 18 16 30 00 23 E6 8F A9 10 B0 A9 E6 EC 54 FB 4D 33 E1 68 50 46 C4 1D 5F B1 57 A1 DB D0 60 34 D2 16 93 39 3E FA 0B 08 08 E9 96 5D 64 CF E5 CD C5 64 33 DD 48 4F E8 B0 B4 19 51 CA 03 6F F4 18 E3 E5 C7 0C 11 C7 93 BE 03 35 44 D1 6F AA B0 2F A9 CE D5 03 A8 00 AC 28 8F A5 12 8B 2E BE 40 C4 31 A8 A4 1A Binary Object as Base64: 61OLEZ2D5k1FhfRo+BhV5bgzybb0ABB/ y1kjeyYYFjAAI+aPqRCwqebsVPtNM+FoUEbEHV+xV6Hb0GA00haTOT76CwgI6ZZdZM/ lzcVkM91IT+iwtBlRygNv9Bjj5ccMEceTvgM1RNFvqrAvqc7VA6gArCiPpRKLLr5AxDGopBo= Parsing from strings to numbers or dates and times The second most common conversion is from strings to numbers or date and time values. The opposite of ToString is Parse. Only a few types have a Parse method, including all the number DateTime. types and Letâ€™s see Parse in action: 1. At the top of Program.cs, import the namespace for working with cultures, as shown in the following code: using System.Globalization; // To use CultureInfo. 2. At the bottom of Program.cs, add statements to parse an integer and a date and time value from strings and then write the result to the console, as shown in the following code: // Set the current culture to make sure date parsing works. CultureInfo.CurrentCulture = CultureInfo.GetCultureInfo("en-US"); int friends = int.Parse("27"); DateTime birthday = DateTime.Parse("4 June 1980"); WriteLine($"I have {friends} friends to invite to my party."); WriteLine($"My birthday is {birthday}."); WriteLine($"My birthday is {birthday:D}."); 