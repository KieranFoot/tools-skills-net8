Building Your Own Types with Object-Oriented Programming 290 3. What does a constructor do? [Flags] attribute to an enum type when you want to store combined 4. Why should you apply the values? partial keyword useful? 5. Why is the 6. What is a tuple? record keyword do? 7. What does the 8. What does overloading mean? What is the difference between the following two statements? (Do not just say a “>” character!) 9. public List<Person> Children = new(); public List<Person> Children => new(); 10. How do you make a method parameter optional? Exercise 5.2 – Practice with access modifiers Imagine that you are the compiler. What errors would you show when building the following projects? What would need to change to fix it? In a class library project, in Car.cs: class Car { int Wheels { get; set; } public bool IsEV { get; set; } internal void Start() { Console.WriteLine("Starting..."); } } In a console app project that references the class library project, in Program.cs: Car fiat = new() { Wheels = 4, IsEV = true }; fiat.Start(); Exercise 5.3 – Explore topics Use the links on the following page to learn more details about the topics covered in this chapter: https://github.com/markjprice/cs12dotnet8/blob/main/docs/book-links.md#chapter-5--- building-your-own-types-with-object-oriented-programming 