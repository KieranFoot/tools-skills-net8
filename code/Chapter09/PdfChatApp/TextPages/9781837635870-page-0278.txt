Chapter 5 259 public void WriteToConsole() { WriteLine($"{Name} was born on a {Born:dddd}."); } public string GetOrigin() { return $"{Name} was born on {HomePlanet}."; } #endregion 2. In Program.cs, add statements to call the two methods, as shown in the following code: bob.WriteToConsole(); WriteLine(bob.GetOrigin()); 3. Run the PeopleApp project and view the result, as shown in the following output: Bob Smith was born on a Wednesday. Bob Smith was born on Earth. Defining and passing parameters to methods Methods can have parameters passed to them to change their behavior. Parameters are defined a bit like variable declarations but inside the parentheses of the method declaration, as you saw earlier in this chapter with constructors. Letâ€™s see more examples: 1. In Person.cs, add statements to define two methods, the first without parameters and the second with one parameter, as shown in the following code: public string SayHello() { return $"{Name} says 'Hello!'"; } public string SayHelloTo(string name) { return $"{Name} says 'Hello, {name}!'"; } 2. In Program.cs, add statements to call the two methods, and write the return value to the con- sole, as shown in the following code: WriteLine(bob.SayHello()); WriteLine(bob.SayHelloTo("Emily")); 