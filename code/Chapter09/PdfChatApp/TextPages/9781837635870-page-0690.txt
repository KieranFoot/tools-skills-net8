Chapter 13 671 Figure 13.5: Welcome to Northwind page showing the current day 5. In Chrome, enter https://localhost:5131/index.html, which exactly matches the static filename, and note that it returns the static HTML page as before. In Chrome, enter https://localhost:5131/hello, which exactly matches the endpoint route 6. that returns plain text, and note that it returns the plain text as before. 7. Close Chrome and shut down the web server. Using shared layouts with Razor Pages Most websites have more than one page. If every page had to contain all of the boilerplate markup that is currently in index.cshtml, that would become a pain to manage. So, ASP.NET Core has a feature named layouts. To use layouts, we must create a Razor file to define the default layout for all Razor Pages (and all MVC views) and store it in a Shared folder so that it can be easily found by convention. The name of this file can be anything, because we will specify it, but _Layout.cshtml is good practice. We must also create a specially named file to set the default layout file for all Razor Pages (and all MVC views). This file must be named _ViewStart.cshtml. Letâ€™s see layouts in action: 1. In the Pages folder, add a file named _ViewStart.cshtml. (The Visual Studio 2022 project item template is named Razor View Start.) _ViewStart.cshtml file content, as shown in 2. If you are using Visual Studio Code, modify the the following markup: @{ Layout = "_Layout"; } 3. In the Pages folder, create a folder named Shared. Shared folder, create a file named _Layout.cshtml. (The Visual Studio item template 4. In the is named Razor Layout.) 