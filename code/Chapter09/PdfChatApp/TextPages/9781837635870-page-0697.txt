Building Websites Using ASP.NET Core Razor Pages 678 5. Click on the button to learn more about suppliers, and note the table of suppliers, as shown in Figure 13.8: Figure 13.8: The table of suppliers loaded from an array of strings Configuring files included in an ASP.NET Core project Until now, most of our projects have been simple console apps and class libraries with a few C# class files. By default, when we compiled those projects, all .cs files in the project folder or subfolders were automatically included in the build at compile time. ASP.NET Core projects get more complicated. There are many more file types; some of them can be compiled at runtime instead of compile time, and some of them are just content that does not need to be compiled but does need to be deployed along with the compiled assemblies. You can control how files are processed during a build, and which are included or excluded from a deployment, by putting elements in the project file. These are processed by MS Build and other tools during builds and deployments. You declare items in the project file as child elements of an <ItemGroup> element. For example: <--Include the greet.proto file in the build process.--> <ItemGroup> <Protobuf Include="Protos\greet.proto" GrpcServices="Server" /> </ItemGroup> <--Remove the stylecop.json file from the build process.--> <ItemGroup> <None Remove="stylecop.json" /> </ItemGroup> <--Include the stylecop.json file in the deployment.--> <ItemGroup> <AdditionalFiles Include="stylecop.json" /> </ItemGroup> 