Chapter 4 157 arg0: ex.GetType(), arg1: ex.Message); } WriteLine("Total requests charge: {0:N2} RUs", totalCharge); } 8. In Program.cs, comment out the call to create the Azure Cosmos resources, and then add a statement to call the method to insert all the products, as shown in the following code: await CreateProductItems(); 9. Run the console app and note the results, which should be 77 product items inserted, as shown in the following partial output: * * Creating product items * Created item with id: 1. Insert consumed 14.29 RUs. Created item with id: 2. Insert consumed 14.29 RUs. Created item with id: 3. Insert consumed 14.29 RUs. ... Created item with id: 76. Insert consumed 14.29 RUs. Created item with id: 77. Insert consumed 14.48 RUs. Total requests charge: 1,114.58 RUs 10. Run the console app again and note the results, which should show that the product items already exist, as shown in the following partial output: * * Creating product items * Item with id: 1 exists. Query consumed 1 RUs. Item with id: 2 exists. Query consumed 1 RUs. Item with id: 3 exists. Query consumed 1 RUs. ... Item with id: 76 exists. Query consumed 1 RUs. Item with id: 77 exists. Query consumed 1 RUs. Total requests charge: 77.00 RUs 11. In the Azure Cosmos DB Emulator or Azure portal Data Explorer, confirm that there are 77 product items in the Products container. 