Working with Common .NET Types 430 Regular expression performance improvements The .NET types for working with regular expressions are used throughout the .NET platform and many of the apps built with it. As such, they have a significant impact on performance. But until now, they have not received much optimization attention from Microsoft. With .NET 5 and later, the types in the System.Text.RegularExpressions namespace have rewritten implementations to squeeze out maximum performance. Common regular expression benchmarks using methods like IsMatch are now five times faster. And the best thing is you do not have to change your code to get the benefits! With .NET 7 and later, the IsMatch method of the Regex class now has an overload for a ReadOnlySpan<char> as its input, which gives even better performance. Understanding the syntax of a regular expression Some common symbols that you can use in regular expressions are shown in Table 8.5: Symbol Meaning Symbol Meaning ^ $ Start of input End of input \d \D A single digit A single non-digit \s \S Whitespace Non-whitespace \w \W Word characters Non-word characters [A-Za-z0-9] \^ Range(s) of characters ^ (caret) character [aeiou] [^aeiou] Set of characters Not in a set of characters . \. Any single character . (dot) character Table 8.5: Common regular expression symbols In addition, some common regular expression quantifiers that affect the previous symbols in a regular expression are shown in Table 8.6: Symbol Meaning Symbol Meaning + ? One or more One or none {3} {3,5} Exactly three Three to five {3,} {,3} At least three Up to three Table 8.6: Common regular expression quantifiers Examples of regular expressions Some examples of regular expressions with a description of their meaning are shown in Table 8.7: 