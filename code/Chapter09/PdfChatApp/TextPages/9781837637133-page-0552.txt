Chapter 12 519 "productName": "Aniseed Syrup", "unitPrice": 10 }, { "productId": 4, "productName": "Chef Anton's Cajun Seasoning", "unitPrice": 22 }, ... 10. In the GraphQL web service command prompt or terminal, note the SQL statements executed for this query, as shown in the following output: info: Microsoft.EntityFrameworkCore.Database.Command[20101] Executed DbCommand (68ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30'] SELECT TOP(1) [c].[CategoryId], [c].[CategoryName], [c]. [Description], [c].[Picture] FROM [Categories] AS [c] WHERE [c].[CategoryId] = @__p_0 info: Microsoft.EntityFrameworkCore.Database.Command[20101] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30'] SELECT [p].[ProductId], [p].[CategoryId], [p].[Discontinued], [p].[ProductName], [p].[QuantityPerUnit], [p].[ReorderLevel], [p]. [SupplierId], [p].[UnitPrice], [p].[UnitsInStock], [p].[UnitsOnOrder] FROM [Products] AS [p] WHERE [p].[CategoryId] = @__p_0 Although the GraphQL query did not need the picture of each category and only needed the ID, name, and unit price, the dynamically-generated queries from EF Core returned all properties. 11. Click the + tab to open a new tab, and write a query to request the ID, name, and units in stock of the products in the category with ID 1, as shown in the following markup: query BeverageProducts { productsInCategory (categoryId: 1) { productId productName unitsInStock } } 