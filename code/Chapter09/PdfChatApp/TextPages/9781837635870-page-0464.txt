Chapter 8 445 2. In Program.cs, add some statements to illustrate some of the common ways of working with dictionaries, for example, looking up word definitions, as shown in the following code: // Declare a dictionary without the alias. // Dictionary<string, string> keywords = new(); // Use the alias to declare the dictionary. StringDictionary keywords = new(); // Add using named parameters. keywords.Add(key: "int", value: "32-bit integer data type"); // Add using positional parameters. keywords.Add("long", "64-bit integer data type"); keywords.Add("float", "Single precision floating point number"); /* Alternative syntax; compiler converts this to calls to Add method. Dictionary<string, string> keywords = new() { { "int", "32-bit integer data type" }, { "long", "64-bit integer data type" }, { "float", "Single precision floating point number" }, }; */ /* Alternative syntax; compiler converts this to calls to Add method. Dictionary<string, string> keywords = new() { ["int"] = "32-bit integer data type", ["long"] = "64-bit integer data type", ["float"] = "Single precision floating point number", }; */ OutputCollection("Dictionary keys", keywords.Keys); OutputCollection("Dictionary values", keywords.Values); WriteLine("Keywords and their definitions:"); foreach (KeyValuePair<string, string> item in keywords) { WriteLine($" {item.Key}: {item.Value}"); } // Look up a value using a key. string key = "long"; WriteLine($"The definition of {key} is {keywords[key]}."); 