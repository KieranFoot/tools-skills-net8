Chapter 7 371 <Project Sdk="Microsoft.NET.Sdk"> <PropertyGroup> <OutputType>Exe</OutputType> <TargetFramework>net8.0</TargetFramework> <Nullable>enable</Nullable> <ImplicitUsings>enable</ImplicitUsings> </PropertyGroup> </Project> 3. After the <PropertyGroup> section, add a new <ItemGroup> section to statically import System. Console for all C# files using the implicit usings .NET SDK feature, as shown in the following markup: <ItemGroup> <Using Include="System.Console" Static="true" /> </ItemGroup> Namespaces and types in assemblies Many common .NET types are in the System.Runtime.dll assembly. There is not always a one-to-one mapping between assemblies and namespaces. A single assembly can contain many namespaces and a namespace can be defined in many assemblies. You can see the relationship between some assemblies and the namespaces that they supply types for in Table 7.1: Assembly Example namespaces Example types System, System.Collections, Int32, String, System.Runtime.dll System.Collections.Generic IEnumerable<T> System.Console.dll System Console System.Threading.dll System.Threading Interlocked, Monitor, Mutex System.Xml.XDocument.dll System.Xml.Linq XDocument, XElement, XNode Table 7.1: Examples of assemblies and their namespaces NuGet packages .NET is split into a set of packages, distributed using a Microsoft-supported package management technology named NuGet. Each of these packages represents a single assembly of the same name. For example, the System.Collections package contains the System.Collections.dll assembly. The following are the benefits of packages: • Packages can be easily distributed on public feeds. • Packages can be reused. 