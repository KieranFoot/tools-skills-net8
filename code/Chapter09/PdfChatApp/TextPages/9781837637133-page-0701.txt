Building Web Components Using Blazor 668 How to pass route parameters Blazor routes can include case-insensitive named parameters, and your code can most easily access the passed values by binding the parameter to a property in the code block, using the [Parameter] attribute, as shown in the following markup: @page "/employees/{country}" <div>Country parameter as the value: @Country</div> @code { [Parameter] public string Country { get; set; } } The recommended way to handle a parameter that should have a default value when it is missing is to ?, using the null coalescing operator in the OnParametersSet suffix the parameter in the route with method, as shown highlighted in the following markup: @page "/employees/{country?}" <div>Country parameter as the value: @Country</div> @code { [Parameter] public string? Country { get; set; } protected override void OnParametersSet() { // if the automatically set property is null // set its value to USA Country = Country ?? "USA"; } } Setting parameters from a query string You can also set component properties using parameters from a query string, as shown in the fol- lowing code: [Parameter] [SupplyParameterFromQuery(Name = "country")] public string? Country { get; set; } 