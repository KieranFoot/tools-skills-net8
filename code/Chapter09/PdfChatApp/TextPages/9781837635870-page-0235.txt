Writing, Debugging, and Testing Functions 216 Creating a class library that needs testing First, we will create a function that needs testing. We will create it in a class library project separate from a console app project. A class library is a package of code that can be distributed and referenced by other .NET applications: 1. Use your preferred coding tool to add a new Class Library / classlib project named CalculatorLib to the Chapter04 solution. At this point, you will have created about a dozen new console app projects and added them to a solution. The only difference when adding a Class Library / classlib is selecting a different project template. The rest of the steps are the same as adding a Console App / console project. If you are using Visual Studio 2022: 1. Navigate to File | Add | New Project. 2. In the Add a new project dialog, search for and select Class Library [C#] and then click Next. CalculatorLib, 3. In the Configure your new project dialog, for the Project name, enter leave the location as C:\cs12dotnet8\Chapter04, and then click Next. 4. In the Additional information dialog, select .NET 8.0 (Long Term Support), and then click Create. If you are using Visual Studio Code: Chapter04 folder. 5. In TERMINAL, switch to a terminal in the Use the dotnet CLI to create a new class library project named CalculatorLib, as shown 6. in the following command: dotnet new classlib -o CalculatorLib. Use the dotnet CLI to add the new project folder to the solution, as shown in the following 7. command: dotnet sln add CalculatorLib. Note the results, as shown in the following output: Project `CalculatorLib\ 8. CalculatorLib.csproj` added to the solution. 2. For all code editors, in the CalculatorLib project, rename the file named Class1.cs to Calculator.cs. In Calculator.cs, modify the file to define a Calculator class (with a deliberate bug!), as 3. shown in the following code: namespace CalculatorLib; public class Calculator { public double Add(double a, double b) { 