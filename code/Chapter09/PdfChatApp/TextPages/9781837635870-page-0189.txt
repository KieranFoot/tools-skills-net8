Writing, Debugging, and Testing Functions 170 Exploring top-level programs, functions, and namespaces In Chapter 1, Hello, C#! Welcome, .NET!, we learned that since C# 10 and .NET 6, the default project template for console apps uses the top-level program feature introduced with C# 9. Once you start writing functions, it is important to understand how they work with the automatically generated Program class and its <Main>$ method. Let’s explore how the top-level program feature works when you define functions: 1. Use your preferred coding tool to create a new solution and project, as defined in the following list: • Project template: Console App / console • Project file and folder: TopLevelFunctions • Solution file and folder: Chapter04 • Do not use top-level statements: Cleared. • Enable native AOT publish: Cleared. Program.cs, delete the existing statements, define a local function at the bottom of the file, 2. In and call it, as shown in the following code: using static System.Console; WriteLine("* Top-level functions example"); WhatsMyNamespace(); // Call the function. void WhatsMyNamespace() // Define a local function. { WriteLine("Namespace of Program class: {0}", arg0: typeof(Program).Namespace ?? "null"); } Good Practice: Functions do not need to be at the bottom of the file, but it is good practice rather than mixing them up with other top-level statements. Types, like classes, must be declared at the bottom of the Program.cs file rather than in the middle of the file or you will see compiler error CS8803, as shown at the follow- ing link: https://learn.microsoft.com/en-us/dotnet/csharp/language- reference/compiler-messages/cs8803. It would be better to define types like classes in a separate file. 