Building and Consuming Web Services 702 3. If you are using Visual Studio Code or JetBrains Rider, then in the PracticalApps directory, at the command prompt or terminal, enter the following: dotnet new webapi ––use-controllers -o Northwind.WebApi The JetBrains Rider new project dialog box does not provide an option to select the equivalent of Use controllers / --use-controllers or -controllers. 4. Build the Northwind.WebApi project. false in the <PropertyGroup>, as shown 5. In the project file, change invariant globalization to in the following markup: <InvariantGlobalization>false</InvariantGlobalization> Explicitly setting invariant globalization to true is new in the ASP.NET Core Web API project template with .NET 8. It is designed to make a web service non-cul- ture-specific so it can be deployed anywhere in the world and have the same behavior. By setting this property to false, the web service will default to the culture of the current computer it is hosted on. You can read more about invariant globalization mode at the following link: https://github.com/dotnet/runtime/ blob/main/docs/design/features/globalization-invariant-mode.md. 6. In the Controllers folder, open and review WeatherForecastController.cs, as shown in the following code: using Microsoft.AspNetCore.Mvc; namespace Northwind.WebApi.Controllers { [ApiController] [Route("[controller]")] public class WeatherForecastController : ControllerBase { private static readonly string[] Summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" }; private readonly ILogger<WeatherForecastController> _logger; 