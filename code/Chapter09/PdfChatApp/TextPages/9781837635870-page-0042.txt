Chapter 1 23 2. Note that this file is automatically created by the compiler for projects that target .NET 6 or later, and that it uses a feature introduced in C# 10 called global namespace imports, which imports some commonly used namespaces like System for use in all code files, as shown in the following code: // <autogenerated /> global using global::System; global using global::System.Collections.Generic; global using global::System.IO; global using global::System.Linq; global using global::System.Net.Http; global using global::System.Threading; global using global::System.Threading.Tasks; 3. In Solution Explorer, click the Show All Files button to hide the bin and obj folders. I will explain more about the implicit imports feature in the next chapter. For now, just note that a significant change that happened between .NET 5 and .NET 6 is that many of the project templates, like the one for console apps, use new SDK and language features to hide what is really happening. Revealing the hidden code by throwing an exception Now letâ€™s discover how the hidden code has been written: 1. In Program.cs, after the statement that outputs the message, add a statement to throw a new exception, as shown in the following code: throw new Exception(); 2. In Visual Studio, navigate to Debug | Start Without Debugging. (Do not start the project with debugging or the exception will be caught by the debugger!) 3. The output in the console window will show the result of running your application, including Program class was defined by the compiler with a method named <Main>$ that that a hidden has a parameter named args for passing in arguments, as shown in Figure 1.8: Figure 1.8: Throwing an exception to reveal the hidden Program.<Main>$ method 