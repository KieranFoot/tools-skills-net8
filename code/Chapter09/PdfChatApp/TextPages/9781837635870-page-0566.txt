Chapter 10 547 SectionTitle("Products that cost more than a price, highest at top"); string? input; decimal price; do { Write("Enter a product price: "); input = ReadLine(); } while (!decimal.TryParse(input, out price)); IQueryable<Product>? products = db.Products? .Where(product => product.Cost > price) .OrderByDescending(product => product.Cost); if (products is null || !products.Any()) { Fail("No products found."); return; } foreach (Product p in products) { WriteLine( "{0}: {1} costs {2:$#,##0.00} and has {3} in stock.", p.ProductId, p.ProductName, p.Cost, p.Stock); } } 2. In Program.cs, call the QueryingProducts method. 50 when prompted to enter a product price, view the result, and note the 3. Run the code, enter descending order by cost, as shown in the following partial output: Enter a product price: 50 38: Côte de Blaye costs $263.50 and has 17 in stock. 29: Thüringer Rostbratwurst costs $123.79 and has 0 in stock. 9: Mishi Kobe Niku costs $97.00 and has 29 in stock. 20: Sir Rodney's Marmalade costs $81.00 and has 40 in stock. 18: Carnarvon Tigers costs $62.50 and has 42 in stock. 59: Raclette Courdavault costs $55.00 and has 79 in stock. 51: Manjimup Dried Apples costs $53.00 and has 20 in stock. 