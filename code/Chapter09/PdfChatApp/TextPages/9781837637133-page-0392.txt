Chapter 8 359 Publishing a native AOT project A service that functions correctly during development when the service is untrimmed and JIT-compiled could still fail once you publish it using native AOT. You should therefore perform a publish before assuming your project will work. If your project does not produce any AOT warnings at publish time, you can then be confident that your service will work after publishing for AOT. Letâ€™s review the source-generated code and publish our web service: 1. In the Northwind.MinimalAot.Service project file, add an element to emit compiler-generated files, as shown highlighted in the following markup: <PropertyGroup> <TargetFramework>net8.0</TargetFramework> ... <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles> </PropertyGroup> 2. Build the Northwind.MinimalAot.Service project. 3. If you are using Visual Studio 2022, toggle Show All Files in Solution Explorer. Expand the obj\Debug\net8.0\generated folder, and note the folders and files that have been 4. created by the source generators for AOT and JSON serialization, and note that you will be opening some of these files in the next few steps, as shown in Figure 8.10: Figure 8.10: Folders and files created by source generators in an AOT web service project 5. Open the GeneratedRouteBuilderExtensions.g.cs file, and note it contains code to define the mapped routes for the minimal API web service. 