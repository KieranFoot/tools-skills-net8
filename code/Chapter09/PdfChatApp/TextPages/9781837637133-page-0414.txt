Chapter 9 381 14. Close the browser and shut down the web server. Caching objects using distributed caching Distributed caches have benefits over in-memory caches. Cached objects: • Are consistent across requests to multiple servers. • Survive server restarts and service deployments. • Do not waste local server memory. Are stored in a shared area, so in a server farm scenario with multiple servers, you do not need • to enable sticky sessions. Warning! A disadvantage of distributed caches is that in-memory caches can store any object, but a distributed cache can only store byte arrays. Your object needs to be serialized and sent across a network to the remote cache. Microsoft provides the IDistributedCache interface with pre-defined methods to manipulate items in any distributed cache implementation. The methods are: • Set or SetAsync: To store an object in the cache. Get or GetAsync: To retrieve an object from the cache. • Remove or RemoveAsync: To remove an object from the cache. • Refresh or RefreshAsync: To reset the sliding expiration for an object in the cache. • There are many implementations of distributed caching to choose from, including the following: • SQL Server: https://learn.microsoft.com/en-us/aspnet/core/performance/caching/ distributed#distributed-sql-server-cache • Redis: https://learn.microsoft.com/en-us/aspnet/core/performance/caching/ distributed#distributed-redis-cache • NCache: http://www.alachisoft.com/ncache/aspnet-core-idistributedcache-ncache. html We will use the Distributed Memory Cache, which is a Microsoft built-in implementation of IDistributedCache that stores items in memory on the server where the service runs. It is not an actual distributed cache, but it is useful for scenarios like unit testing, where you want to remove the dependency on yet another external service, or while learning, as we are doing in this book. Later, you only need to change the configured distributed cache, not the service implementation code that uses it, because all interactions go through the registered IDistributedCache implementation. 