Building Web User Interfaces Using ASP.NET Core 650 20. On the home page, click Privacy to navigate to that page and note the buttons, including their raw HTML, which shows the href attribute paths that were generated by the Anchor Tag Helper, as shown in Figure 14.9: Figure 14.9: Using a fragment and passing a complex object using query string parameters A side benefit of specifying the protocol is that the generated URL must include the protocol, domain, and any port number, as well as the relative path, so it is a convenient way to get an absolute URL instead of the default relative path URL, as shown in the second link above. 21. Click the Orders (end of table) button and note the browser navigates to the home page and then jumps to the end of the orders table. 22. Go back to the Privacy page, click the Shipper button, and note the shipper details are pre-en- tered into the shipper form. 23. Close the browser and shut down the web server. Exploring the Cache Tag Helpers The Cache and Distributed Cache Tag Helpers improve the performance of your web pages by caching their content using the in-memory or registered distributed cache providers respectively. We covered reading and writing objects to these caches in Chapter 9, Caching, Queuing, and Resilient Background Services. Now we will see how to store fragments of HTML for a view in them. As a reminder, an in-memory cache is best for a single web server or a web server farm with session affinity enabled. Session affinity means that subsequent requests from the same browser are served by the same web server. A distributed cache is best for a web server farm or in a cloud provider like Azure. You can register providers for SQL Server, Redis, or NCache, or create your own custom provider. 