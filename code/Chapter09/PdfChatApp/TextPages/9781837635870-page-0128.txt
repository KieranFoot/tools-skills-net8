Chapter 2 109 On macOS or Linux, youâ€™ll see an unhandled exception, as shown in Figure 2.13: Figure 2.13: An unhandled exception on unsupported macOS Although the compiler did not give an error or warning, at runtime, some API calls may fail on some platforms. Although a console app running on Windows can change its cursor size, on macOS, it cannot, and it complains if you try. Handling platforms that do not support an API So how do we solve this problem? We can solve this by using an exception handler. You will learn more details about the try-catch statement in Chapter 3, Controlling Flow, Converting Types, and Handling Exceptions, so for now, just enter the code: 1. Modify the code to wrap the lines that change the cursor size in a try statement, as shown in the following code: try { CursorSize = int.Parse(args[2]); } catch (PlatformNotSupportedException) { WriteLine("The current platform does not support changing the size of the cursor."); } 2. If you were to run the code on macOS, then you would see the exception is caught, and a friendlier message is shown to the user. 