Building and Securing Web Services Using Minimal APIs 334 method: HttpMethod.Get, requestUri: $"api/products/{name}"); HttpResponseMessage response = await client.SendAsync(request); IEnumerable<Product>? model = await response.Content .ReadFromJsonAsync<IEnumerable<Product>>(); ViewData["baseaddress"] = client.BaseAddress; return View(model); } 8. In the Views/Home folder, add a new file named Products.cshtml. (The Visual Studio 2022 project item template is named Razor View - Empty. The JetBrains Rider project item template is named Razor MVC View.) Products.cshtml, modify its contents to output a table of products that match part of a 9. In product name entered in a text box, as shown in the following markup: @using Northwind.EntityModels @model IEnumerable<Product>? @{ ViewData["Title"] = "Products using .NET"; } <div class="text-center"> <h1 class="display-4">@ViewData["Title"]</h1> <div> Go to <a href="/">Products using JavaScript</a> </div> <form action="/home/products"> <input name="name" placeholder="Enter part of a product name" /> <input type="submit" value="Get Products" /> </form> <div> <table class="table"> <thead> <tr> <th scope="col">Product Name</th> </tr> </thead> <tbody> @if (Model is not null) { 