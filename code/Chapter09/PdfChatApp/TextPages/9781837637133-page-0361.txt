Building and Securing Web Services Using Minimal APIs 328 5. In appsettings.Development.json, add an entry to set the level for HTTP logging to Information, as shown highlighted in the following configuration: { "Logging": { "LogLevel": { "Default": "Information", "Microsoft.AspNetCore": "Warning", // To enable logging HTTP requests, this must be // set to Information (3) or higher. "Microsoft.AspNetCore.HttpLogging": "Information" } } } Good Practice: The JSON specification does not allow comments but the JSON with Com- ments format does. You can use JavaScript-style comments using // or /* */. You can read more at the following link: https://code.visualstudio.com/docs/languages/ json#_json-with-comments. If you are using a fussy code editor, just delete the comment I added above. Creating a web page JavaScript client Next, let’s create a web page client that will attempt to use JavaScript on a different port to call the web service: 1. Use your preferred code editor to add a new project, as defined in the following list: • Project template: ASP.NET Core Web App (Model-View-Controller) / mvc • Solution file and folder: Chapter08 • Project file and folder: Northwind.WebApi.Client.Mvc • Other Visual Studio 2022 options: • Authentication Type: None. • Configure for HTTPS: Selected. • Enable Docker: Cleared. • Do not use top-level statements: Cleared. • In Visual Studio 2022, configure the startup project to be the current selection. Northwind.WebApi.Client.Mvc project, in the Properties folder, in launchSettings. 2. In the , change the applicationUrl for the https profile to use port 5082, as shown in the fol- json lowing markup: "applicationUrl": "https://localhost:5082", 