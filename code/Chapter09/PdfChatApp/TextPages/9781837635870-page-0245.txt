Writing, Debugging, and Testing Functions 226 There are three ways to rethrow an exception inside a catch block, as shown in the following list: • To throw the caught exception with its original call stack, call throw. To throw the caught exception as if it was thrown at the current level in the call stack, call throw • with the caught exception, for example, throw ex. This is usually poor practice because you have lost some potentially useful information for debugging but can be useful when you want to deliberately remove that information when it contains sensitive data. • To wrap the caught exception in another exception that can include more information in a message that might help the caller understand the problem, throw a new exception, and pass innerException parameter. the caught exception as the If an error could occur when we call the Gamma function, then we could catch the exception and perform one of the three techniques of rethrowing an exception, as shown in the following code: This code is just illustrative. You would never use all three techniques in the same catch block! try { Gamma(); } catch (IOException ex) { LogException(ex); // Throw the caught exception as if it happened here // this will lose the original call stack. throw ex; // Rethrow the caught exception and retain its original call stack. throw; // Throw a new exception with the caught exception nested within it. throw new InvalidOperationException( message: "Calculation had invalid values. See inner exception for why.", innerException: ex); } 