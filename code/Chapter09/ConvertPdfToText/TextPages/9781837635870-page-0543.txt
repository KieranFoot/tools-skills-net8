Working with Data Using Entity Framework Core 524 We will create a project that uses SQLite, but feel free to use SQL Server or some other database system if you feel comfortable doing so instead: 1. In the WorkingWithEFCore project, add a package reference to the EF Core provider for SQLite and globally and statically import the System.Console class for all C# files, as shown in the following markup: <ItemGroup> <Using Include="System.Console" Static="true" /> </ItemGroup> <ItemGroup> <PackageReference Version="8.0.0" Include="Microsoft.EntityFrameworkCore.Sqlite" /> </ItemGroup> 2. Build the WorkingWithEFCore project to restore packages. After February 2024, you will be able to try out previews of EF Core 9 by specify- ing version 9.0-*. The target framework for your project should continue to use net8.0. By using a wildcard, you will automatically download the latest monthly preview when you restore the packages for the project. Once the EF Core 9 GA version is released in November 2024, change the package version to 9.0.0. After February 2025, you will be able to do the same with EF Core 10 but that will likely require a project targeting net10.0. 3. In the project folder, add a new class file named NorthwindDb.cs. In NorthwindDb.cs, import the main namespace for EF Core, define a class named Northwind, 4. and make the class inherit from DbContext. Then, in an OnConfiguring method, configure the options builder to use SQLite with an appropriate database connection string, as shown in the following code: using Microsoft.EntityFrameworkCore; // To use DbContext and so on. namespace Northwind.EntityModels; // This manages interactions with the Northwind database. public class NorthwindDb : DbContext { protected override void OnConfiguring( DbContextOptionsBuilder optionsBuilder) { string databaseFile = "Northwind.db"; string path = Path.Combine( 