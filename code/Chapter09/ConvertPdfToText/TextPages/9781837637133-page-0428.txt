Chapter 9 395 if (response.IsSuccessStatusCode) { model.Products = await response.Content .ReadFromJsonAsync<IEnumerable<Product>>(); } else { model.Products = Enumerable.Empty<Product>(); string content = await response.Content.ReadAsStringAsync(); // Use the range operator .. to start from zero and // go to the first carriage return. string exceptionMessage = content[..content.IndexOf("\r")]; model.ErrorMessage = string.Format("{0}: {1}:", response.ReasonPhrase, exceptionMessage); } return View(model); } 12. In the Views/Home folder, add a new file named Products.cshtml. (The Visual Studio 2022 project item template is named Razor View - Empty. The JetBrains Rider project item template is named Razor MVC View.) Products.cshtml, modify its contents to output a table of products that match part of a 13. In product name entered in a textbox, as shown in the following markup: @using Northwind.EntityModels @model HomeProductsViewModel @{ ViewData["Title"] = "Products using Polly"; } <div class="text-center"> <h1 class="display-4">@ViewData["Title"]</h1> <div class="alert alert-info"> <p> This page calls a web service endpoint that will randomly fail two out of three times. It will use Polly to retry the call automatically. </p> </div> 