Speaking C# 80 The previous code would generate the following JSON document: { "first_name": "Alice", "age": 56, "calculation": "{3}" } The number of dollars tells the compiler how many curly braces are needed to become recognized as an interpolated expression. Summarizing options for storing text To summarize: • Literal string: Characters enclosed in double-quote characters. They can use escape characters like \t for tab. To represent a backslash, use two: \\. • Raw string literal: Characters enclosed in three or more double-quote characters. Verbatim string: A literal string prefixed with @ to disable escape characters so that a backslash • is a backslash. It also allows the string value to span multiple lines because the whitespace characters are treated as themselves instead of instructions to the compiler. $ to enable embedded formatted variables. • Interpolated string: A literal string prefixed with You will learn more about this later in this chapter. Storing numbers Numbers are data that we want to perform an arithmetic calculation on, for example, multiplying. A telephone number is not a number. To decide whether a variable should be stored as a number or not, ask yourself whether you need to perform arithmetic operations on the number or whether the number includes non-digit characters such as parentheses or hyphens to format the number, such as (414) 555-1234. In this case, the “number” is a sequence of characters, so it should be stored as a string. Numbers can be natural numbers, such as 42, used for counting (also called whole numbers); they can also be negative numbers, such as -42 (called integers); or they can be real numbers, such as 3.9 (with a fractional part), which are called single- or double-precision floating-point numbers in computing. Let’s explore numbers: 1. Use your preferred code editor to add a new Console App / console project named Numbers Chapter02 solution. to the • For Visual Studio 2022, configure the startup project to the current selection. 2. In Program.cs, delete the existing code, and then type statements to declare some number variables using various data types, as shown in the following code: // An unsigned integer is a positive whole number or 0. uint naturalNumber = 23; 