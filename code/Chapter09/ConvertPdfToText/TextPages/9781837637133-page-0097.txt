Managing Relational Data Using SQL Server 64 2. Before the statement that closes the connection, add statements to define a command that selects the ID, name, and price from the Products table, executes it, and outputs the product IDs, names, and prices using a data reader, as shown in the following code: SqlCommand cmd = connection.CreateCommand(); cmd.CommandType = CommandType.Text; cmd.CommandText = "SELECT ProductId, ProductName, UnitPrice FROM Products"; SqlDataReader r = cmd.ExecuteReader(); string horizontalLine = new string('-', 60); WriteLine(horizontalLine); WriteLine("| {0,5} | {1,-35} | {2,10} |", arg0: "Id", arg1: "Name", arg2: "Price"); WriteLine(horizontalLine); while (r.Read()) { WriteLine("| {0,5} | {1,-35} | {2,10:C} |", r.GetInt32("ProductId"), r.GetString("ProductName"), r.GetDecimal("UnitPrice")); } WriteLine(horizontalLine); r.Close(); We format the unit price using the C format, which uses the current culture to format currency values. The call to ConfigureConsole sets the current culture to US English so the output for all readers uses $. To test alternative cultures like French that use the Euro currency symbol, modify the call at the top of the Program.cs file, as shown in the following code: ConfigureConsole("fr-FR");. 3. Run the console app and note the results, as shown in the following partial output: ---------------------------------------------------------- | Id | Name | Price | ---------------------------------------------------------- | 1 | Chai | $18.00 | | 2 | Chang | $19.00 | 