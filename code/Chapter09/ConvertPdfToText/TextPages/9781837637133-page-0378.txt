Chapter 8 345 } } else { WriteInColor(string.Format("{0}: {1}", (int)response.StatusCode, await response.Content.ReadAsStringAsync()), ConsoleColor.DarkRed); WriteLine(); } } catch (Exception ex) { WriteLine(ex.Message); } await Task.Delay(TimeSpan.FromSeconds(waitFor)); } 7. If your database server is not running (for example, because you are hosting it in Docker, a virtual machine, or in the cloud), then make sure to start it. Northwind.WebApi.Service project using the https profile without debugging. 8. Start the Northwind.WebApi.Client.Console project without debugging. 9. Start the 10. In the console app, press Enter to generate a GUID-based client ID. Start the Northwind.WebApi.Client.Console project using the https profile without debugging 11. again so we have two clients. 12. In the console app, press Enter to generate a GUID-based client ID. Note that each client can make two requests before it starts to receive 429 status codes, as 13. shown in the following output and in Figure 8.9: Enter a client name or press Enter: X-Client-Id will be: console-client-d54c61ba-66bb-4e39-9c1a-7af6e2bf647e 07:32:18: Chai, Chang, Aniseed Syrup, Chef Anton's Cajun Seasoning, Grandma's Boysenberry Spread, Uncle Bob's Organic Dried Pears, Northwoods Cranberry Sauce, Ikura, Queso Cabrales, Queso Manchego La Pastora, 07:32:20: Chai, Chang, Aniseed Syrup, Chef Anton's Cajun Seasoning, Grandma's Boysenberry Spread, Uncle Bob's Organic Dried Pears, Northwoods Cranberry Sauce, Ikura, Queso Cabrales, Queso Manchego La Pastora, 07:32:21: 429: API calls quota exceeded! maximum admitted 2 per 10s. 07:32:22: 429: API calls quota exceeded! maximum admitted 2 per 10s. 07:32:23: 429: API calls quota exceeded! maximum admitted 2 per 10s. 07:32:24: 429: API calls quota exceeded! maximum admitted 2 per 10s. 