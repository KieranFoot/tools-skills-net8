Chapter 5 239 { OutputEncoding = System.Text.Encoding.UTF8; if (!useComputerCulture) { CultureInfo.CurrentCulture = CultureInfo.GetCultureInfo(culture); } if (showCulture) { WriteLine($"Current culture: {CultureInfo.CurrentCulture. DisplayName}."); } } } By the end of this chapter, you will understand how the preceding method uses C# fea- tures like partial classes, optional parameters, and so on. If you would like to learn more about working with languages and cultures, as well as dates, times, and time zones, then there is a chapter about globalization and localization in my companion book, Apps and Services with .NET 8. Instantiating a class Now, we are ready to write statements to instantiate the Person class: 1. In the PeopleApp project, in the Program.cs file, delete the existing statements, then add statements to import the namespace for our Person class, and then call the ConfigureConsole method without any arguments so that it sets the current culture to US English, allowing all readers to see the same output, as shown in the following code: using Packt.Shared; // To use Person. ConfigureConsole(); // Sets current culture to US English. // Alternatives: // ConfigureConsole(useComputerCulture: true); // Use your culture. // ConfigureConsole(culture: "fr-FR"); // Use French culture. Although we could import the Packt.Shared namespace globally, it will be clearer to anyone reading this code where we import the types we use from if the import statement is at the top of the file, and the PeopleApp project will only have this one Program.cs file that needs the namespace imported. 