Combining Data Sources Using GraphQL 512 Understanding field conventions The C# method we created in the Query class was named GetGreeting, but when querying it, we used greeting. The Get prefix on method names that represent fields in GraphQL is optional. Letâ€™s see some more examples: 1. In Query.cs, add two more methods without the Get prefix, as highlighted in the following code: namespace Northwind.GraphQL.Service; public class Query { public string GetGreeting() => "Hello, World!"; public string Farewell() => "Ciao! Ciao!"; public int RollTheDie() => Random.Shared.Next(1, 7); } 2. Start the Northwind.GraphQL.Service project, using the https profile without debugging. Click the Schema Definition tab, and note the updated schema, as shown in the following code: 3. type Query { greeting: String! farewell: String! rollTheDie: Int! } C# methods use PascalCase. GraphQL fields use camelCase. 4. Click the Operations tab, and modify the query to specify a name and request the rollTheDie field, as shown in the following code: query GetNumber { rollTheDie } 5. Click Run again multiple times. Note that the responses contain a random number between 1 and 6, and a history of requests and responses is stored for the current browser session, as shown in Figure 12.4: 