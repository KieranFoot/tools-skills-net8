16 Building Mobile and Desktop Apps Using .NET MAUI This chapter is about learning how to make graphical user interface (GUI) apps by building a cross-plat- form mobile and desktop app for iOS and Android, macOS Catalyst, and Windows using .NET MAUI (Multi-platform App UI). According to the MAUI team, there are no breaking API changes between .NET 7 and .NET 8. They focused primarily on fixing bugs and improving performance. You will see how eXtensible Application Markup Language (XAML) makes it easy to define the user interface (UI) for a graphical app. XAML is pronounced “zamel.” Cross-platform GUI development cannot be learned in only a hundred or so pages, but I want to intro- duce you to some of what is possible. Think of this .NET MAUI chapter and the additional online-only sections as an introduction that will give you a taste to inspire you, and then you can learn more from a book dedicated to mobile or desktop development. The app will allow the listing and management of customers in the Northwind database. The mobile app that you create will call an ASP.NET Core Minimal APIs web service. We will start building it in this chapter and then continue building the app in the online-only section, Implementing Model-View-View- Model for .NET MAUI, which you will find in the exercises at the end of this chapter. A Windows computer with Visual Studio 2022 version 17.8 or later, or any operating system with Visual Studio Code and the dotnet CLI or JetBrains Rider, can be used to create a .NET MAUI project. But you will need a computer with Windows to compile WinUI 3 apps, and you will need a computer with macOS and Xcode to compile for macOS Catalyst and iOS. In this chapter, we will cover the following topics: • Understanding XAML • Understanding .NET MAUI • Building mobile and desktop apps using .NET MAUI • Using shared resources • Using data binding 