Controlling Flow, Converting Types, and Handling Exceptions 140 { "Anne", "Ben", "Charlie", "Doug" }, { "Aardvark", "Bear", "Cat", "Dog" } }; 2. We can discover the lower and upper bounds of this array using helpful methods, as shown in the following code: WriteLine($"1st dimension, lower bound: {grid1.GetLowerBound(0)}"); WriteLine($"1st dimension, upper bound: {grid1.GetUpperBound(0)}"); WriteLine($"2nd dimension, lower bound: {grid1.GetLowerBound(1)}"); WriteLine($"2nd dimension, upper bound: {grid1.GetUpperBound(1)}"); 3. Run the code and note the result, as shown in the following output: 1st dimension, lower bound: 0 1st dimension, upper bound: 2 2nd dimension, lower bound: 0 2nd dimension, upper bound: 3 4. We can then use these values in nested for statements to loop through the string values, as shown in the following code: for (int row = 0; row <= grid1.GetUpperBound(0); row++) { for (int col = 0; col <= grid1.GetUpperBound(1); col++) { WriteLine($"Row {row}, Column {col}: {grid1[row, col]}"); } } 5. Run the code and note the result, as shown in the following output: Row 0, Column 0: Alpha Row 0, Column 1: Beta Row 0, Column 2: Gamma Row 0, Column 3: Delta Row 1, Column 0: Anne Row 1, Column 1: Ben Row 1, Column 2: Charlie Row 1, Column 3: Doug Row 2, Column 0: Aardvark Row 2, Column 1: Bear Row 2, Column 2: Cat Row 2, Column 3: Dog 