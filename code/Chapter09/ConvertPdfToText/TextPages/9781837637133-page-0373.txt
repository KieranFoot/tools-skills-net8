Building and Securing Web Services Using Minimal APIs 340 "Period": "10s", "Limit": 2 }, { "Endpoint": "*", "Period": "12h", "Limit": 100 } ] }, "ClientRateLimitPolicies": { "ClientRules": [ { "ClientId": "console-client-abc123", "Rules": [ { "Endpoint": "*", "Period": "10s", "Limit": 5 }, { "Endpoint": "*", "Period": "12h", "Limit": 250 } ] } ] } } Note: • EnableEndpointRateLimiting is false, meaning all endpoints will share the same rules. • If a client needs to identify itself, it can set a header named X-Client-Id to a unique string value. 429 status code • If a rate limit is reached for a client, the service will start returning responses to that client. Two endpoints will be excluded from the global rate limits because they are on the • endpoint whitelist. One endpoint is for getting a license, and the other endpoint is for checking the status of the service. We will not actually implement these features and you would want to apply different rate limits to these endpoints; otherwise, someone could call them to bring down your server instead. 