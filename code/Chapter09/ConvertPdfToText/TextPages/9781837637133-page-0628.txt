Chapter 13 595 Getting request and response metadata Formally defined request and response messages as part of a contract are not the only mechanisms to pass data between a client and service using gRPC. You can also use metadata sent as headers and trailers. Both are simple dictionaries that are passed along with the messages. Letâ€™s see how you can get metadata about a gRPC call: 1. In the Northwind.Grpc.Client.Mvc project, in the Controllers folder, in HomeController.cs, import the namespace to use the AsyncUnaryCall<T> class, as shown in the following code: using Grpc.Core; // To use AsyncUnaryCall<T>. 2. In the Index method, comment out the statement that makes the call to the gRPC shipper service. Add statements that get the underlying AsyncUnaryCall<T> object, then use it to get the headers, output them to the log, and then get the response, as shown highlighted in the following code: // ShipperReply shipperReply = await _shipperClient.GetShipperAsync( // new ShipperRequest { ShipperId = id }); // The same call as above but not awaited. AsyncUnaryCall<ShipperReply> shipperCall = _shipperClient. GetShipperAsync( new ShipperRequest { ShipperId = id }); Metadata metadata = await shipperCall.ResponseHeadersAsync; foreach (Metadata.Entry entry in metadata) { // Not really critical, just doing this to make it easier to see. _logger.LogCritical($"Key: {entry.Key}, Value: {entry.Value}"); } ShipperReply shipperReply = await shipperCall.ResponseAsync; ViewData["shipper"] = "Shipper from gRPC service: " + $"ID: {shipperReply.ShipperId}, Name: {shipperReply.CompanyName}," + $" Phone: {shipperReply.Phone}."; 3. Start the Northwind.Grpc.Service project without debugging. Northwind.Grpc.Client.Mvc project. 4. Start the https://localhost:5133/. 5. If necessary, start a browser and navigate to the home page: 