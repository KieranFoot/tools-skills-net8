Writing, Debugging, and Testing Functions 176 6. Run the code and then view the result, as shown in the following output: This is the 7 times table with 12 rows: 1 x 7 = 7 2 x 7 = 14 3 x 7 = 21 4 x 7 = 28 5 x 7 = 35 6 x 7 = 42 7 x 7 = 49 8 x 7 = 56 9 x 7 = 63 10 x 7 = 70 11 x 7 = 77 12 x 7 = 84 7. Set the size parameter to 20, as shown in the following code: TimesTable(7, 20); 8. Run the console app and confirm that the times table now has twenty rows. Good Practice: If a function has one or more parameters where just passing the values may not provide enough meaning, then you can optionally specify the name of the parameter as well as its value, as shown in the following code: TimesTable(number: 7, size: 10). 9. Change the number passed into the TimesTable function to other byte values between 0 and 255 and confirm that the output times tables are correct. byte number, for example, an int, double, or string, an 10. Note that if you try to pass a non- error is returned, as shown in the following output: Error: (1,12): error CS1503: Argument 1: cannot convert from 'int' to 'byte' A brief aside about arguments and parameters In daily usage, most developers will use the terms argument and parameter interchangeably. Strictly speaking, the two terms have specific and subtly different meanings. But just like a person can be both a parent and a doctor, the two terms often apply to the same thing. 