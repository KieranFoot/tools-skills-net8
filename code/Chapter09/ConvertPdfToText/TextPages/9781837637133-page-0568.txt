Chapter 12 535 12. Change the ID to 4, send the request, and note the response contains category 4, Dairy Products, with its products in a data property. Now that we have done some basic testing of the service and its responses to queries that we want to run, we can build a client to make those queries and process the JSON responses. Using an ASP.NET Core MVC project as a GraphQL client We will create a model class to make it easy to deserialize the response: 1. Use your preferred code editor to add a new project, as defined in the following list: 1. Project template: ASP.NET Core Web App (Model-View-Controller) / mvc 2. Solution file and folder: Chapter12 3. Project file and folder: Northwind.GraphQL.Client.Mvc 4. Other Visual Studio 2022 options: • Authentication Type: None • Configure for HTTPS: Selected • Enable Docker: Cleared • Do not use top-level statements: Cleared 2. In Visual Studio 2022, set the startup project with the current selection. In the Northwind.GraphQL.Client.Mvc project, add a project reference to the Northwind entity 3. models project, as shown in the following markup: <ItemGroup> <ProjectReference Include="..\..\Chapter03\Northwind.Common. EntityModels .SqlServer\Northwind.Common.EntityModels.SqlServer.csproj" /> </ItemGroup> The path to the project must not have a line break. 4. Build the Northwind.GraphQL.Client.Mvc project at the command prompt or terminal. Properties folder, in launchSettings.json, modify the applicationUrl to use port 5. In the 5123 for https and port 5124 for http, as highlighted in the following configuration: "https": { "commandName": "Project", "dotnetRunMessages": true, "launchBrowser": true, "applicationUrl": "https://localhost:5123;http://localhost:5124", 