Chapter 10 551 LEFT JOIN "Products" AS "p" ON "c"."CategoryId" = "p"."CategoryId" ORDER BY "c"."CategoryId" ... Your logs might vary from those shown above based on your chosen database provider and code editor and future improvements to EF Core. For now, note that different events like opening a connection or executing a command have different event IDs, as shown in the following list: • 20000 RelationalEventId.ConnectionOpening: Includes the database file path 20001 RelationalEventId.ConnectionOpened: Includes the database file path • 20100 RelationalEventId.CommandExecuting: Includes the SQL statement • Filtering logs by provider-specific values The event ID values and what they mean will be specific to the EF Core provider. If we want to know how the LINQ query has been translated into SQL statements and is executing, then the event ID to output has an Id value of 20100: 1. At the top of NorthwindDb.cs, import the namespace for working for EF Core diagnostics, as shown in the following code: // To use RelationalEventId. using Microsoft.EntityFrameworkCore.Diagnostics; 2. Modify the LogTo method call to only output events with an Id of 20100, as shown highlighted in the following code: optionsBuilder.LogTo(WriteLine, // This is the Console method. new[] { RelationalEventId.CommandExecuting }) #if DEBUG .EnableSensitiveDataLogging() .EnableDetailedErrors() #endif ; 3. Run the code and note the following SQL statements that were logged, as shown in the following output, which has been edited for space: dbug: 05/03/2022 12:48:43.153 RelationalEventId.CommandExecuting[20100] (Microsoft.EntityFrameworkCore.Database.Command) Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30'] SELECT "c"."CategoryId", "c"."CategoryName", "c"."Description", "p"."ProductId", "p"."CategoryId", "p"."UnitPrice", "p"."Discontinued", "p"."ProductName", "p"."UnitsInStock" FROM "Categories" AS "c" LEFT JOIN "Products" AS "p" ON "c"."CategoryId" = "p"."CategoryId" 