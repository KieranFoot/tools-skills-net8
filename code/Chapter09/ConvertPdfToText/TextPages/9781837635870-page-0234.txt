Chapter 4 215 Unit testing is a good way to find bugs early in the development process because they test a small unit before they are integrated together or are seen by user acceptance testers. Some developers even fol- low the principle that programmers should create unit tests before they write code, and this is called Test-Driven Development (TDD). Microsoft has a proprietary unit testing framework known as MSTest. There is also a framework named NUnit. However, we will use the free and open-source third-party framework xUnit.net. All three do basically the same thing. xUnit was created by the same team that built NUnit, but they fixed the mistakes they felt they made previously. xUnit is more extensible and has better community support. If you are curious about the pros and cons of the various testing systems, then there are hundreds of articles written by proponents of each. Just Google them: https://www. google.com/search?q=xunit+vs+nunit. Understanding types of testing Unit testing is just one of many types of testing, as described in Table 4.3: Type Description Tests the smallest unit of code, typically a method or function. Unit testing is performed on a unit of code isolated from its dependencies by mocking them Unit if needed. Each unit should have multiple tests: some with typical inputs and expected outputs, some with extreme input values to test boundaries, and some with deliberately wrong inputs to test exception handling. Tests if the smaller units and larger components work together as a single piece of Integration software. Sometimes involves integrating with external components for which you do not have source code. System Tests the whole system environment in which your software will run. Tests the performance of your software; for example, your code must return a web Performance page full of data to a visitor in under 20 milliseconds. Tests how many requests your software can handle simultaneously while Load maintaining required performance, for example, 10,000 concurrent visitors to a website. User Tests if users can happily complete their work using your software. Acceptance Table 4.3: Types of testing 