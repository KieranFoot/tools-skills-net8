Combining Data Sources Using GraphQL 544 "specifiedBy":"http://spec.graphql.org/October2021/ #sec-Field-Selections-on-Objects-Interfaces-and-Unions-Types"}}]} 11. Close Chrome, and shut down both web servers. 12. Fix the mistake in the query! Creating a console app client using Strawberry Shake Instead of using ordinary HTTP clients, ChilliCream has a GraphQL client library to more easily build .NET clients to GraphQL services. More Information: You can learn more about Strawberry Shake at the following link: https://chillicream.com/docs/strawberryshake Now, letâ€™s create another client using Strawberry Shake so that you can see the benefits: 1. Use your preferred code editor to add a new Console App / console project, named Northwind. GraphQL.Client.Console. At the command prompt or terminal for the project folder, create a tools manifest file, as shown 2. in the following command: dotnet new tool-manifest 3. At the command line or terminal, install the Strawberry Shake tools, as shown in the following command: dotnet tool install StrawberryShake.Tools --local 4. Note Strawberry Shake is installed, as shown in the following output: You can invoke the tool from this directory using the following commands: 'dotnet tool run dotnet-graphql' or 'dotnet dotnet-graphql'. Tool 'strawberryshake.tools' (version '13.5.1') was successfully installed. Entry is added to the manifest file C:\apps-services-net8\Chapter12\ Northwind.GraphQL.Client.Console\.config\dotnet-tools.json. 5. In the project, treat warnings as errors, add references to NuGet packages for Microsoft exten- sions for dependency injection, working with HTTP, and Strawberry Shake code generation, and then globally and statically import the Console class, as highlighted in the following markup: <Project Sdk="Microsoft.NET.Sdk"> <PropertyGroup> <OutputType>Exe</OutputType> 