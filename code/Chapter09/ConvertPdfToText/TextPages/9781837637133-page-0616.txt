Chapter 13 583 Testing a gRPC service and client Now we can start the gRPC service and see if the MVC website can call it successfully: 1. Start the Northwind.Grpc.Service project without debugging. Northwind.Grpc.Client.Mvc project. 2. Start the https://localhost:5133/. 3. If necessary, start a browser and navigate to the home page: 4. Note the greeting on the home page, as shown in Figure 13.4: Figure 13.4: Home page after calling the gRPC service to get a greeting 5. View the command prompt or terminal for the ASP.NET Core MVC project and note the info POST was processed by the greet.Greeter/SayHello end- messages that indicate an HTTP/2 point in about 41ms, as shown in the following output: info: System.Net.Http.HttpClient.Greeter.LogicalHandler[100] Start processing HTTP request POST https://localhost:5131/greet. Greeter/SayHello info: System.Net.Http.HttpClient.Greeter.ClientHandler[100] Sending HTTP request POST https://localhost:5131/greet.Greeter/ SayHello info: System.Net.Http.HttpClient.Greeter.ClientHandler[101] Received HTTP response headers after 60.5352ms - 200 info: System.Net.Http.HttpClient.Greeter.LogicalHandler[101] End processing HTTP request after 69.1623ms - 200 6. Enter and submit your own name on the page. 7. Close the browser and shut down the web servers. Implementing gRPC for an EF Core model Now we will add a service for working with the Northwind database to the gRPC project. Implementing the gRPC service We will reference the EF Core model that you created in Chapter 3, Building Entity Models for SQL Server Using EF Core, then define a contract for the gRPC service using a .proto file, and finally implement the service. 