Building Websites Using ASP.NET Core Razor Pages 662 10. At the command prompt or terminal, press Ctrl + C to shut down the web server, and note the message that is written, as shown highlighted in the following output: info: Microsoft.Hosting.Lifetime[0] Application is shutting down... This executes after the web server has stopped! C:\cs12dotnet8\PracticalApps\Northwind.Web\bin\Debug\net8.0\Northwind. Web.exe (process 19888) exited with code 0. 11. If you need to trust a local self-signed SSL certificate, then at the command line or terminal, dotnet dev-certs https --trust. enter the following command: 12. Note the message Trusting the HTTPS development certificate was requested. You might be prompted to enter your password and a valid HTTPS certificate may already be present. Enabling stronger security and redirecting to a secure connection It is good practice to enable stricter security and automatically redirect requests for HTTP to HTTPS. Good Practice: An optional but recommended security enhancement is HTTP Strict Transport Security (HSTS), which you should always enable. If a website specifies it and a browser supports it, then it forces all communication over HTTPS and prevents the visitor from using untrusted or invalid certificates. Letâ€™s do that now: 1. In Program.cs, after the statement that builds the app, add a region and an if statement to enable HSTS when not in development, and redirect HTTP requests to HTTPS, as shown high- lighted in the following code: var builder = WebApplication.CreateBuilder(args); var app = builder.Build(); #region Configure the HTTP pipeline and routes if (!app.Environment.IsDevelopment()) { app.UseHsts(); } app.UseHttpsRedirection(); app.MapGet("/", () => "Hello World!"); #endregion 