Chapter 14 715 Understanding action method return types An action method can return .NET types like a single string value; complex objects defined by a class, record, or struct; or collections of complex objects. ASP.NET Core will serialize them into the requested data format set in the HTTP request Accept header, for example, JSON, if a suitable serializer has been registered. For more control over the response, there are helper methods that return an ActionResult wrapper around the .NET type. Declare the action method’s return type to be IActionResult if it could return different return types based on the input or other variables. Declare the action method’s return type to be ActionResult<T> if it will only return a single type but with different status codes. Good Practice: Decorate action methods with the [ProducesResponseType] attribute to indicate all the known types and HTTP status codes that the client should expect in a response. This information can then be publicly exposed to document how a client should interact with your web service. Think of it as part of your formal documentation. Later in this chapter, you will learn how you can install a code analyzer to give you warnings when you do not decorate your action methods like this. For example, an action method that gets a product based on an id parameter will be decorated with three attributes—one to indicate that it responds to GET requests and has an id parameter and two to indicate what happens when it succeeds and when the client has supplied an invalid product ID, as shown in the following code: [HttpGet("{id}")] [ProducesResponseType(200, Type = typeof(Product))] [ProducesResponseType(404)] public IActionResult Get(string id) The ControllerBase class has methods to make it easy to return different responses, as shown in Table 14.4: Method Description Returns a 200 status code and a resource converted into the client’s preferred Ok format, like JSON or XML. Commonly used in response to a GET request. Returns a 201 status code and the path to the new resource. Commonly used in CreatedAtRoute response to a POST request to create a resource that can be created quickly. Returns a 202 status code to indicate the request is being processed but has not Accepted been completed. Commonly used in response to a POST, PUT, PATCH, or DELETE request that triggers a background process that takes a long time to complete. Returns a 204 status code and an empty response body. Commonly used in NoContentResult response to a PUT, PATCH, or DELETE request when the response does not need to contain the affected resource. 