Working with Files, Streams, and Serialization 510 If you are using a different code editor, then you can manually create the launchSettings.json file. Environment variables defined in the launchSettings. json file are set at process scope. 8. At the command prompt or terminal with administrator permissions, set some environment variables at the user and machine scope levels on Windows, as shown in the following com- mands: setx MY_SECRET "Beta" setx MY_SECRET "Gamma" /M 9. Note the result for each command, as shown in the following output: SUCCESS: Specified value was saved. On macOS or Linux, use the export command instead. 10. Run the code and view the result, as shown in the following output: Process - MY_SECRET: Alpha Machine - MY_SECRET: Gamma User - MY_SECRET: Beta Now that you have seen how to work with environment variables, we can use them in future chapters to set options like passwords rather than store those sensitive values in code. Practicing and exploring Test your knowledge and understanding by answering some questions, getting some hands-on practice, and exploring this chapter’s topics with more in-depth research. Exercise 9.1 – Test your knowledge Answer the following questions: 1. What is the difference between using the File class and the FileInfo class? ReadByte method and the Read method of a stream? 2. What is the difference between the StringReader, TextReader, and StreamReader classes? 3. When would you use the DeflateStream type do? 4. What does the 5. How many bytes per character does UTF-8 encoding use? 6. What is an object graph? 7. What is the best serialization format to choose to minimize space requirements? 