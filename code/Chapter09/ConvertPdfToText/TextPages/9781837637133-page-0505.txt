Building Serverless Nanoservices Using Azure Functions 472 ========== Build started at 3:21 PM and took 03:34.100 minutes ========== ========== Publish: 1 succeeded, 0 failed, 0 skipped ========== ========== Publish started at 3:21 PM and took 03:34.100 minutes ========== Waiting for Function app to be ready... Function app is ready 12. In the Publish window, click Open site and note your Azure Functions v4 host site is ready. 13. Test the function in your browser by appending the following relative URL to the address box, as shown in Figure 10.8: /api/NumbersToWordsFunction?amount=987654321 Figure 10.8: Calling the function hosted in the Azure cloud Using Visual Studio Code to publish You can learn how to publish using Visual Studio Code at the following link: https://learn.microsoft.com/en-us/azure/azure-functions/functions-develop-vs- code?tabs=csharp#sign-in-to-azure Now that you’ve successfully published your Azure Functions project to the cloud, it’s import- ant to understand how to manage your resources efficiently. Let’s explore how to clean up our Azure Functions resources to avoid unnecessary costs and ensure tidy resource management. Cleaning up Azure Functions resources You can use the following steps to delete the function app and its related resources to avoid incurring further costs: 1. In your browser, navigate to https://portal.azure.com/. 2. In the Azure portal, in your function app’s Overview blade, select Resource Group. 3. Confirm that it contains only resources that you want to delete; for example, there should be a Storage account, a Function App, and an App Service plan. If you are sure you want to delete all the resources in the group, then click Delete resource group 4. and accept any other confirmations. Alternatively, you can delete each resource individually. Practicing and exploring Test your knowledge and understanding by answering some questions, getting some hands-on practice, and exploring this chapter’s topics with deeper research. 