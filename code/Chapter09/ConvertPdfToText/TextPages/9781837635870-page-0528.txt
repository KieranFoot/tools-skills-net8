Chapter 9 509 4. Run the code and view the result, as shown in the following output: MY_PASSWORD: Pa$$w0rd In a real-world app, you might pass an argument to the console that is then used to set the process scope environment variable on startup for reading later in the process lifetime. 5. In Program.cs, add statements to try to get an environment variable named MY_PASSWORD at all three potential scope levels, and then output them, as shown in the following code: string secret_key = "MY_SECRET"; string? secret = GetEnvironmentVariable(secret_key, EnvironmentVariableTarget.Process); WriteLine($"Process - {secret_key}: {secret}"); secret = GetEnvironmentVariable(secret_key, EnvironmentVariableTarget.Machine); WriteLine($"Machine - {secret_key}: {secret}"); secret = GetEnvironmentVariable(secret_key, EnvironmentVariableTarget.User); WriteLine($"User - {secret_key}: {secret}"); 6. If you are using Visual Studio 2022, then navigate to Project | WorkingWithEnvVars Proper- ties, click the Debug tab, and then click Open debug launch profiles UI. In the Environment MY_SECRET and a value of Alpha. variables section, add an entry with the name launchSettings.json, and note the configured environment 7. In the Properties folder, open variables, as shown in the following configuration: { "profiles": { "WorkingWithEnvVars": { "commandName": "Project", "environmentVariables": { "MY_SECRET": "Alpha" } } } } 