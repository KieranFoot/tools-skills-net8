Using Popular Third-Party Libraries 220 WriteLine("Original: {0}, Metric: {1}", millions, millions.ToMetric(decimals: 1)); } 2. In Program.cs, comment out the previous method call and add a call to NumberFormatting, as shown highlighted in the following code: //OutputEnumNames(); NumberFormatting(); 3. Run the code and view the result, as shown in the following output: Original number: 123 Roman: CXXIII Words: one hundred and twenty-three Ordinal words: hundred and twenty-third one fox, one person, one sheep, one apple, one goose, one oasis, one potato, one die, one dwarf, one attorney general, one bicep two foxes, two people, two sheep, two apples, two geese, two oases, two potatoes, two dice, two dwarves, two attorney generals, two biceps three foxes, three people, three sheep, three apples, three geese, three oases, three potatoes, three dice, three dwarves, three attorney generals, three biceps Original: 12345, Metric: About 12k Original: 12345, Metric: About 12 thousand Original: 123456789, Metric: 123.5M Humanizerâ€™s default vocabulary is quite decent, but it does not correctly pluralize attorney general (the plural is attorneys general) or biceps (the singular is biceps and the plural is bicepses). 4. In Program.Functions.cs, import the namespace for working with Humanizer vocabularies, as shown in the following code: using Humanizer.Inflections; // To use Vocabularies. 5. In Program.Functions.cs, at the top of the NumberFormatting method, add statements to register two irregular words, as shown in the following code: 