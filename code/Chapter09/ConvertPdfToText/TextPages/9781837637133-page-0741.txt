Building Mobile and Desktop Apps Using .NET MAUI 708 .NET MAUI defines its controls in the Microsoft.Maui.Controls namespace. It has some specialized controls too: • Application: Represents a cross-platform graphical application. It sets the root page, man- ages windows, themes, and resources, and provides app-level events like PageAppearing, ModalPushing, and RequestedThemeChanged. It also has methods that you can override to hook into app events like OnStart, OnSleep, OnResume, and CleanUp. Shell: A Page control that provides UI features that most applications require, like flyout or • tab bar navigation, navigation tracking and management, and navigation events. Most .NET MAUI controls derive from View. One of the most important characteristics of a View-derived type is that they can be nested. This allows you to build complex custom user interfaces. Markup extensions To support some advanced features, XAML uses markup extensions. Some of the most important enable element and data binding and the reuse of resources, as shown in the following list: • {Binding} links an element to a value from another element or a data source. {OnPlatform} sets properties to different values depending on the current platform. • {StaticResource} and {DynamicResource} link an element to a shared resource. • {AppThemeBinding} links an element to a shared resource defined in a theme. • .NET MAUI provides the OnPlatform markup extension to allow you to set different markup depend- ing on the platform. For example, iPhone X and later introduced the notch that takes up extra space at the top of the phone display. We could add extra padding to an app that applies to all devices, but it would be better if we could add that extra padding only to iOS, as shown in the following markup: <VerticalStackLayout> <VerticalStackLayout.Padding> <OnPlatform x:TypeArguments="Thickness"> <On Platform="iOS" Value="30,60,30,30" /> <On Platform="Android" Value="30" /> <On Platform="WinUI" Value="30" /> </OnPlatform> </VerticalStackLayout.Padding> There is a simplified syntax too, as shown in the following markup: <VerticalStackLayout Padding"{OnPlatform iOS='30,60,30,30', Default='30'}"> 