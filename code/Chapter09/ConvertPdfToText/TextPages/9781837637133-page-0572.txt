Chapter 12 539 if (!response.IsSuccessStatusCode) { model.Code = response.StatusCode; model.Errors = new[] { new Error { Message = "Service is not successfully responding to GET requests." } }; return View(model); } // Next, make a request to the GraphQL endpoint. request = new( method: HttpMethod.Post, requestUri: "graphql"); request.Content = new StringContent(content: $$$""" { "query": "{productsInCategory(categoryId:{{{id}}}){productId productName unitsInStock}}" } """, encoding: Encoding.UTF8, mediaType: "application/json"); response = await client.SendAsync(request); model.Code = response.StatusCode; model.RawResponseBody = await response.Content.ReadAsStringAsync(); if (response.IsSuccessStatusCode) { model.Products = (await response.Content .ReadFromJsonAsync<ResponseProducts>())?.Data?. ProductsInCategory; } else { model.Errors = (await response.Content .ReadFromJsonAsync<ResponseErrors>())?.Errors; } } catch (Exception ex) { 