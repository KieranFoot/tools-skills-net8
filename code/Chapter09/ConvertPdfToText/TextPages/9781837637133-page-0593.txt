Combining Data Sources Using GraphQL 560 Warning! You will not be able to delete products that are referenced in other tables. IDs 1 to 77 will throw a referential integrity exception. 17. Click Run, and note the response, as shown in the following output: { "data": { "deleteProduct": { "success": true } } } 18. Confirm that the product was deleted by re-running the query for new products, and note that you get an empty array, as shown in the following output: { "data": { "products": [] } } 19. Close the browser, and shut down the web server. Implementing GraphQL subscriptions GraphQL subscriptions, by default, work over WebSockets but can also work over Server-Sent Events (SSE), SignalR, or even gRPC. Imagine that a client app wants to be notified when a product has its unit price reduced. It would be great if the client could subscribe to an event that gets triggered whenever a unit price is reduced, instead of having to query for changes to the unit prices. Adding a subscription and topic to the GraphQL service Let’s add this feature to our GraphQL service using subscriptions: 1. Add a new class file named ProductDiscount.cs. 2. Modify the contents to define a model to notify a client about a product’s unit price reduction, as shown in the following code: namespace Northwind.GraphQL.Service; public class ProductDiscount 