10 Working with Data Using Entity Framework Core This chapter is about reading from and writing to relational data stores, such as SQLite and SQL Server, by using the object-to-data store mapping technology named Entity Framework Core (EF Core). This chapter will cover the following topics: • Understanding modern databases • Setting up EF Core in a .NET project • Defining EF Core models • Querying EF Core models • Loading and tracking patterns with EF Core • Modifying data with EF Core Understanding modern databases Two of the most common places to store data are in a Relational Database Management System (RDBMS), such as SQL Server, PostgreSQL, MySQL, and SQLite, or in a NoSQL database, such as Azure Cosmos DB, Redis, MongoDB, and Apache Cassandra. Relational databases were invented in the 1970s. They are queried with Structured Query Language (SQL). At the time, data storage costs were high, so they reduced data duplication as much as possible. Data is stored in tabular structures with rows and columns that are tricky to refactor once in produc- tion. They can be difficult and expensive to scale. NoSQL databases do not just mean “no SQL;” they can also mean “not only SQL.” They were invented in the 2000s, after the internet and the web had become popular, and adopted many of the learnings from that era of software. They are designed for massive scalability and high performance and to make programming easier by providing maximum flexibility and allowing schema changes at any time because they do not enforce a structure. 