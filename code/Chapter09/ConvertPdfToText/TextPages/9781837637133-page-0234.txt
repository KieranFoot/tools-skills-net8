Chapter 5 201 Figure 5.2: Loading employees into a WPF app synchronously and asynchronously 18. Note the difference in timings for the two operations. The UI is blocked when fetching data synchronously, while the UI remains responsive when fetching data asynchronously. 19. Close the WPF app. Improving scalability for web applications and web services The async and await keywords can also be applied on the server side when building websites, appli- cations, and services. From the client application’s point of view, nothing changes (or they might even notice a small increase in the time taken for a request to return). So, from a single client’s point of view, the use of async and await to implement multitasking on the server side makes their experience worse! On the server side, additional, cheaper worker threads are created to wait for long-running tasks to finish so that expensive I/O threads can handle other client requests instead of being blocked. This improves the overall scalability of a web application or service. More clients can be supported simul- taneously. 