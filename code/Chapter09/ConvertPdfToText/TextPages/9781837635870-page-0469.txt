Working with Common .NET Types 450 vaccine.Enqueue("Pamela", 1); vaccine.Enqueue("Rebecca", 3); vaccine.Enqueue("Juliet", 2); vaccine.Enqueue("Ian", 1); OutputPQ("Current queue for vaccination", vaccine.UnorderedItems); WriteLine($"{vaccine.Dequeue()} has been vaccinated."); WriteLine($"{vaccine.Dequeue()} has been vaccinated."); OutputPQ("Current queue for vaccination", vaccine.UnorderedItems); WriteLine($"{vaccine.Dequeue()} has been vaccinated."); WriteLine("Adding Mark to queue with priority 2."); vaccine.Enqueue("Mark", 2); WriteLine($"{vaccine.Peek()} will be next to be vaccinated."); OutputPQ("Current queue for vaccination", vaccine.UnorderedItems); 5. Run the code and view the result, as shown in the following output: Current queue for vaccination: Pamela: 1 Rebecca: 3 Juliet: 2 Ian: 1 Pamela has been vaccinated. Ian has been vaccinated. Current queue for vaccination: Juliet: 2 Rebecca: 3 Juliet has been vaccinated. Adding Mark to queue with priority 2 Mark will be next to be vaccinated. Current queue for vaccination: Mark: 2 Rebecca: 3 Collection add and remove methods Each collection has a different set of methods to “add” and “remove” items, as shown in Table 8.13: 