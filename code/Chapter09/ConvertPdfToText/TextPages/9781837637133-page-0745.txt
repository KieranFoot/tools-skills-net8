Building Mobile and Desktop Apps Using .NET MAUI 712 To add missing workload installations required for a project, in the folder containing the project file, enter the following command: dotnet workload restore <projectname> Over time you are likely to install multiple versions of workloads related to different versions of .NET SDKs. Before .NET 8, developers tried to manually delete workload folders, which can cause problems. Introduced with .NET 8 is a new feature to remove leftover and unneeded workloads, as shown in the following command: dotnet workload clean More Information: If you want to use Visual Studio 2022 to create an iOS mobile app or a macOS Catalyst desktop app, then you can connect over a network to a Mac build host. Instructions can be found at the following link: https://learn.microsoft.com/en-us/ dotnet/maui/ios/pair-to-mac. .NET MAUI user interface component categories .NET MAUI includes some common controls for building user interfaces. They can be divided into four categories: • Pages represent cross-platform application screens, for example, Shell, ContentPage, NavigationPage, FlyoutPage, and TabbedPage. Grid, • Layouts represent the structure of a combination of other UI components, for example, StackLayout, and FlexLayout. Views represent a single user interface component, for example, CarouselView, CollectionView, • Label, Entry, Editor, and Button. Cells represent a single item in a list or table view, for example, TextCell, ImageCell, • SwitchCell, and EntryCell. Shell control The Shell control is designed to simplify app development by providing standardized navigation and search capabilities. In your project, you would create a class that inherits from the Shell control class. Your derived class defines components like a TabBar, which contains Tab items, FlyoutItem instanc- es, and ShellContent, which contain the ContentPage instances for each page. A TabBar should be FlyoutItem navigation used when there are only up to about four or five pages to navigate between. should be used when there are more items because they can be presented as a vertical scrollable list. TabBar showing a subset of items. The Shell will keep them synchronized. You can use both, with the Flyout navigation is when a list of items flies out (or slides) from the left side of a mobile device’s screen or desktop app’s main window. The user invokes it by tapping on a “hamburger” icon with three horizontal lines stacked on top of each other. When the user taps a flyout item, its page is instantiated when needed, as the user navigates around the UI. 