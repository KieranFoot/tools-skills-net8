Chapter 16 727 <Button Grid.Row="1" Grid.Column="3" Text="0" /> <Button Grid.Row="2" Grid.Column="0" Text="4" /> <Button Grid.Row="2" Grid.Column="1" Text="5" /> <Button Grid.Row="2" Grid.Column="2" Text="6" /> <Button Grid.Row="2" Grid.Column="3" Text="." /> <Button Grid.Row="3" Grid.Column="0" Text="1" /> <Button Grid.Row="3" Grid.Column="1" Text="2" /> <Button Grid.Row="3" Grid.Column="2" Text="3" /> <Button Grid.Row="3" Grid.Column="3" Text="=" /> </Grid> <Label x:Name="Output" FontSize="24" VerticalOptions="Center" HorizontalOptions="Start" /> </VerticalStackLayout> </ContentPage> 2. Add an event handler for the pageâ€™s Loaded event, as shown highlighted in the following markup: Title="Employees" Loaded="ContentPage_Loaded"> 3. In EmployeesPage.xaml.cs, add statements to resize each button in the grid and hook up an event handler for the Clicked event, as shown in the following code: private void ContentPage_Loaded(object sender, EventArgs e) { foreach (Button button in GridCalculator.Children.OfType<Button>()) { button.FontSize = 24; button.WidthRequest = 54; button.HeightRequest = 54; button.Clicked += Button_Clicked; } } 4. Add a Button_Clicked method, with statements to handle the clicked button by concatenating the text of the button to the output label, as shown in the following code: private void Button_Clicked(object sender, EventArgs e) { string operationChars = "+-/X="; Button button = (Button)sender; 