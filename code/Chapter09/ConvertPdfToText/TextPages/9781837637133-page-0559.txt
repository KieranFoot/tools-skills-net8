Combining Data Sources Using GraphQL 526 7. Click the + to open a new tab, and write a named query to request the second page of 10 products, by specifying that we want the cursor that starts after OQ==, as shown in the following markup: query SecondTenProducts { productsWithPaging(after: "OQ==") { pageInfo { hasPreviousPage hasNextPage startCursor endCursor } nodes { productId productName } } } 8. Click Run, and note the response, including the pageInfo section, which tells us that there is another page of products and the cursor for this page ranges from MTA= to MTk=, as shown in the following partial output: { "data": { "productsWithPaging": { "pageInfo": { "hasPreviousPage": true, "hasNextPage": true, "startCursor": "MTA=", "endCursor": "MTk=" }, "nodes": [ { "productId": 11, "productName": "Queso Cabrales" }, ... { "productId": 20, "productName": "Sir Rodney's Marmalade" } ] } 