Chapter 10 555 string? input = ReadLine(); if (string.IsNullOrWhiteSpace(input)) { Fail("You did not enter part of a product name."); return; } IQueryable<Product>? products = db.Products? .Where(p => EF.Functions.Like(p.ProductName, $"%{input}%")); if (products is null || !products.Any()) { Fail("No products found."); return; } foreach (Product p in products) { WriteLine("{0} has {1} units in stock. Discontinued: {2}", p.ProductName, p.Stock, p.Discontinued); } } 2. In Program.cs, comment out the existing methods and call QueryingWithLike. che, and view the result, as shown in the 3. Run the code, enter a partial product name such as following edited output: Enter part of a product name: che dbug: 07/16/2023 13:03:42.793 RelationalEventId.CommandExecuting[20100] (Microsoft.EntityFrameworkCore.Database.Command) Executing DbCommand [Parameters=[@__Format_1='%che%' (Size = 5)], CommandType='Text', CommandTimeout='30'] SELECT "p"."ProductId", "p"."CategoryId", "p"."UnitPrice", "p"."Discontinued", "p"."ProductName", "p"."UnitsInStock" FROM "Products" AS "p" WHERE "p"."ProductName" LIKE @__Format_1 Chef Anton's Cajun Seasoning has 53 units in stock. Discontinued: False Chef Anton's Gumbo Mix has 0 units in stock. Discontinued: True Queso Manchego La Pastora has 86 units in stock. Discontinued: False 