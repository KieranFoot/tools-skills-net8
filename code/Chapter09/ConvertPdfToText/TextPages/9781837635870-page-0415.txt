Packaging and Distributing .NET Types 396 9. Comment out the statement that we cannot use in an AOT project. More Information: You can learn more about native AOT at the following link: https:// learn.microsoft.com/en-us/dotnet/core/deploying/native-aot/. Decompiling .NET assemblies One of the best ways to learn how to code for .NET is to see how professionals do it. Most code editors have an extension for decompiling .NET assemblies. Visual Studio 2022 and Visual Studio Code can use the ILSpy extension. JetBrains Rider has a built-in IL Viewer tool. Good Practice: You could decompile someone elseâ€™s assemblies for non-learning purposes, like copying their code for use in your own production library or application, but remember that you are viewing their intellectual property, so please respect that. Decompiling using the ILSpy extension for Visual Studio 2022 For learning purposes, you can decompile any .NET assembly with a tool like ILSpy: 1. In Visual Studio 2022, navigate to Extensions | Manage Extensions. ilspy. 2. In the search box, enter 3. For the ILSpy 2022 extension, click Download. 4. Click Close. 5. Close Visual Studio to allow the extension to be installed. Chapter07 solution. 6. Restart Visual Studio and reopen the In Solution Explorer, right-click the DotNetEverywhere project and select Open output in ILSpy. 7. 8. In ILSpy, in the toolbar, make sure that C# is selected in the drop-down list of languages to decompile into. In ILSpy, in the Assemblies navigation tree on the left, expand DotNetEverywhere (1.0.0.0, 9. .NETCoreApp, v8.0). 