Chapter 14 723 Figure 14.2: Customers from the Northwind database as a JSON document 3. Navigate to https://localhost:5151/api/customers?country=Germany and note the JSON document returned, containing only the customers in Germany. If you get an empty array returned, then make sure you have entered the country name using the correct casing, because the database query is case-sensitive. For example, compare the results of uk and UK. 4. Navigate to https://localhost:5151/api/customers/alfki and note the JSON document returned containing only the customer named Alfreds Futterkiste. Unlike country names, we do not need to worry about casing for the customer id value because, in string value as uppercase. the customer repository implementation, we normalized the But how can we test the other HTTP methods, such as POST, PUT, and DELETE? And how can we docu- ment our web service so it’s easy for anyone to understand how to interact with it? There are many tools for testing Web APIs, for example, Postman. Although Postman is popular, I prefer tools like HTTP Editor in Visual Studio 2022 or REST Client in Visual Studio Code because they do not hide what is happening. I feel Postman is too GUI-y. But I encourage you to explore different tools and find the ones that fit your style. You can learn more about Postman at the following link: https://www.postman.com/. To solve the first problem, we can use the HTTP Editor tool built into Visual Studio 2022 and install a Visual Studio Code extension named REST Client. JetBrains Rider has its own equivalent. These are tools that allow you to send any type of HTTP request and view the response in your code editor. To solve the second problem, we can use Swagger, the world’s most popular technology for document- ing and testing HTTP APIs. But first, let’s see what is possible with the code editor HTTP/REST tools. Making GET requests using HTTP/REST tools We will start by creating a file for testing GET requests: 1. If you have not already installed REST Client by Huachao Mao (humao.rest-client), then install it in Visual Studio Code now. PracticalApps solution and then start the Northwind. 2. In your preferred code editor, open the project web service. WebApi 