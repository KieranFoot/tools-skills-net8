Chapter 4 161 { WriteLine("Delete id: {0}, productName: {1}", arg0: product.id, arg1: product.productName); ItemResponse<ProductCosmos> response = await container.DeleteItemAsync<ProductCosmos>( id: product.id, partitionKey: new(product.id)); WriteLine("Status code: {0}, Request charge: {1} RUs.", response.StatusCode, response.RequestCharge); totalCharge += response.RequestCharge; } } } } catch (HttpRequestException ex) { WriteLine($"Error: {ex.Message}"); WriteLine("Hint: If you are using the Azure Cosmos Emulator then please make sure it is running."); } catch (Exception ex) { WriteLine("Error: {0} says {1}", arg0: ex.GetType(), arg1: ex.Message); } WriteLine("Total requests charge: {0:N2} RUs", totalCharge); } 16. In Program.cs, comment out the call to list the product items, and then add a statement to call the method to delete the product items, as shown in the following code: await DeleteProductItems(); 17. Run the console app and note the results, which should be 77 product items deleted, as shown in the following partial output: * * Deleting product items * Running query: SELECT * FROM c 