Introducing Apps and Services with .NET 16 What I used To write and test the code for this book, I used the following hardware and software: • Visual Studio 2022 for Windows on: • Windows 11 on the HP Spectre (Intel) laptop • Visual Studio Code on: • macOS on the Apple Silicon Mac mini (M1) desktop • Windows 11 on the HP Spectre (Intel) laptop • JetBrains Rider on: • Windows 11 on the HP Spectre (Intel) laptop • macOS on the Apple Silicon Mac mini (M1) desktop I hope that you have access to a variety of hardware and software too because seeing the differences on various platforms deepens your understanding of development challenges, although any one of the above combinations is enough to learn how to build practical apps and websites. Getting Started: Chapter 1 of the C# 12 and .NET 8 – Modern Cross-Platform Development Fundamentals book has online sections showing how to get started with multiple projects using various code editors like Visual Studio 2022, Visual Studio Code, or JetBrains Rid- er. You can read the sections at the following link: https://github.com/markjprice/ cs12dotnet8/blob/main/docs/code-editors/README.md. JetBrains Rider and its warnings about boxing If you use JetBrains Rider and you have installed the Unity Support plugin, then it will complain a lot about boxing. A common scenario when boxing happens is when value types like int and DateTime are passed as positional arguments to string formats. This is a problem for Unity projects because they use a different memory garbage collector to the normal .NET runtime. For non-Unity projects, like all the projects in this book, you can ignore these boxing warnings because they are not relevant. https://docs.unity3d.com/ You can read more about this Unity-specific issue at the following link: . Manual/performance-garbage-collection-best-practices.html#boxing Deploying cross-platform Your choice of code editor and operating system for development does not limit where your code gets deployed. .NET 8 supports the following platforms for deployment: • Windows: Windows 10 version 1607 or later. Windows 11 version 22000 or later. Windows Server 2012 R2 SP1 or later. Nano Server version 1809 or later. • Mac: macOS Catalina version 10.15 or later and in the Rosetta 2 x64 emulator. Mac Catalyst 11.0 or later. 