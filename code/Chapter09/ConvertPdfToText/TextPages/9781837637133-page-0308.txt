Chapter 7 275 WriteLine($"StandardName: {zone.StandardName}"); WriteLine($"DaylightName: {zone.DaylightName}"); WriteLine($"BaseUtcOffset: {zone.BaseUtcOffset}"); } private static string GetCurrentZoneName(TimeZoneInfo zone, DateTime when) { // time zone names change if Daylight Saving time is active // e.g. GMT Standard Time becomes GMT Summer Time return zone.IsDaylightSavingTime(when) ? zone.DaylightName : zone.StandardName; } } 4. In Program.cs, delete the existing statements. Add statements to output the current date and time in the local and UTC time zones, and then output details about the local and UTC time zones, as shown in the following code: OutputTimeZones(); OutputDateTime(DateTime.Now, "DateTime.Now"); OutputDateTime(DateTime.UtcNow, "DateTime.UtcNow"); OutputTimeZone(TimeZoneInfo.Local, "TimeZoneInfo.Local"); OutputTimeZone(TimeZoneInfo.Utc, "TimeZoneInfo.Utc"); 5. Run the console app and note the results, including the time zones registered on your oper- ating system (there are 141 on my Windows 11 laptop), and that it is currently 4:17 PM on 31 May 2022 in England, meaning I am in the GMT Standard Time zone. However, because DST is active, it is currently known as GMT Summer Time, which is one hour ahead of UTC, as shown in the following output: *** 141 time zones: Afghanistan Standard Time Alaskan Standard Time ... West Pacific Standard Time Yakutsk Standard Time Yukon Standard Time *** DateTime.Now Value: 31/05/2022 16:17:03 Kind: Local IsDaylightSavingTime: True 