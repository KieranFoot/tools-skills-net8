Using Popular Third-Party Libraries 218 17. In Program.Functions.cs, define a method to create the WondersOfTheWorld variable and output its name using various Humanizer extension methods, as shown in the following code: private static void OutputEnumNames() { var favoriteAncientWonder = WondersOfTheAncientWorld. StatueOfZeusAtOlympia; WriteLine("Raw enum value name: {0}", favoriteAncientWonder); WriteLine("Humanized: {0}", favoriteAncientWonder.Humanize()); WriteLine("Humanized, then Titleized: {0}", favoriteAncientWonder.Humanize().Titleize()); WriteLine("Truncated to 8 characters: {0}", favoriteAncientWonder.ToString().Truncate(length: 8)); WriteLine("Kebaberized: {0}", favoriteAncientWonder.ToString().Kebaberize()); } 18. In Program.cs, comment out the previous method call, and then add a call to OutputEnumNames, as shown highlighted in the following code: //OutputSpacingAndDashes(); OutputEnumNames(); 19. Run the code and view the result, as shown in the following output: Raw enum value name: StatueOfZeusAtOlympia Humanized: Statue of zeus at olympia Humanized, then Titlerized: Statue of Zeus at Olympia Truncated to 8 characters: StatueO… Kebaberized: statue-of-zeus-at-olympia Note the Truncate method uses the single-character … (ellipsis) by default. If you ask to truncate to a length of 8, it can return the first seven characters followed by the ellipsis character. You can specify a different character using an overload of the Truncate method. 