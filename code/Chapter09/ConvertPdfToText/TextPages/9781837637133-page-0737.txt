Building Mobile and Desktop Apps Using .NET MAUI 704 Understanding XAML Let’s start by looking at the markup language used by .NET MAUI. In 2006, Microsoft released Windows Presentation Foundation (WPF), which was the first technology to use XAML. Silverlight, for web and mobile apps, quickly followed, but it is no longer supported by Microsoft. WPF is still used today to create Windows desktop applications; for example, Visual Studio 2022 is partially built using WPF. XAML can be used to build parts of the following apps: • .NET MAUI apps for mobile and desktop devices, including Android, iOS, Windows, and macOS. It is an evolution of a technology named Xamarin.Forms. • WinUI 3 apps for Windows 10 and 11. • Universal Windows Platform (UWP) apps for Windows 10 and 11, Xbox, Mixed Reality, and Meta Quest VR headsets. • WPF apps for Windows desktop, including Windows 7 and later. • Avalonia and Uno Platform apps using cross-platform third-party technologies. Simplifying code using XAML XAML simplifies C# code, especially when building a UI. Imagine that you need two or more pink buttons laid out horizontally to create a toolbar, which execute a method for their implementation when clicked. In C#, you might write the following code: HorizontalStackPanel toolbar = new(); Button newButton = new(); newButton.Content = "New"; newButton.Background = new SolidColorBrush(Colors.Pink); newButton.Clicked += NewButton_Clicked; toolbar.Children.Add(newButton); Button openButton = new(); openButton.Content = "Open"; openButton.Background = new SolidColorBrush(Colors.Pink); openButton.Clicked += OpenButton_Clicked; toolbar.Children.Add(openButton); 