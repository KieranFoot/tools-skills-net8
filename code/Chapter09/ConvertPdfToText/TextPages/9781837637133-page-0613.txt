Building Efficient Microservices Using gRPC 580 6. In the Northwind.Grpc.Client.Mvc project file, add or modify the item group that registers the .proto file to indicate that it is being used on the client side, as shown highlighted in the following markup: <ItemGroup> <Protobuf Include="Protos\greet.proto" GrpcServices="Client" /> </ItemGroup> Visual Studio 2022 will have created the item group for you, but it will set GrpcServices to Server by default, so you must manually change that to Client. For other code editors, you might have to create the whole <ItemGroup> manually. JetBrains Rider has more configuration but you can ignore it. 7. Build the Northwind.Grpc.Client.Mvc project to ensure that the automatically generated classes are created. In the Northwind.Grpc.Client.Mvc project, in the obj\Debug\net8.0\Protos folder, in 8. GreetGrpc.cs, note the Greeter.GreeterClient class, as partially shown in the following code: public static partial class Greeter { ... public partial class GreeterClient : grpc::ClientBase<GreeterClient> { 9. In Program.cs, import the namespace for Greeter.GreeterClient, as shown in the following code: using Northwind.Grpc.Client.Mvc; // To use Greeter.GreeterClient. 10. In Program.cs, in the section for configuring services, write a statement to add the GreeterClient as a named gRPC client that will be communicating with a service that is listening on port 5131, as shown in the following code: builder.Services.AddGrpcClient<Greeter.GreeterClient>("Greeter", options => { options.Address = new Uri("https://localhost:5131"); }); 11. In the Models folder, add a new class named HomeIndexViewModel.cs. HomeIndexViewModel.cs, define a class to store a greeting and an error message, as shown 12. In in the following code: namespace Northwind.Grpc.Client.Mvc.Models; public class HomeIndexViewModel 