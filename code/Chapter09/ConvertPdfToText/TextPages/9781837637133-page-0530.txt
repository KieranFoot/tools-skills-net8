Chapter 11 497 1. Use your preferred code editor to add a new project, as defined in the following list: • Project template: Console Application / console • Solution file and folder: Chapter11 • Project file and folder: Northwind.SignalR.Client.Console.Streams 2. In the Northwind.SignalR.Client.Console.Streams project file, treat warnings as errors, add a package reference for the ASP.NET Core SignalR client, add a project reference to Northwind. Common, and globally and statically import the System.Console class, as shown highlighted in the following markup: <ItemGroup> <PackageReference Include="Microsoft.AspNetCore.SignalR.Client" Version="8.0.0" /> </ItemGroup> <ItemGroup> <ProjectReference Include="..\Northwind.Common\Northwind.Common.csproj" /> </ItemGroup> 3. In the Northwind.SignalR.Client.Console.Streams project, add a new class file named Program.Methods.cs, and modify its content to define static methods in the partial Program class to generate ten random four-letter stock codes asynchronously, as shown in the following code: // Defined in the empty default namespace to merge with the auto- // generated partial Program class. partial class Program { static async IAsyncEnumerable<string> GetStocksAsync() { for (int i = 0; i < 10; i++) { // Return a random four-letter stock code. yield return $"{AtoZ()}{AtoZ()}{AtoZ()}{AtoZ()}"; await Task.Delay(TimeSpan.FromSeconds(3)); } } static string AtoZ() { 