Chapter 8 321 Testing web services with code editor tools Using the Swagger user interface to test web services can quickly get clumsy. A better tool is either the Visual Studio Code extension named REST Client or the Endpoints Explorer and .http file support available with Visual Studio 2022 version 17.6 or later. More Information: You can learn about Visual Studio 2022 and its HTTP editor at the fol- lowing link: https://learn.microsoft.com/en-us/aspnet/core/test/http-files. JetBrains Rider has a similar tool window named Endpoints. If you are using JetBrains Rider, you can read about its tools for HTTP files at the following link: https://www.jetbrains.com/help/rider/Http_client_in__product__code_ editor.html. It is slightly different from the other two code editors. In particular, how Rider handles setting variables is more awkward, as shown at the following link: https:// www.jetbrains.com/help/rider/Exploring_HTTP_Syntax.html#example-working- with-environment-files. You might prefer to use Visual Studio Code with the REST Client extension for this section. Let’s see how these help us test a web service: 1. Make sure you have the web service testing tools installed: • If you are using Visual Studio 2022, then make sure you have version 17.6 or later (re- leased in May 2023). • If you are using Visual Studio Code, then make sure you have installed the REST Client extension by Huachao Mao (humao.rest-client). If you are using Visual Studio 2022, navigate to View | Other Windows | Endpoints • Explorer, and note the current project is scanned for potential Web API endpoints, as shown in Figure 8.2. 2. In your preferred code editor, start the Northwind.WebApi.Service project using the https profile (if it is not already running) and leave it running. apps-services-net8 folder, if it does not already exist, create an HttpRequests folder. 3. In the HttpRequests folder, create a file named webapi-get-products.http and modify its 4. In the contents to declare a variable to hold the base address of the Web API service products endpoint and a request to get the first page of ten products, as shown in the following code: ### Configure a variable for the web service base address. @base_address = https://localhost:5081/api/products/ ### Get first page of 10 products that are in stock and not discontinued. GET {{base_address}} 