Caching, Queuing, and Resilient Background Services 388 3. In ProductsController.cs, decorate the Get method with an int id parameter with the [ResponseCache] attribute, as highlighted in the following code: // GET api/products/5 [HttpGet("{id:int}")] [ResponseCache(Duration = 5, // Cache-Control: max-age=5 Location = ResponseCacheLocation.Any, // Cache-Control: public VaryByHeader = "User-Agent" // Vary: User-Agent )] public async ValueTask<Product?> Get(int id) { return await _db.Products.FindAsync(id); } The [ResponseCache] attribute can be applied to Razor Pages, MVC controller classes, and MVC action methods for both web services and websites. 4. Start the web service project, using the https profile without debugging. HttpRequests folder, open the webapi-get-products.http file. 5. In the Modify the base address to use port 5091, and then send the request for a specific product, like 6. 77, as shown in the following code: GET {{base_address}}77 7. Note that the response includes headers to control caching, as highlighted in the following output: Response time: 89 ms Status code: OK (200) Alt-Svc: h3=":5091"; ma=86400 Transfer-Encoding: chunked Vary: User-Agent Cache-Control: public, max-age=5 Date: Fri, 09 Jun 2023 06:26:45 GMT Server: Kestrel Content-Type: application/json; charset=utf-8 Content-Length: 270 ------------------------------------------------ Content: 