Chapter 9 505 Note the following: • The JSON file has about a 20% reduction. PublishDate. • The member names use normal casing, for example, The Pages field is missing. The other fields are included due to the [JsonInclude] • attribute on the PublishDate and Created fields. Working with environment variables Environment variables are system and user-definable values that can affect the way running processes behave. They are commonly used to set options like toggling between development and production configurations in ASP.NET Core web projects, or to pass values needed by a process like service keys and passwords for database connection strings. Environment variables on Windows can be set at three scope levels: machine (aka system), user, and process. The methods for setting and getting environment variables assume the process scope level by default and have overloads to specify the EnvironmentVariableTarget of Process, User, and Machine, as shown in Table 9.7: Method Description GetEnvironmentVariables Returns an IDictionary of all environment variables at a specified scope level or for the current process by default. GetEnvironmentVariable Returns the value for a named environment variable. SetEnvironmentVariable Sets the value for a named environment variable. ExpandEnvironmentVariables Converts any environment variables in a string to their values identified with %%. For example, "My computer is named %COMPUTER_NAME%". Table 9.7: Methods to work with environment variables Reading all environment variables Let’s start by looking at how to list all current environment variables at various levels of scope: 1. Use your preferred code editor to add a new Console App / console project named WorkingWithEnvVars to the Chapter09 solution. Spectre.Console, and then add elements to 2. In the project file, add a package reference for statically and globally import the System.Console and System.Environment classes, and finally import the namespaces to work with Spectre.Console and System.Collections, as shown in the following configuration: <ItemGroup> <PackageReference Include="Spectre.Console" Version="0.47.0" /> </ItemGroup> <ItemGroup> 