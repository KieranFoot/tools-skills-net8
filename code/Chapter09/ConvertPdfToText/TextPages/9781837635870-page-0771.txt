Building User Interfaces Using Blazor 752 2. In the Components folder, in Routes.razor, note that a <Router> enables routing for all Blazor components found in the current assembly, and that if a matching route is found, then RouteView is executed, which sets the default layout for the component to MainLayout and passes any route data parameters to the component. For that component, the first <h1> element in it will get the focus, as shown in the following code: <Router AppAssembly="@typeof(Program).Assembly"> <Found Context="routeData"> <RouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.MainLayout)" /> <FocusOnNavigate RouteData="@routeData" Selector="h1" /> </Found> </Router> 3. In the Components folder, in _Imports.razor, note that this file imports some useful name- spaces for use in all your custom Blazor components. In the Components\Layout folder, in MainLayout.razor, note that it defines <div> for a sidebar 4. containing a navigation menu that is implemented by the NavMenu.razor component file in <main> and <article> for the content, as shown in this project, and HTML5 elements like the following code: @inherits LayoutComponentBase <div class="page"> <div class="sidebar"> <NavMenu /> </div> <main> <div class="top-row px-4"> <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a> </div> <article class="content px-4"> @Body </article> </main> </div> 5. In the Components\Layout folder, in MainLayout.razor.css, note that it contains isolated CSS styles for the component. Due to the naming convention, styles defined in this file take priority over others defined elsewhere that might affect the component. 