Chapter 15 667 The Router component scans the assembly specifically in its AppAssembly parameter for components decorated with the [Route] attribute, registering their URL paths. If a route match is found, then the context of the request is stored in a variable named routeData and passed to the matching Razor file. The default layout is set to use a class defined in the file named MainLayout.razor. The FocusOnNavigate component has a Selector property that must be set to a valid CSS selector. h1, or a more specific CSS selector that uses a CSS class This could be a tag selector like the default or an ID. The setting is common across all components in your app, so you will need to set one that works across all your components. In the Razor file, the focus is set to the first <h1> element. If the Razor file contains a form, then you might want to set the first form input element like a text box to have the focus. For example, in a typical ASP.NET Core MVC project, an MVC controller could be decorated with the [Route] attribute, as shown in the following code: [Route("customers")] public class CustomersController { An HTTP GET request to the relative path /customers would be matched to the route. To create an equivalent routable page component, add the @page directive to the top of a componentâ€™s .razor file, as shown in the following markup: @page "customers" A page component can have multiple @page directives to register multiple routes. If you were to write code that uses reflection to find the component class generated for you from the Razor markup file, then you would discover that it is decorated with the [Route] attribute due to the @page directive. At runtime, the page component is merged with any specific layout that you have specified, just like an MVC view or Razor Page would be. By default, Blazor project templates define a file named MainLayout. razor as the layout for page components. Good Practice: By convention, put routable page Blazor components in the Components\ Pages folder and non-page components in the Components folder. 