Chapter 14 627 • Properties: This folder contains a configuration file for Kestrel (or IIS or IIS Express on Win- dows) named launchSettings.json, for launching the website during development. This file is only used on the local development machine and is not deployed to your production website. • Views: This folder contains the .cshtml Razor files that combine HTML and C# code to dy- namically generate HTML responses. The _ViewStart.cshtml file sets the default layout and _ViewImports.cshtml imports common namespaces used in all views like Tag Helpers: • Home: This subfolder contains Razor files for the home and privacy pages. Shared: This subfolder contains Razor files for the shared layout, an error page, and • two partial views for logging- in and validation scripts. • wwwroot: This folder contains static content used by the website, such as CSS for styling, libraries of JavaScript, JavaScript for this website project, and a favicon.ico file. You also put images and other static file resources like PDF documents in here. The project template includes Bootstrap and jQuery libraries. appsettings.json and appsettings.Development.json: These files contain settings that your • website can load at runtime, for example, the database connection string for the ASP.NET Core Identity system and logging levels. Northwind.Mvc.csproj: This file contains project settings like the use of the Web .NET SDK, • an entry for SQLite to ensure that the app.db file is copied to the website’s output folder, and a list of NuGet packages that your project requires such as EF Core for your chosen database provider, including: • Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore • Microsoft.AspNetCore.Identity.EntityFrameworkCore • Microsoft.AspNetCore.Identity.UI • Microsoft.EntityFrameworkCore.Sqlite or Microsoft.EntityFrameworkCore. SqlServer • Microsoft.EntityFrameworkCore.Tools • Program.cs: This file defines an auto-generated Program class that contains the <Main>$ entry point. It builds a pipeline for processing incoming HTTP requests and hosts the website using default options, like configuring the Kestrel web server and loading appsettings. It adds and configures services that your website needs, for example, ASP.NET Core Identity for authentica- tion, SQLite or SQL Server for identity data storage, and so on, and routes for your application. If you choose to use SQLite instead of SQL Server for the ASP.NET Core Identity database, then you will also see a file named app.db. This is the SQLite database that stores regis- tered visitors. 