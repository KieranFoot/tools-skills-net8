Chapter 1 5 Having said that, you can make the argument that the best tool is the one you are already familiar with or that you or your team will use as your daily development tool. For that reason, I want you to be free to choose any C# code editor or IDE to complete the coding tasks in this book, including Visual Studio Code, Visual Studio 2022, or even JetBrains Rider. In this book, I give detailed step-by-step instructions in Chapter 1 for how to create multiple projects in both Visual Studio 2022 for Windows and Visual Studio Code. There are also links to online instructions for other code editors, as shown at the following link: https://github.com/markjprice/cs12dotnet8/ blob/main/docs/code-editors/README.md. In subsequent chapters, I will only give the names of projects along with general instructions, so you can use whichever tool you prefer. The best application type for learning the C# language constructs and many of the .NET libraries is one that does not distract with unnecessary application code. For example, there is no need to create an entire Windows desktop application or a website just to learn how to write a switch statement. For that reason, I believe the best method for learning the C# and .NET topics in Chapters 1 to 11 is to build console apps. Then, in Chapters 12 to 16, you will build websites, services, and web browser apps. Pros and cons of the Polyglot Notebooks extension The Polyglot Notebooks extension for Visual Studio Code provides an easy and safe place to write simple code snippets for experimenting and learning. For example, data scientists use them to an- alyze and visualize data. Students use them to learn how to write small pieces of code for language constructs and to explore APIs. Polyglot Notebooks enables you to create a single notebook file that mixes “cells” of Markdown (richly formatted text) and code using C# and other related languages, such as PowerShell, F#, and SQL (for databases). The extension does this by hosting an instance of the .NET Interactive engine. The old legacy name for the Polyglot Notebooks extension was the .NET Interactive Note- books extension but it was renamed because it is not limited to only .NET languages like C# and F#. The extension retains its original identifier, ms-dotnettools.dotnet- interactive-vscode. Polyglot Notebooks has some limitations: • It cannot be used to create websites, services, and apps. • You cannot use Console class methods like ReadLine or ReadKey to get input from the user. (But there are alternative methods that you will learn if you complete the optional online-only exercise at the end of this chapter.) • Notebooks cannot have arguments passed to them. • It does not allow you to define your own namespaces. • It does not have any debugging tools (yet). 