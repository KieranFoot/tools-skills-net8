Chapter 2 71 Good Practice: You might choose to do this if you want to manually create a single file with all the global using statements instead of potentially having one generated auto- matically and others created manually. But my recommendation is to leave the feature enabled and modify the project file to change what is included in the auto-generated class file in the obj folder hierarchy. Verbs are methods In English, verbs are doing or action words, like “run” and “jump.” In C#, doing or action words are called methods. There are hundreds of thousands of methods available to C#. In English, verbs change how they are written based on when in time the action happens. For example, Amir was jumping in the past, Beth jumps in the present, they jumped in the past, and Charlie will jump in the future. In C#, methods such as WriteLine change how they are called or executed based on the specifics of the action. This is called overloading, which we’ll cover in more detail in Chapter 5, Building Your Own Types with Object-Oriented Programming. But for now, consider the following example: // Outputs the current line terminator. // By default, this is a carriage-return and line feed. Console.WriteLine(); // Outputs the greeting and the current line terminator. Console.WriteLine("Hello Ahmed"); // Outputs a formatted number and date and the current line terminator. Console.WriteLine( "Temperature on {0:D} is {1}°C.", DateTime.Today, 23.4); When I show code snippets without numbered step-by-step instructions, I do not expect you to enter them as code, so they won’t execute out of context. A different and not quite exact analogy is that some verbs are spelled the same but have different effects depending on the context, for example, you can lose a game, lose your place in a book, or lose your keys. Nouns are types, variables, fields, and properties In English, nouns are names that refer to things. For example, Fido is the name of a dog. The word “dog” tells us the type of thing that Fido is, and so to order Fido to fetch a ball, we would use his name. In C#, their equivalents are types, variables, fields, and properties. For example: • Animal and Car are types; they are nouns for categorizing things. 