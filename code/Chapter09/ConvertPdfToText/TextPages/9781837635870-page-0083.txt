Speaking C# 64 Formatting code using white space White space includes the space, tab, and newline characters. You can use white space to format your code however you like because extra white space has no effect on the compiler. The following four statements are all equivalent: int sum = 1 + 2; // Most developers would prefer this format. int sum=1+ 2; // One statement over three lines. int sum= 1 +2;int sum=1+2; // Two statements on one line. The only white space character required in the preceding statements is one between int and sum to tell the compiler they are separate tokens. Any single white space character, for example a space, tab, or newline would be acceptable. More Information: You can read the formal definition of C# white space at the following link: https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/ language-specification/lexical-structure#634-white-space. Understanding C# vocabulary The C# vocabulary is made up of keywords, symbol characters, and types. Some of the predefined, reserved keywords that you will see in this book and use frequently include using, namespace, class, static, int, string, double, bool, if, switch, break, while, do, for, foreach, this, and true. Some of the symbol characters that you will see include ", ', +, -, *, /, %, @, and $. There are other contextual keywords that only have a special meaning in a specific context, like and, or, not, record, and init. However, that still means that there are only about 100 actual C# keywords in the language. Good Practice: C# keywords use all lowercase. Although you can use all lowercase for your own type names, you should not. With C# 11 and later, the compiler will give a warning if you do, as shown in the following output: Warning CS8981 The type name 'person' only contains lower-cased ascii characters. Such names may become reserved for the language. 