Chapter 10 575 using NorthwindDb db = new(); if (db.Products is null) return (0, null); // Get products whose name starts with the parameter value. IQueryable<Product>? products = db.Products.Where( p => p.ProductName.StartsWith(productNameStartsWith)); int affected = products.ExecuteUpdate(s => s.SetProperty( p => p.Cost, // Property selector lambda expression. p => p.Cost + amount)); // Value to update to lambda expression. int[] productIds = products.Select(p => p.ProductId).ToArray(); return (affected, productIds); } 2. In Program.cs, comment out the statements to delete products, and then add statements to call IncreaseProductPricesBetter, as shown in the following code: var resultUpdateBetter = IncreaseProductPricesBetter( productNameStartsWith: "Bob", amount: 20M); if (resultUpdateBetter.affected > 0) { WriteLine("Increase product price successful."); } ListProducts(productIdsToHighlight: resultUpdateBetter.productIds); 3. Uncomment the statements that add a new product. 4. Run the console app multiple times and note that, each time, the existing products with the Bob prefix are each updated with an incrementing cost, as shown in the following output: ... | 078 | Bob's Burgers | $560.00 | 72 | False | | 079 | Bob's Burgers | $540.00 | 72 | False | | 080 | Bob's Burgers | $520.00 | 72 | False | 5. In Program.Modifications.cs, add a method to delete any products with a name that begins with a specified value using ExecuteDelete, as shown in the following code: private static int DeleteProductsBetter( string productNameStartsWith) 