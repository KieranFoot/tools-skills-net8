Building and Consuming Web Services 722 ---> System.InvalidOperationException: Cannot serialize member 'Northwind. EntityModels.Customer.Orders' of type 'System.Collections.Generic. ICollection`1[[Northwind.EntityModels.Order, Northwind.EntityModels, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]', see inner exception for more details. We can prevent this warning by excluding the Orders property when serializing a Customer into XML: 1. In the Northwind.EntityModels.Sqlite and Northwind.EntityModels.SqlServer projects (if you created both), open Customer.cs. Import the namespace so that we can use the [XmlIgnore] attribute, as shown in the following 2. code: using System.Xml.Serialization; // To use [XmlIgnore]. 3. Decorate the Orders property with an attribute to ignore it when serializing, as shown high- lighted in the following code: [InverseProperty(nameof(Order.Customer))] [XmlIgnore] public virtual ICollection<Order> Orders { get; set; } = new List<Order>(); 4. In the Northwind.EntityModels.SqlServer project, in Customer.cs , decorate the CustomerTypes property with [XmlIgnore] too, as shown highlighted in the following code: [ForeignKey("CustomerId")] [InverseProperty("Customers")] [XmlIgnore] public virtual ICollection<CustomerDemographic> CustomerTypes { get; set; } = new List<CustomerDemographic>(); Documenting and testing web services You can easily test a web service by making HTTP GET requests using a browser. To test other HTTP methods, we need a more advanced tool. Testing GET requests using a browser You will use Chrome to test the three implementations of a GET requestâ€”for all customers, for custom- ers in a specified country, and for a single customer using their unique customer ID: 1. Start the Northwind.WebApi web service project using the https launch profile. https://localhost:5151/api/customers, and note the JSON doc- 2. Start Chrome, navigate to ument returned, containing all 91 customers in the Northwind database (unsorted), as shown in Figure 14.2: 