Chapter 8 457 [float, Single precision floating point number] Define long: 64-bit integer data type What the Add method does depends on the type, as summarized in the following list: • List<T>: Adds a new item to the end of the existing list. Dictionary<TKey, TValue>: Adds a new item to the existing dictionary in a position • determined by its internal structure. ReadOnlyCollection<T>: Throws a not-supported exception. • ImmutableList<T>: Returns a new list with the new item in it. Does not affect the • original list. ImmutableDictionary<TKey, TValue>: Returns a new dictionary with the new item • in it. Does not affect the original dictionary. FrozenDictionary<TKey, TValue>: Does not exist. • More Information: The documentation for frozen collections is found at the following link: https://learn.microsoft.com/en-us/dotnet/api/system.collections.frozen. Initializing collections using collection expressions Introduced with C# 12 is a new consistent syntax for initializing arrays, collections, and span variables. With C# 11 and earlier, you would have to declare and initialize an array, collection, or span of int values using the following code: int[] numbersArray11 = { 1, 3, 5 }; List<int> numbersList11 = new() { 1, 3, 5 }; Span<int> numbersSpan11 = stackalloc int[] { 1, 3, 5 }; Starting with C# 12, you can now consistently use square brackets, and the compiler will do the right thing, as shown in the following code: int[] numbersArray12 = [ 1, 3, 5 ]; List<int> numbersList12 = [ 1, 3, 5 ]; Span<int> numbersSpan12 = [ 1, 3, 5 ]; More Information: You can learn more about collection expressions at the following link: https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/ proposals/csharp-12.0/collection-expressions. 