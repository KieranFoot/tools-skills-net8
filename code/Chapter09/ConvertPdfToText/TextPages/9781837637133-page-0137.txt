Building Entity Models for SQL Server Using EF Core 104 CONSTRAINT [PK_Employees] PRIMARY KEY ([Id]) CONSTRAINT [FK_Employees_People] FOREIGN KEY ([Id]) REFERENCES [People] ([Id]) ); Some data in the tables might look like the following: Id Name 1 Roman Roy 2 Kendall Roy 3 Siobhan Roy Table 3.6: People table Id Subject 1 History Table 3.7: Students table Id HireDate 2 02/04/2014 3 12/09/2020 Table 3.8: Employees table The main benefit of the TPT mapping strategy is reduced storage due to the full normalization of the data. The main disadvantage is that a single entity is spread over multiple tables and reconstructing it takes more effort and therefore reduces overall performance. TPT is usually a poor choice, so only use it if the table structure is already normalized and cannot be restructured. Table-per-concrete-type (TPC) mapping strategy For the Person-Student-Employee hierarchy, TPC will use a table for each non-abstract type, as shown in the following code: CREATE TABLE [Students] ( [Id] int NOT NULL DEFAULT (NEXT VALUE FOR [PersonIds]), [Name] nvarchar(max) NOT NULL, [Subject] nvarchar(max) NULL, CONSTRAINT [PK_Students] PRIMARY KEY ([Id]) CONSTRAINT [FK_Students_People] FOREIGN KEY ([Id]) REFERENCES [People] ([Id]) ); CREATE TABLE [Employees] ( [Id] int NOT NULL DEFAULT (NEXT VALUE FOR [PersonIds]), 