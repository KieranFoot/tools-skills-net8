Building Serverless Nanoservices Using Azure Functions 456 int posHash = bsrSection.IndexOf("#") + 1; int posSpaceAfterHash = bsrSection.IndexOf(" ", posHash); // Get the BSR number as text. string bsr = bsrSection.Substring( posHash, posSpaceAfterHash - posHash); bsr = bsr.Replace(",", null); // remove commas // Parse the text into a number. if (int.TryParse(bsr, out int bestSellersRank)) { _logger.LogInformation( $"Best Sellers Rank #{bestSellersRank:N0}."); } else { _logger.LogError( $"Failed to extract BSR number from: {bsrSection}."); } } else { _logger.LogError("Bad HTTP request."); } } } Testing the Timer triggered function Information about a function can be retrieved by making an HTTP GET request in the following format: http://locahost:5101/admin/functions/<functionname> Now we can test the Timer function in our local development environment: 1. Start the Northwind.AzureFunctions.Service project: â€¢ If you are using Visual Studio Code, you will need to make sure you have the Azurite extension installed and the Azurite services running. Navigate to the Run and Debug pane, make sure that Attach to .NET Functions is selected, and then click the Run button. 2. Note there are now two functions, as shown in the following partial output: Functions: 