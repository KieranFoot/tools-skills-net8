Implementing Interfaces and Inheriting Classes 340 4. Assign the empty string value to the Street field, and define constructors to set the other fields that are non-nullable, as highlighted in the following code: public string Street = string.Empty; public string City; public string Region; public Address() { City = string.Empty; Region = string.Empty; } // Call the default parameterless constructor // to ensure that Region is also set. public Address(string city) : this() { City = city; } 5. In Program.cs, import the namespace to use Address, as shown in the following code: using Packt.Shared; // To use Address. 6. In Program.cs, add statements to instantiate an Address and set its properties, as shown in the following code: Address address = new(city: "London") { Building = null, Street = null, Region = "UK" }; 7. Note the Warning CS8625 on setting the Street but not the Building, as shown in the following output: CS8625 Cannot convert null literal to non-nullable reference type. 8. Append an exclamation mark after null when setting Street, as highlighted in the following code: Street = null!, // null-forgiving operator. 9. Note that the warning disappears. 