Chapter 8 313 Explicitly setting invariant globalization to true is new in the ASP.NET Core Web API project template with .NET 8. It is designed to make a web service non-cul- ture-specific so it can be deployed anywhere in the world and have the same behavior. By setting this property to false, the web service will default to the culture of the current computer it is hosted on. You can read more about invariant globalization mode at the following link: https://github.com/dotnet/runtime/ blob/main/docs/design/features/globalization-invariant-mode.md 5. At the command prompt or terminal, build the Northwind.WebApi.Service project to make sure the entity model class library projects outside the current solution are properly compiled, as shown in the following command: dotnet build 6. In the Properties folder, in launchSettings.json, modify the applicationUrl of the profile named https to use port 5081, as shown highlighted in the following configuration: "profiles": { ... "https": { "commandName": "Project", "dotnetRunMessages": true, "launchBrowser": true, "launchUrl": "swagger", "applicationUrl": "https://localhost:5081", "environmentVariables": { "ASPNETCORE_ENVIRONMENT": "Development" } Visual Studio 2022 will read this settings file and automatically run a web browser if launchBrowser is true, and then navigate to the applicationUrl and launchUrl. Visual Studio Code and dotnet run will not, so you will need to run a web browser and navigate manually to https://localhost:5081/swagger. 7. In Program.cs, delete the statements about the weather service and replace them with state- ments to import the namespace to add the NorthwindContext to configured services, as shown highlighted in the following code: using Northwind.EntityModels; // To use the AddNorthwindContext method. var builder = WebApplication.CreateBuilder(args); // Add services to the container. 