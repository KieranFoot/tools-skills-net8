Chapter 8 431 Expression Meaning \d A single digit somewhere in the input a The character “a” somewhere in the input Bob The word “Bob” somewhere in the input ^Bob The word “Bob” at the start of the input Bob$ The word “Bob” at the end of the input ^\d{2}$ Exactly two digits ^[0-9]{2}$ Exactly two digits ^[A-Z]{4,}$ At least four uppercase English letters in the ASCII character set only ^[A-Za-z]{4,}$ At least four upper or lowercase English letters in the ASCII character set only ^[A-Z]{2}\d{3}$ Two uppercase English letters in the ASCII character set and three digits only At least one uppercase or lowercase English letter in the ASCII character set or European letters in the Unicode character set, as shown in the following list: ^[A-Za-z\u00c0-\ u017e]+$ ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝ Þßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿıŒœŠšŸŽž The letter d, then any character, and then the letter g, so it would match both ^d.g$ dig and dog or any single character between the d and g ^d\.g$ The letter d, then a dot ., and then the letter g, so it would match d.g only Table 8.7: Examples of regular expressions with descriptions of their meaning Good Practice: Use regular expressions to validate input from the user. The same regular expressions can be reused in other languages such as JavaScript and Python. Splitting a complex comma-separated string Earlier in this chapter, you learned how to split a simple comma-separated string variable. But what about the following example of film titles? "Monsters, Inc.","I, Tonya","Lock, Stock and Two Smoking Barrels" The string value uses double quotes around each film title. We can use these to identify whether we need to split on a comma (or not). The Split method is not powerful enough, so we can use a regular expression instead. Good Practice: You can read a fuller explanation in the Stack Overflow article that inspired this task at the following link: https://stackoverflow.com/questions/18144431/ regex-to-split-a-csv. 