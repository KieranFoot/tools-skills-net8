Using Popular Third-Party Libraries 214 These methods are used by Microsoft Entity Framework Core to singularize and pluralize the names of entity classes and their members. Exploring text manipulations with a console app Let’s explore some examples of text manipulation using Humanizer: 1. Use your preferred code editor to add a new Console App / console project named HumanizingData to the Chapter06 solution. In Visual Studio 2022, set the startup project to the current selection. In the HumanizingData project, treat warnings as errors, globally and statically import the 2. System.Console class, and add a package reference for Humanizer, as shown in the following markup: <ItemGroup> <PackageReference Include="Humanizer" Version="2.14.1" /> </ItemGroup> We are referencing a Humanizer package that includes all languages. If you only need the English language, then you can reference Humanizer.Core instead. If you also need a subset of languages, reference specific language packages using the pattern Humanizer.Core.<lang>, for example, Humanizer.Core.fr for French. 3. Build the HumanizingData project to restore packages. Program.Functions.cs. 4. Add a new class file to the project named Program.Functions.cs, add statements to import the namespace for working with global- 5. In ization, and to define a method to configure the console to enable easy switching of the current culture and enable the use of special characters, as shown in the following code: using System.Globalization; // To use CultureInfo. partial class Program { private static void ConfigureConsole(string culture = "en-US") { // To enable special characters like … (ellipsis) as a single character. OutputEncoding = System.Text.Encoding.UTF8; Thread t = Thread.CurrentThread; t.CurrentCulture = CultureInfo.GetCultureInfo(culture); 