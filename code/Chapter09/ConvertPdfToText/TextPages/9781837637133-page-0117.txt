Building Entity Models for SQL Server Using EF Core 84 Figure 3.1: EF Core 7 targeted .NET 6 or later When EF Core 9 is released in November 2024, we can expect it to target .NET 8 or later, so you can upgrade EF Core while still getting long-term support for the .NET 8 platform. The EF Core team is responsible for making sure that you will be able to swap 8 for 9 in the version number of their pack- ages and your code should still work. They are usually very good at that, and they will document any needed changes to your code in the official release notes for EF Core 9. Understanding Entity Framework Core As well as traditional RDBMSs like SQL Server, EF Core supports modern cloud-based, nonrelational, schema-less data stores, such as Azure Cosmos DB and MongoDB, sometimes with third-party providers. There are two approaches to working with EF Core: • Database First: A database already exists, so you build a model that matches its structure and features. • Code First: No database exists, so you build a model and then use EF Core to create a database that matches its structure and features. We will use EF Core with an existing database because that is the most common scenario. You will also see an example of Code First later in this chapter that will create its database at runtime. Scaffolding models using an existing database Scaffolding is the process of using a tool to create classes that represent the model of an existing database using reverse engineering. A good scaffolding tool allows you to extend the automatically generated classes and then regenerate those classes without losing your extended classes. 