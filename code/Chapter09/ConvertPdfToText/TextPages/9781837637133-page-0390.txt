Chapter 8 357 new(5, "Clean the car", DateOnly.FromDateTime(DateTime.Now.AddDays(2))) }; var todosApi = app.MapGroup("/todos"); todosApi.MapGet("/", () => sampleTodos); todosApi.MapGet("/{id}", (int id) => sampleTodos.FirstOrDefault(a => a.Id == id) is { } todo ? Results.Ok(todo) : Results.NotFound()); 11. In Program.cs, at the bottom of the file, delete the statements that define the Todo record and AppJsonSerializerContext class, as shown in the following code: public record Todo(int Id, string? Title, DateOnly? DueBy = null, bool IsComplete = false); [JsonSerializable(typeof(Todo[]))] internal partial class AppJsonSerializerContext : JsonSerializerContext { } 12. In Program.cs, delete the namespace imports, import the namespaces for our JSON serializer context and extension methods, modify the statement that inserts the JSON serialization context to use the Northwind one, and then before running the web app, call the MapGets method, as shown highlighted in the following code: using Northwind.Serialization; using Packt.Extensions; // To use MapGets(). var builder = WebApplication.CreateSlimBuilder(args); builder.Services.ConfigureHttpJsonOptions(options => { options.SerializerOptions.TypeInfoResolverChain .Insert(0, NorthwindJsonSerializerContext.Default); }); var app = builder.Build(); app.MapGets(); app.Run(); 