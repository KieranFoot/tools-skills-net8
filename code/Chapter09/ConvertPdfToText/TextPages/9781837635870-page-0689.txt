Building Websites Using ASP.NET Core Razor Pages 670 Letâ€™s now add some dynamic content to the Razor Page using an @functions code block: 1. In the Pages folder, in index.cshtml, make modifications as specified in the following list: 1. After the @page directive, add an @functions statement block. string value. 2. Define a property to store the name of the current day as a DayName that executes when a GET request is made for the page, 3. Define a method to set as shown in the following code: @page @functions { public string? DayName { get; set; } public void OnGet() { DayName = DateTime.Now.ToString("dddd"); } } 2. In the second HTML paragraph, <p>, render the day name, as shown highlighted in the fol- lowing markup: <p>It's @DayName! Our customers include restaurants, hotels, and cruise lines.</p> When you define properties in a @functions block, you are adding code to an automatically generated class named Pages_<razorpagename>. In this case, the class name would be Pages_index. The class is automatically given a property named Model that represents itself. You can use DayName, this.DayName, or Model. DayName to refer to the property in the code or in the HTML markup. However, JetBrains Rider and ReSharper will give errors if you use Model.DayName even though that syntax is valid, compiles, and runs. 3. Start the website project using the https profile. https://localhost:5131/, and note the current day name is 4. In Chrome, if necessary, enter output on the page, as shown in Figure 13.5: 