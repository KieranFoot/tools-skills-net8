Chapter 9 417 info: Northwind.Queue.Worker.Worker[0] Worker running at: 06/12/2023 08:25:04 +01:00 info: Northwind.Queue.Worker.Worker[0] Worker running at: 06/12/2023 08:25:05 +01:00 info: Microsoft.Hosting.Lifetime[0] Application is shutting down... Processing queued message using a worker service Now, we can do some useful work, like reading messages from a RabbitMQ queue: 1. Rename Worker.cs to QueueWorker.cs and the Worker class to QueueWorker. Program.cs, change the hosted service class name from Worker to QueueWorker, as shown 2. In in the following code: builder.Services.AddHostedService<QueueWorker>(); 3. In QueueWorker.cs, import namespaces to work with RabbitMQ queues and implement a queue processor, as highlighted in the following code: using Northwind.Queue.Models; // To use ProductQueueMessage. using RabbitMQ.Client; // To use ConnectionFactory. using RabbitMQ.Client.Events; // To use EventingBasicConsumer. using System.Text.Json; // To use JsonSerializer. namespace Northwind.Background.Workers; public class QueueWorker : BackgroundService { private readonly ILogger<QueueWorker> _logger; // RabbitMQ objects. private const string queueNameAndRoutingKey = "product"; private readonly ConnectionFactory _factory; private readonly IConnection _connection; private readonly IModel _channel; private readonly EventingBasicConsumer _consumer; public QueueWorker(ILogger<QueueWorker> logger) { _logger = logger; _factory = new() { HostName = "localhost" }; 