Chapter 3 153 2. Run the code and view the result, as shown in the following output: 12 True 08/28/2024 17:33:54 System.Object Passing any object to the WriteLine method implicitly converts it into a string, so it is not necessary to explicitly call ToString. We are doing so here just to emphasize what is happening. Explicitly calling ToString does avoid a boxing operation, so if you are devel- oping games with Unity then that can help you avoid memory garbage collection issues. Converting from a binary object to a string When you have a binary object like an image or video that you want to either store or transmit, you sometimes do not want to send the raw bits because you do not know how those bits could be misin- terpreted, for example, by the network protocol transmitting them or another operating system that is reading the stored binary object. The safest thing to do is to convert the binary object into a string of safe characters. Programmers call this Base64 encoding. The Convert type has a pair of methods, ToBase64String and FromBase64String, that perform this conversion for you. Letâ€™s see them in action: 1. Type statements to create an array of bytes randomly populated with byte values, write each byte nicely formatted to the console, and then write the same bytes converted into Base64 to the console, as shown in the following code: // Allocate an array of 128 bytes. byte[] binaryObject = new byte[128]; // Populate the array with random bytes. Random.Shared.NextBytes(binaryObject); WriteLine("Binary Object as bytes:"); for (int index = 0; index < binaryObject.Length; index++) { Write($"{binaryObject[index]:X2} "); } WriteLine(); // Convert the array to Base64 string and output as text. string encoded = ToBase64String(binaryObject); WriteLine($"Binary Object as Base64: {encoded}"); 