Building and Consuming Web Services 712 10. Implement the update method to update the database and if successful then update the cached customer as well, as shown in the following code: public async Task<Customer?> UpdateAsync(Customer c) { c.CustomerId = c.CustomerId.ToUpper(); _db.Customers.Update(c); int affected = await _db.SaveChangesAsync(); if (affected == 1) { _memoryCache.Set(c.CustomerId, c, _cacheEntryOptions); return c; } return null; } 11. Implement the delete method to delete the customer from the database and if successful then remove the cached customer as well, as shown in the following code: public async Task<bool?> DeleteAsync(string id) { id = id.ToUpper(); Customer? c = await _db.Customers.FindAsync(id); if (c is null) return null; _db.Customers.Remove(c); int affected = await _db.SaveChangesAsync(); if (affected == 1) { _memoryCache.Remove(c.CustomerId); return true; } return null; } Routing web services With MVC controllers, a route like /home/index tells us the controller class name and the action method name, for example, the HomeController class and the Index action method. 