5 Building Your Own Types with Object-Oriented Programming This chapter is about making your own types using object-oriented programming (OOP). You will learn about all the different categories of members that a type can have, including fields to store data and methods to perform actions. You will use OOP concepts such as aggregation and encapsulation. out variables, inferred tuple You will also learn about language features such as tuple syntax support, names, and default literals. Finally, you will learn about pattern matching and defining records to make the equality of variables and immutability easier to implement. This chapter will cover the following topics: • Talking about OOP • Building class libraries • Storing data in fields • Working with methods and tuples • Controlling access with properties and indexers • Pattern matching with objects • Working with record types Talking about OOP An object in the real world is a thing, such as a car or a person, whereas an object in programming often represents something in the real world, such as a product or bank account, but it can also be something more abstract. In C#, we use the C# keywords class, record, and struct to define a type of object. You will learn struct types in Chapter 6, Implementing Interfaces and Inheriting Classes. You can think of a type about as being a blueprint or template for an object. 