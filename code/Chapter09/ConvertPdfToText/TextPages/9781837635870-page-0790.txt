Chapter 15 771 As an alternative to a ValidationSummary component, you can use the ValidationMessage component to show a message next to an individual form element. To bind the validation message to a property, you use a lambda expression to select the property, as shown in the following code: <ValidationMessage For="@(() => Customer.CompanyName)" /> Building a customer detail component Next, we will create a component to show the details of a customer. This will only be a component, never a page: 1. In the Northwind.Blazor project, in the Components folder, create a new file named CustomerDetail.razor. (The Visual Studio 2022 project item template is named Razor Com- ponent. The JetBrains Rider project item template is named Blazor Component.) Modify its contents to define a form to edit the properties of a customer, as shown in the 2. following markup: <EditForm Model="@Customer" OnValidSubmit="@OnValidSubmit"> <DataAnnotationsValidator /> <div class="form-group"> <div> <label>Customer Id</label> <div> <InputText @bind-Value="@Customer.CustomerId" /> <ValidationMessage For="@(() => Customer.CustomerId)" /> </div> </div> </div> <div class="form-group "> <div> <label>Company Name</label> <div> <InputText @bind-Value="@Customer.CompanyName" /> <ValidationMessage For="@(() => Customer.CompanyName)" /> </div> </div> </div> <div class="form-group "> <div> <label>Address</label> <div> <InputText @bind-Value="@Customer.Address" /> <ValidationMessage For="@(() => Customer.Address)" /> </div> 