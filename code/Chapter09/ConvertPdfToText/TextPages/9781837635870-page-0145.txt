Controlling Flow, Converting Types, and Handling Exceptions 126 // Executes if expression1 and expression2 are false // and expression3 is true. } else { // Executes if all expressions are false. } Each if statement’s Boolean expression is independent of the others and, unlike switch statements, does not need to reference a single value. Let’s write some code to explore selection statements like if: 1. Use your preferred coding tool to add a new Console App / console project named SelectionStatements to the Chapter03 solution. Remember to statically import System.Console in your project file. And if you are using Visual Studio 2022, then configure the startup project to be the current selection. 2. In Program.cs, delete the existing statements and then add statements to check if a password is at least eight characters long, as shown in the following code: string password = "ninja"; if (password.Length < 8) { WriteLine("Your password is too short. Use at least 8 chars."); } else { WriteLine("Your password is strong."); } 3. Run the code and note the result, as shown in the following output: Your password is too short. Use at least 8 chars. Why you should always use braces with if statements As there is only a single statement inside each block, the preceding code could be written without the curly braces, as shown in the following code: if (password.Length < 8) WriteLine("Your password is too short. Use at least 8 chars."); 