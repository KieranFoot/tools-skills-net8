Chapter 15 749 Razor syntax is used for: • ASP.NET Core MVC views and partial views that use the .cshtml file extension. The business logic is separated into a controller class that treats the view as a template to push the view model to, which then outputs it to a web page. .cshtml file extension. The business logic can be embedded or sep- • Razor Pages that use the .cshtml.cs file extension. The output is a web page. arated into a file that uses the Blazor components that use the .razor file extension. The output is rendered as part of a • web page, although layouts can be used to wrap a component so it outputs as a web page, and the @page directive can be used to assign a route that defines the URL path to retrieve the component as a page. Now that you understand the background to Blazor, let’s see something more practical: a review of the newest Blazor Web App project template that was introduced in .NET 8 and supports the new unified hosting model. Reviewing the Blazor Web App project template Before .NET 8, there were separate project templates for the different hosting models, for example, Blazor Server App, Blazor WebAssembly App, and Blazor WebAssembly App Empty. Introduced with .NET 8 is a unified project template named Blazor Web App and a client-only project template renamed Blazor WebAssembly Standalone App. Consider all the others legacy and avoid them unless you must use older .NET SDKs. Creating a Blazor Web App project Let’s look at the default template for a Blazor Web App project. Mostly, you will see that it is the same as an ASP.NET Core Empty template, with a few key additions: 1. Use your preferred code editor to open the PracticalApps solution and then add a new project, as defined in the following list: • Project template: Blazor Web App / blazor --interactivity None • Solution file and folder: PracticalApps • Project file and folder: Northwind.Blazor • Configure for HTTPS: Selected • Authentication type: None • Interactivity type: None • Interactivuty location: Per page/component • Include sample pages: Selected • Do not use top-level statements: Cleared If you are using Visual Studio Code or JetBrains Rider, then enter the following com- mand at the command prompt or terminal: dotnet new blazor --interactivity None -o Northwind.Blazor 