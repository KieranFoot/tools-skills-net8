Chapter 4 201 6. Change the message again, save the file, and note the console app updates automatically. Hot reloading using Visual Studio Code and dotnet watch If you are using Visual Studio Code, you must issue a special command when starting the console app to activate Hot Reload: 1. In Visual Studio Code, in TERMINAL, start the console app using dotnet watch, and note the output that shows that hot reload is active, as shown in the following output: dotnet watch Hot reload enabled. For a list of supported edits, see https://aka.ms/dotnet/hot-reload. Press "Ctrl + R" to restart. Building... dotnet watch Determining projects to restore... All projects are up-to-date for restore. HotReloading -> C:\cs12dotnet8\Chapter04\HotReloading\bin\Debug\net8.0\ HotReloading.dll Started dotnet watch Hello, Hot Reload! Hello, Hot Reload! Hello, Hot Reload! 2. In Visual Studio Code, change Hello to Goodbye, and note that, after a couple of seconds, the change is applied without needing to restart the console app, as shown in the following output: Hello, Hot Reload! File changed: .\Program.cs. dotnet watch Hello, Hot Reload! Hello, Hot Reload! dotnet watch Hot reload of changes succeeded. Goodbye, Hot Reload! Goodbye, Hot Reload! 3. Press Ctrl + C to stop it running, as shown in the following output: Goodbye, Hot Reload! Shutdown requested. Press Ctrl+C again to force exit. dotnet watch Now that you’ve seen tools for finding and removing bugs during development, let’s see how you can track down less obvious problems that might happen during development and production. Logging during development and runtime Once you believe that all the bugs have been removed from your code, you would then compile a re- lease version and deploy the application, so that people can use it. But no code is ever bug-free, and during runtime, unexpected errors can occur. 