Speaking C# 82 Exploring whole numbers Letâ€™s enter some code to see some examples: 1. In the Numbers project, in Program.cs, type statements to declare some number variables using underscore separators, as shown in the following code: int decimalNotation = 2_000_000; int binaryNotation = 0b_0001_1110_1000_0100_1000_0000; int hexadecimalNotation = 0x_001E_8480; // Check the three variables have the same value. Console.WriteLine($"{decimalNotation == binaryNotation}"); Console.WriteLine( $"{decimalNotation == hexadecimalNotation}"); // Output the variable values in decimal. Console.WriteLine($"{decimalNotation:N0}"); Console.WriteLine($"{binaryNotation:N0}"); Console.WriteLine($"{hexadecimalNotation:N0}"); // Output the variable values in hexadecimal. Console.WriteLine($"{decimalNotation:X}"); Console.WriteLine($"{binaryNotation:X}"); Console.WriteLine($"{hexadecimalNotation:X}"); 2. Run the project and note the result is that all three numbers are the same, as shown in the following output: True True 2,000,000 2,000,000 2,000,000 1E8480 1E8480 1E8480 Computers can always exactly represent integers using the int type or one of its sibling types, such as long and short. 