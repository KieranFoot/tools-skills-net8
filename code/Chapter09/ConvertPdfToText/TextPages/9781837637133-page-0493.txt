Building Serverless Nanoservices Using Azure Functions 460 [2023-10-01T13:49:56.212Z] Request: GET https://www.amazon.com/12-NET- Cross-Platform-Development-Fundamentals/dp/1837635870/ [2023-10-01T13:49:56.251Z] Best Sellers Rank #384,269. [2023-10-01T13:49:56.275Z] Executed 'Functions.ScrapeAmazonFunction' (Succeeded, Id=1df349a1-79c5-4b52-a7f1-d0f8f0d5cd9c, Duration=2362ms) 12. Optionally, wait until the hour mark and note that the next occurrence triggers, as shown in the following output: [2023-10-01T14:00:00.023Z] Executing 'Functions.ScrapeAmazonFunction' (Reason='Timer fired at 2023-10-01T15:00:00.0220351+01:00', Id=aa9f7495- 6066-4b0a-ba81-42582d677321) [2023-10-01T14:00:00.027Z] C# Timer trigger function executed at 01/10/2023 14:00:00. [2023-10-01T14:00:00.028Z] Start processing HTTP request GET https://www. amazon.com/12-NET-Cross-Platform-Development-Fundamentals/dp/1837635870/ [2023-10-01T14:00:00.027Z] C# Timer trigger function next occurrence at: 01/10/2023 15:00:00. [2023-10-01T14:00:00.028Z] Sending HTTP request GET https://www.amazon. com/12-NET-Cross-Platform-Development-Fundamentals/dp/1837635870/ [2023-10-01T14:00:00.337Z] Received HTTP response after 305.1877ms - OK [2023-10-01T14:00:00.339Z] End processing HTTP request after 305.5222ms - OK [2023-10-01T14:00:01.899Z] Successful HTTP request. [2023-10-01T14:00:01.899Z] Request: GET https://www.amazon.com/12-NET- Cross-Platform-Development-Fundamentals/dp/1837635870/ [2023-10-01T14:00:01.931Z] Best Sellers Rank #387,339. [2023-10-01T14:00:01.931Z] Executed 'Functions.ScrapeAmazonFunction' (Succeeded, Id=aa9f7495-6066-4b0a-ba81-42582d677321, Duration=1909ms) 13. If I were to stop the service running, wait for more than an hour, and then start the service, it would immediately run the function because it is past due, as shown highlighted in the following output: [2023-10-01T16:19:31.369Z] Trigger Details: UnscheduledInvocationReason: IsPastDue, OriginalSchedule: 2023-10-01T15:00:00.0000000+01:00 14. Shut down the Azure Functions service. Implementing a function that works with queues and BLOBs The HTTP-triggered function responded directly to the GET request with plain text. We will now define a similar function to bind to Queue Storage and add a message to a queue to indicate that an image needs to be generated and uploaded to Blob Storage. This can then be printed as a check. 