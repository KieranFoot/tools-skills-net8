Building and Consuming Web Services 700 To create a new resource or update an existing resource, you might make a PUT request with a body that contains a whole new version of the existing resource, and if the resource does not exist, it is created, or if it does exist, it is replaced (sometimes called an upsert operation), as shown in the following code: PUT /path/to/resource Content-Length: 123 Content-Type: application/json To update an existing resource more efficiently, you might make a PATCH request with a body that contains an object with only the properties that need changing, as shown in the following code: PATCH /path/to/resource Content-Length: 123 Content-Type: application/json To delete an existing resource, you might make a DELETE request, as shown in the following code: DELETE /path/to/resource As well as the responses shown in the table above for a GET request, all the types of requests that cre- ate, modify, or delete a resource have additional possible common responses, as shown in Table 14.2: Status code Description The new resource was created successfully, the response header named 201 Created Location contains its path, and the response body contains the newly created resource. Immediately GET-ing the resource should return 200. The new resource cannot be created immediately so the request is queued for later processing and immediately GET-ing the resource might return 404. The 202 Accepted body can contain a resource that points to some form of status checker or an estimate of when the resource will become available. Commonly used in response to a DELETE request since returning the resource in the body after deleting it does not usually make sense! Sometimes used in 204 No Content response to POST, PUT, or PATCH requests if the client does not need to confirm that the request was processed correctly. Returned when the request used a method that is not supported. For example, 405 Method Not a web service designed to be read-only may explicitly disallow PUT, DELETE, Allowed and so on. Returned when the resource in the request body uses a media type that the 415 Unsupported web service cannot handle. For example, if the body contains a resource in Media Type XML format but the web service can only process JSON. Table 14.2: Common HTTP status code responses to other methods like POST and PUT 