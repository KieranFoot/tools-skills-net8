Handling Dates, Times, and Internationalization 292 if (string.IsNullOrWhiteSpace(salaryText)) { salaryText = "34500"; } DateTime dob = DateTime.Parse(dobText); int minutes = (int)DateTime.Today.Subtract(dob).TotalMinutes; decimal salary = decimal.Parse(salaryText); WriteLine(resources.GetPersonDetails(name, dob, minutes, salary)); Testing globalization and localization Now, we can run the console app and see the resources being loaded: 1. Run the console app and enter da-DK for the ISO code. Note that the prompts are in US English because we currently only have invariant culture resources. To save time and to make sure you have the correct structure, you can copy, paste, and rename the .resx files instead of creating empty new ones. Or you could copy these files from the GitHub repository for the book. 2. In the Resources folder, add a new XML file named PacktResources.da.resx, and modify the contents to contain non-region-specific Danish language resources, as shown in the following markup: <?xml version="1.0" encoding="utf-8"?> <root> <data name="EnterYourDob" xml:space="preserve"> <value>Indtast din fødselsdato: </value> </data> <data name="EnterYourName" xml:space="preserve"> <value>Indtast dit navn: </value> </data> <data name="EnterYourSalary" xml:space="preserve"> <value>Indtast din løn: </value> </data> <data name="PersonDetails" xml:space="preserve"> <value>{0} blev født på en {1:dddd}. {0} er {2:N0} minutter gammel. {0} tjener {3:C}.</value> </data> </root> 