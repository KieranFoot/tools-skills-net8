Writing, Debugging, and Testing Functions 230 Create three projects: • A class library named Ch04Ex02PrimeFactorsLib with a static class and static method named PrimeFactors, which, when passed an int variable as a parameter, returns a string showing its prime factors. Ch04Ex02PrimeFactorsTests with a few suitable unit tests. • A unit test project named Ch04Ex02PrimeFactorsApp. • A console application to use it, named To keep it simple, you can assume that the largest number entered will be 1,000. Use the debugging tools and write unit tests to ensure that your function works correctly with multiple inputs and returns the correct output. Exercise 4.3 – Explore topics Use the links on the following page to learn more about the topics covered in this chapter: https://github.com/markjprice/cs12dotnet8/blob/main/docs/book-links.md#chapter-4--- writing-debugging-and-testing-functions Summary In this chapter, you learned: • How to write reusable functions with input parameters and return values, in both an imper- ative and functional style. • How to use the Visual Studio and Visual Studio Code debugging and diagnostic features like logging and unit tests to identify and fix any bugs in them. • How to throw and catch exceptions in functions and understand the call stack. In the next chapter, you will learn how to build your own types using object-oriented programming techniques. 