Implementing Interfaces and Inheriting Classes 364 class Eta : Zeta { void M4() { /* implementation */ } } // In C# 8 and later, interfaces can have default implementations // as well as members that must be implemented. // Requires: .NET Standard 2.1, .NET Core 3.0 or later. interface ITheta { void M3() { /* implementation */ } void M4(); } // A class inheriting the default implementation from an interface // and must provide an implementation for M4. class Iota : ITheta { void M4() { /* implementation */ } } Practicing and exploring Test your knowledge and understanding by answering some questions, getting some hands-on practice, and exploring this chapter’s topics with more in-depth research. Exercise 6.1 – Test your knowledge Answer the following questions: 1. What is a delegate? 2. What is an event? 3. How are a base class and a derived class related, and how can the derived class access the base class? is and as operators? 4. What is the difference between 5. Which keyword is used to prevent a class from being derived from or a method from being further overridden? new keyword? 6. Which keyword is used to prevent a class from being instantiated with the 7. Which keyword is used to allow a member to be overridden? 