Building Efficient Microservices Using gRPC 598 model.ErrorMessage = ex.Message; } 5. In the Northwind.Grpc.Client.Mvc project, in appsettings.Development.json, modify the logging level for ASP.NET Core from the default of Warning to Information, as shown high- lighted in the following configuration: { "Logging": { "LogLevel": { "Default": "Information", "Microsoft.AspNetCore": "Information" } } } 6. Start the Northwind.Grpc.Service project without debugging. Northwind.Grpc.Client.Mvc project. 7. Start the https://localhost:5133/. 8. If necessary, start a browser and navigate to the home page: At the command prompt or terminal for the gRPC service, note the request has a three-second 9. deadline, as shown in the following output: crit: Northwind.Grpc.Service.Services.ShipperService[0] This request has a deadline of 14:56:30. It is now 14:56:27. 10. In the browser, note that after three seconds, the home page shows a deadline exceeded ex- ception, as shown in Figure 13.8: Figure 13.8: A deadline has been exceeded 11. At the command prompt or terminal for the ASP.NET Core MVC client, note the logs that start at the point where a request is made to the GetShipper method on the gRPC service, but the deadline is exceeded, as shown in the following output: 