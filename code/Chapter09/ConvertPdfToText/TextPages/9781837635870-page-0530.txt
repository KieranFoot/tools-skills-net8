Chapter 9 511 8. What is the best serialization format to choose for cross-platform compatibility? Why is it bad to use a string value like "\Code\Chapter01" to represent a path, and what 9. should you do instead? 10. Where can you find information about NuGet packages and their dependencies? Exercise 9.2 â€“ Practice serializing as XML In the Chapter09 solution, create a console app named Ch09Ex02SerializingShapes that creates a list of shapes, uses serialization to save it to the filesystem with XML, and then deserializes it back: // Create a list of Shapes to serialize. List<Shape> listOfShapes = new() { new Circle { Colour = "Red", Radius = 2.5 }, new Rectangle { Colour = "Blue", Height = 20.0, Width = 10.0 }, new Circle { Colour = "Green", Radius = 8.0 }, new Circle { Colour = "Purple", Radius = 12.3 }, new Rectangle { Colour = "Blue", Height = 45.0, Width = 18.0 } }; Shapes should have a read-only property named Area so that when you deserialize, you can output a list of shapes, including their areas, as shown here: List<Shape> loadedShapesXml = serializerXml.Deserialize(fileXml) as List<Shape>; foreach (Shape item in loadedShapesXml) { WriteLine("{0} is {1} and has an area of {2:N2}", item.GetType().Name, item.Colour, item.Area); } This is what your output should look like when you run your console application: Loading shapes from XML: Circle is Red and has an area of 19.63 Rectangle is Blue and has an area of 200.00 Circle is Green and has an area of 201.06 Circle is Purple and has an area of 475.29 Rectangle is Blue and has an area of 810.00 