Querying and Manipulating Data Using LINQ 602 builder.Encrypt = true; builder.TrustServerCertificate = true; builder.MultipleActiveResultSets = true; string connection = builder.ConnectionString; // WriteLine($"SQL Server connection: {connection}"); // To use SQL Server. // optionsBuilder.UseSqlServer(connection); #endregion } protected override void OnModelCreating( ModelBuilder modelBuilder) { if (Database.ProviderName is not null && Database.ProviderName.Contains("Sqlite")) { // SQLite data provider does not directly support the // decimal type so we can convert to double instead. modelBuilder.Entity<Product>() .Property(product => product.UnitPrice) .HasConversion<double>(); } } } If you want to use SQL Server, then comment out the statement that calls UseSqlite and uncomment the statement that calls UseSqlServer. 6. Build the project and fix any compiler errors. Filtering and sorting sequences Now letâ€™s write statements to filter and sort sequences of rows from the tables: 1. In the LinqWithEFCore project, add a new class file named Program.Helpers.cs. In Program.Helpers.cs, define a partial Program class with a method to configure the console 2. to support special characters like the Euro currency symbol and control the current culture, and a method to output a section title, as shown in the following code: 