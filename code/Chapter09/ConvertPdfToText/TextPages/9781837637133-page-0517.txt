Broadcasting Real-Time Communication Using SignalR 484 Building a web client using the SignalR JavaScript library Next, we will add the SignalR client-side JavaScript library so that we can use it on a web page: 1. Open a command prompt or terminal for the Northwind.SignalR.Service.Client.Mvc proj- ect/folder. 2. Install the Library Manager CLI tool, as shown in the following command: dotnet tool install -g Microsoft.Web.LibraryManager.Cli This tool might already be installed globally. To update it to the latest version, repeat the command but replace install with update. 3. Enter a command to add the signalr.js and signalr.min.js libraries to the project from the unpkg source, as shown in the following command: libman install @microsoft/signalr@latest -p unpkg -d wwwroot/js/signalr --files dist/browser/signalr.js --files dist/browser/signalr.min.js Never copy long commands from a PDF and paste them directly to the command prompt. Always clean them up in a basic text editor to remove extraneous new lines and so on and then recopy them. To make it easier to enter long command lines, you can copy them from the following link: https://github.com/markjprice/ apps-services-net8/blob/main/docs/command-lines.md 4. Note the success message, as shown in the following output: wwwroot/js/signalr/dist/browser/signalr.js written to disk wwwroot/js/signalr/dist/browser/signalr.min.js written to disk Installed library "@microsoft/signalr@latest" to "wwwroot/js/signalr" Visual Studio 2022 also has a GUI for adding client-side JavaScript libraries. To use it, right- click a web project and then navigate to Add | Client Side Libraries. Adding a chat page to the MVC website Next, we will add chat functionality to the home page: 1. In Views/Home, in Index.cshtml, modify its contents, as shown in the following markup: 