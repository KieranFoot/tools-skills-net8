Multitasking and Concurrency 176 ConsoleColor previousColor = ForegroundColor; ForegroundColor = ConsoleColor.DarkCyan; WriteLine( "Thread Id: {0}, Priority: {1}, Background: {2}, Name: {3}", t.ManagedThreadId, t.Priority, t.IsBackground, t.Name ?? "null"); ForegroundColor = previousColor; } } 5. In the WorkingWithTasks project, add a new class file named Program.Methods.cs. In Program.Methods.cs, delete any existing statements, and then add three methods that 6. simulate work, as shown in the following code: partial class Program { private static void MethodA() { TaskTitle("Starting Method A..."); OutputThreadInfo(); Thread.Sleep(3000); // Simulate three seconds of work. TaskTitle("Finished Method A."); } private static void MethodB() { TaskTitle("Starting Method B..."); OutputThreadInfo(); Thread.Sleep(2000); // Simulate two seconds of work. TaskTitle("Finished Method B."); } private static void MethodC() { TaskTitle("Starting Method C..."); OutputThreadInfo(); Thread.Sleep(1000); // Simulate one second of work. TaskTitle("Finished Method C."); } } 