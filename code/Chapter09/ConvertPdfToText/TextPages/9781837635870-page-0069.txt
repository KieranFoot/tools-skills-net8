Hello, C#! Welcome, .NET! 50 Practicing and exploring Let’s now test your knowledge and understanding by trying to answer some questions, getting some hands-on practice, and going into the topics covered throughout this chapter in greater detail. Exercise 1.1 – Test your knowledge Try to answer the following questions, remembering that although most answers can be found in this chapter, you should do some online research or code writing to answer others: 1. Is Visual Studio 2022 better than Visual Studio Code? 2. Are .NET 5 and later better than .NET Framework? 3. What is .NET Standard and why is it still important? 4. Why can a programmer use different languages, for example, C# and F#, to write applications that run on .NET? 5. What is a top-level program and how do you access any command-line arguments? 6. What is the name of the entry point method of a .NET console app and how should it be ex- plicitly declared if you are not using the top-level program feature? Program class defined in with a top-level program? 7. What namespace is the 8. Where would you look for help for a C# keyword? 9. Where would you look first for solutions to common programming problems? 10. What should you do after getting an AI to write code for you? Appendix, Answers to the Test Your Knowledge Questions, is available to download from a link in the README in the GitHub repository: https://github.com/markjprice/ cs12dotnet8. Exercise 1.2 – Practice C# anywhere with a browser You don’t need to download and install Visual Studio Code or even Visual Studio 2022 to write C#. You can start coding online at any of the following links: • Visual Studio Code for Web: https://vscode.dev/ • SharpLab: https://sharplab.io/ • C# Online Compiler | .NET Fiddle: https://dotnetfiddle.net/ • W3Schools C# Online Compiler: https://www.w3schools.com/cs/cs_compiler.php Exercise 1.3 – Explore topics A book is a curated experience. I have tried to find the right balance of topics to include in the printed book. Other content that I have written can be found in the GitHub repository for this book. I believe that this book covers all the fundamental knowledge and skills a C# and .NET developer should have or be aware of. Some longer examples are best included as links to Microsoft documentation or third-party article authors. 