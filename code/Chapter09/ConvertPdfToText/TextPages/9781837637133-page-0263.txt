Using Popular Third-Party Libraries 230 5. In the MappingObjects.Mappers project, add a new class file named CartToSummaryMapper. and modify its contents to create a mapper configuration that maps the FullName of the cs Summary to a combination of the FirstName and LastName from Customer, as shown in the following code: using AutoMapper; // To use MapperConfiguration. using AutoMapper.Internal; // To use the Internal() extension method. using Northwind.EntityModels; // To use Cart. using Northwind.ViewModels; // To use Summary. namespace MappingObjects.Mappers; public static class CartToSummaryMapper { public static MapperConfiguration GetMapperConfiguration() { MapperConfiguration config = new(cfg => { // To fix an issue with the MaxInteger method: // https://github.com/AutoMapper/AutoMapper/issues/3988 cfg.Internal().MethodMappingEnabled = false; // Configure the mapper using projections. cfg.CreateMap<Cart, Summary>() // Map the first and last names formatted to the full name. .ForMember(dest => dest.FullName, opt => opt.MapFrom(src => string.Format("{0} {1}", src.Customer.FirstName, src.Customer.LastName) )); }); return config; } } Performing tests for an AutoMapper configuration Now we can define unit tests for the mapper: 1. Use your preferred code editor to add a new xUnit Test Project / xunit named MappingObjects. Tests to the Chapter06 solution. MappingObjects.Tests project file, add a package reference to AutoMapper, as shown 2. In the highlighted in the following markup: 