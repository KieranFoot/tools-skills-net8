Caching, Queuing, and Resilient Background Services 424 5. In appsettings.Development.json, add an entry to set the Hangfire log level to Information, as highlighted in the following JSON: { "Logging": { "LogLevel": { "Default": "Information", "Microsoft.AspNetCore": "Warning", "Hangfire": "Information" } } } 6. Create a SQL Server database named Northwind.HangfireDb: • If you are using Visual Studio 2022, navigate to View | Server Explorer, right-click Data Connections, choose Create New SQL Server database…, enter connection information and the database name, and then click OK. If you are using Visual Studio Code, navigate to SQL Server, right-click and choose • New Query, enter connection information, and then in the query window, enter the following SQL command and execute it: USE master GO CREATE DATABASE [Northwind.HangfireDb] GO 7. In Program.cs, delete the existing statements, and then add statements to configure Hangfire to use SQL Server and to enable Hangfire Dashboard, as shown in the following code: using Microsoft.Data.SqlClient; // To use SqlConnectionStringBuilder. using Hangfire; // To use GlobalConfiguration. SqlConnectionStringBuilder connection = new(); connection.InitialCatalog = "Northwind.HangfireDb"; connection.MultipleActiveResultSets = true; connection.Encrypt = true; connection.TrustServerCertificate = true; connection.ConnectTimeout = 5; // Default is 30 seconds. connection.DataSource = "."; // To use local SQL Server. // To use Windows Integrated authentication. connection.IntegratedSecurity = true; 