Working with Common .NET Types 420 .NET 8 introduced two new Random methods, as described in the following list: • GetItems<T>: This method is passed an array or read-only span of any type T of choices and the number of items you want to generate, and then it returns that number of items randomly selected from the choices. Shuffle<T>: This method is passed an array or span of any type T and the order of items is • randomized. Let’s see an example of each: 1. In Program.cs, add statements to access the shared Random instance, and then call its methods to generate random numbers, as shown in the following code: string[] beatles = r.GetItems( choices: new[] { "John", "Paul", "George", "Ringo" }, length: 10); Write("Random ten beatles:"); foreach (string beatle in beatles) { Write($" {beatle}"); } WriteLine(); r.Shuffle(beatles); Write("Shuffled beatles:"); foreach (string beatle in beatles) { Write($" {beatle}"); } WriteLine(); 2. Run the code and view the result, as shown in the following output: Random ten beatles: Paul Paul John John John John Paul John George Ringo Shuffled beatles: George John Paul Paul John John John Ringo Paul John Generating GUIDs A GUID (globally unique identifier) is a 128-bit text string that represents a unique value for identifi- cation. As a developer, you will need to generate GUIDs when a unique reference is needed to identify information. Traditionally, database and computer systems may have used an incrementing integer value, but a GUID is more likely to avoid conflicts in multi-tasking systems. 