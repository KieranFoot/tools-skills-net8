Combining Data Sources Using GraphQL 506 country } } } You can learn more about the GraphQL query language at the following link: https:// graphql.org/learn/queries/. Understanding other GraphQL capabilities As well as queries, other standard GraphQL features are mutations and subscriptions: • Mutations enable you to create, update, and delete resources. Subscriptions enable a client to get notified when resources change. They work best with • additional communication technologies like WebSockets. Understanding the ChilliCream GraphQL platform GraphQL.NET is one of the most popular platforms for implementing GraphQL with .NET. In my opinion, GraphQL.NET requires too much configuration for even the most basic example, and the documentation is frustrating. I have a feeling that, although it is powerful, it implements the GraphQL specification in a one-to-one manner instead of rethinking how a .NET platform could make it easier to get started. You can learn about GraphQL.NET at the following link: https://graphql-dotnet. github.io/. For this book, I looked for alternatives, and I found exactly what I was looking for. ChilliCream is a company that has created a whole platform to work with GraphQL: • Hot Chocolate enables you to create GraphQL services for .NET. • Strawberry Shake enables you to create GraphQL clients for .NET. • Banana Cake Pop enables you to run queries and explore a GraphQL endpoint using a Mona- co-based GraphQL IDE. • Green Donut enables better performance when loading data. Unlike some other packages that can be used to add support for GraphQL, ChilliCream packages are designed to be as easy to implement as possible, using conventions and simple POCO classes instead of complex types and special schemas. It works in a similar way to how Microsoft might have built a GraphQL platform for .NET, with sensible defaults and conventions rather than lots of boilerplate code and configuration. 