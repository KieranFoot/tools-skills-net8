Chapter 1 5 Finding the solution code on GitHub The solution code in the GitHub repository for this book for all code editors is available at the following link: https://github.com/markjprice/apps-services-net8/tree/main/code. Project naming and port numbering conventions If you complete all the coding tasks in this book, then you will end up with dozens of projects. Many of those will be websites and services that require port numbers for hosting on the localhost domain. With large, complex solutions, it can be difficult to navigate the entire code. So, a good reason to struc- ture your projects well is to make it easier to find components. It is good to have an overall name for your solution that reflects the application or solution. In the 1990s, Microsoft registered Northwind as a fictional company name for use in database and code samples. It was first used as the sample database for their Access product and then also used in SQL Server. We will build multiple projects for this fictional company, so we will use the name Northwind as a prefix for all the project names. Good Practice: There are many ways to structure and name projects and solutions, for example, using a folder hierarchy as well as a naming convention. If you work in a team, make sure you know how your team does it. It is good to have a naming convention for your projects in a solution so that any developer can tell what each one does instantly. A common choice is to use the type of project, for example, class library, console app, website, and so on, as shown in Table 1.1: Name Description A class library project for common types like interfaces, enums, Northwind.Common classes, records, and structs, used across multiple projects. A class library project for common EF Core entity models. Entity Northwind.Common. models are often used on both the server and client side, so it is EntityModels best to separate dependencies on specific database providers. Northwind.Common. A class library project for the EF Core database context with DataContext dependencies on specific database providers. An ASP.NET Core project for a complex website that uses the MVC Northwind.Mvc pattern and can be more easily unit tested. An ASP.NET Core project for an HTTP API service. A good choice Northwind.WebApi.Service for integrating with websites because it can use any JavaScript library or Blazor to interact with the service. Northwind.WebApi.Client. A client to a web service. The last part of the name indicates that Console it is a console app. Northwind.gRPC.Service An ASP.NET Core project for a gRPC service. 