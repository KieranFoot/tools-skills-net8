Packaging and Distributing .NET Types 386 • dotnet restore: This downloads dependencies for the project. dotnet build: This builds, aka compiles, a .NET project. A new switch introduced with .NET 8 • is --tl (meaning terminal logger), which provides a modern output. For example, it provides real-time information about what the build is doing. You can learn more at the following link: https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-build#options. dotnet build-server: This interacts with servers started by a build. • dotnet msbuild: This runs MS Build Engine commands. • dotnet clean: This removes the temporary outputs from a build. • dotnet test: This builds and then runs unit tests for the project. • dotnet run: This builds and then runs the project. • dotnet pack: This creates a NuGet package for the project. • dotnet publish: This builds and then publishes the project, either with dependencies or as • a self-contained application. In .NET 7 and earlier, this published the Debug configuration by default. In .NET 8 and later, it now publishes the Release configuration by default. dotnet add: This adds a reference to a package or class library to the project. • dotnet remove: This removes a reference to a package or class library from the project. • dotnet list: This lists the package or class library references for the project. • Publishing a self-contained app Now that you have seen some example dotnet tool commands, we can publish our cross-platform console app: 1. At the command prompt or terminal, make sure that you are in the DotNetEverywhere folder. 2. Enter a command to build and publish the self-contained release version of the console appli- cation for Windows 10, as shown in the following command: dotnet publish -c Release -r win10-x64 --self-contained 3. Note the build engine restores any needed packages, compiles the project source code into an assembly DLL, and creates a publish folder, as shown in the following output: MSBuild version 17.8.0+14c24b2d3 for .NET Determining projects to restore... All projects are up-to-date for restore. DotNetEverywhere -> C:\cs12dotnet8\Chapter07\DotNetEverywhere\bin\ Release\net8.0\win10-x64\DotNetEverywhere.dll DotNetEverywhere -> C:\cs12dotnet8\Chapter07\DotNetEverywhere\bin\ Release\net8.0\win10-x64\publish\ 4. Enter the following commands to build and publish the release versions for the macOS and Linux variants: 