Chapter 14 659 6. In the browser, navigate to https://localhost:5141/notcached, and note nothing is written to the command prompt or terminal. In the browser, click the Refresh button several times and note that the time is always updated 7. because it is not served from the output cache. In the browser, navigate to https://localhost:5141/cached, and note that messages are 8. written to the command prompt or terminal to tell you that you have made a request for a cached resource but it does not have anything in the output cache so it has now cached the output, as shown in the following output: info: Microsoft.AspNetCore.OutputCaching.OutputCacheMiddleware[7] No cached response available for this request. info: Microsoft.AspNetCore.OutputCaching.OutputCacheMiddleware[9] The response has been cached. 9. In the browser, click the Refresh button several times and note that the time is not updated, and an output caching message tells you that the value was served from the cache, as shown in the following output: info: Microsoft.AspNetCore.OutputCaching.OutputCacheMiddleware[5] Serving response from cache. 10. Continue refreshing until 10 seconds have passed and note that messages are written to the command line or terminal to tell you that the cached output has been updated. 11. Close the browser and shut down the web server. Output caching MVC views Now letâ€™s see how we can output cache an MVC view: 1. In Program.cs, at the end of the call to map controllers, add a call to the CacheOutput method, as shown highlighted in the following code: app.MapControllerRoute( name: "default", pattern: "{controller=Home}/{action=Index}/{id?}") .CacheOutput(); 2. Start the Northwind.Mvc website project and arrange the browser window and command prompt or terminal window so that you can see both. 3. At the command prompt or terminal, note that the home page with its table of orders is not in the output cache, so SQL commands are executed to get the data, and then once the Razor view generates the page, it is stored in the cache, as shown highlighted in the following output: info: Microsoft.Hosting.Lifetime[14] Now listening on: https://localhost:5141 info: Microsoft.Hosting.Lifetime[14] 