Chapter 16 707 This is converted into a SolidColorBrush instance using a type converter, as shown in the following equivalent code: newButton.Background = new SolidColorBrush(Colors.Pink); There are many type converters provided by .NET MAUI and you can create and register your own. These are especially useful for custom data visualizations. Choosing between .NET MAUI controls There are lots of predefined controls that you can choose from for common UI scenarios. .NET MAUI (and most dialects of XAML) support these controls, as shown in Table 16.2: Controls Description Button, ImageButton, MenuItem, Executing actions ToolbarItem CheckBox, RadioButton, Switch Choosing options DatePicker, TimePicker Choosing dates and times CollectionView, ListView, Choosing items from lists and tables Picker, TableView CarouselView, IndicatorView Scrolling animated views that show one item at a time AbsoluteLayout, Layout containers that affect their children in different ways BindableLayout, FlexLayout, Grid, HorizontalStackLayout, StackLayout, VerticalStackLayout Border, BoxView, Frame, Visual elements ScrollView Ellipse, Line, Path, Polygon, Graphical elements Polyline, Rectangle, RoundRectangle ActivityIndicator, Label, Displaying read-only text and other read-only displays ProgressBar, RefreshView Editor, Entry Editing text GraphicsView, Image Embedding images, videos, and audio files Slider, Stepper Selecting within ranges of numbers SearchBar Adding a search feature BlazorWebView, WebView Embedding Blazor and web components ContentView Building custom controls Table 16.2: MAUI user interface controls 