Chapter 6 225 2. In the Serilogging project, treat warnings as errors, globally and statically import the System. Console class, and add a package reference for Serilog, including sinks for console and file (which also supports rolling files), as shown in the following markup: <ItemGroup> <PackageReference Include="Serilog" Version="3.1.1" /> <PackageReference Include="Serilog.Sinks.Console" Version="5.0.0" /> <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" /> </ItemGroup> 3. Build the Serilogging project. Serilogging project, add a new folder named Models. 4. In the In the Serilogging project, in the Models folder, add a new class file named ProductPageView. 5. cs, and modify its contents, as shown in the following code: namespace Serilogging.Models; public class ProductPageView { public int ProductId { get; set; } public string? PageTitle { get; set; } public string? SiteSection { get; set; } } 6. In Program.cs, delete the existing statements and then import some namespaces for working with Serilog, as shown in the following code: using Serilog; // To use Log, LoggerConfiguration, RollingInterval. using Serilog.Core; // To use Logger. using Serilogging.Models; // To use ProductPageView. 7. In Program.cs, create a logger configuration that will write to the console as well as configure a rolling interval that means a new file is created each day, and write various levels of log entries, as shown in the following code: // Create a new logger that will write to the console and to // a text file, one-file-per-day, named with the date. using Logger log = new LoggerConfiguration() .WriteTo.Console() .WriteTo.File("log.txt", rollingInterval: RollingInterval.Day) .CreateLogger(); // Assign the new logger to the static entry point for logging. Log.Logger = log; Log.Information("The global logger has been configured."); 