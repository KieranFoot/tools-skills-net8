Chapter 14 651 Attributes that can be applied to the Cache Tag Helper include: • enabled: Default value is true. This exists so that you can include the <cache> element in the markup but decide at runtime if it should be enabled or not. expires-after: A TimeSpan value to expire after. The default is 00:20:00, meaning 20 minutes. • • expires-on: A DateTimeOffset value to expire at. No default. expires-sliding: A TimeSpan value to expire after if the value has not been accessed during • that time. This is useful when storing database entities that cost a lot to create and have varied popularity. The popular entities will stay cached if they continue to be accessed. Less popular entities will drop out. No default. vary-by-{type}: These attributes allow multiple different cached versions based on differences • in an HTTP header value, a user, a route, cookie, or query string value, or a custom value. Let’s see an example of the Cache Tag Helper: 1. In the Views/Home folder, in Index.cshtml, between the heading and the table, add <div> el- ements to define a Bootstrap row with two columns that show the current UTC date and time twice, once live and then once cached, as shown in the following markup: <div class="row"> <div class="col"> <h2>Live</h2> <p class="alert alert-info"> UTC: @DateTime.UtcNow.ToLongDateString() at @DateTime.UtcNow.ToLongTimeString() </p> </div> <div class="col"> <h2>Cached</h2> <p class="alert alert-secondary"> <cache> UTC: @DateTime.UtcNow.ToLongDateString() at @DateTime.UtcNow.ToLongTimeString() </cache> </p> </div> </div> 2. Start the Northwind.Mvc website project. 