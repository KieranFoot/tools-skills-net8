Chapter 11 623 The select keyword is always required for LINQ query comprehension syntax. The Select extension method is optional when using extension methods and lambda expressions because if you do not call Select, then the whole item is implicitly selected. Not all extension methods have a C# keyword equivalent, for example, the Skip and Take extension methods, which are commonly used to implement paging for lots of data. A query that skips and takes cannot be written using only the query comprehension syntax, so we could write the query using all extension methods, as shown in the following code: var query = names .Where(name => name.Length > 4) .Skip(80) .Take(10); Or, we could wrap query comprehension syntax in parentheses and then switch to using extension methods, as shown in the following code: var query = (from name in names where name.Length > 4 select name) .Skip(80) .Take(10); Good Practice: Learn both extension methods with lambda expressions and the query comprehension syntax ways of writing LINQ queries, because you are likely to have to maintain code that uses both. Practicing and exploring Test your knowledge and understanding by answering some questions, getting some hands-on practice, and exploring with deeper research the topics covered in this chapter. Exercise 11.1 â€“ Test your knowledge Answer the following questions: 1. What are the two required parts of LINQ? 2. Which LINQ extension method would you use to return a subset of properties from a type? 3. Which LINQ extension method would you use to filter a sequence? 4. List five LINQ extension methods that perform aggregation. Select and SelectMany extension methods? 5. What is the difference between the What is the difference between IEnumerable<T> and IQueryable<T>? How do you switch 6. between them? 