Packaging and Distributing .NET Types 412 Good Practice: Preview features are not supported in production code. Preview features are likely to have breaking changes before the final release. Enable preview features at your own risk. Switch to a GA release future SDK like .NET 9 to use new compiler features while still targeting older but longer supported versions of .NET like .NET 8. Requiring preview features The [RequiresPreviewFeatures] attribute is used to indicate assemblies, types, or members that use, and, therefore, require warnings about, preview features. A code analyzer then scans for this assembly and generates warnings if needed. If your code does not use any preview features, you will not see any warnings. If you use any preview features, then your code should warn consumers of your code that you use preview features. Enabling preview features In the Project file, add an element to enable preview features and an element to enable preview language features, as shown highlighted in the following markup: <Project Sdk="Microsoft.NET.Sdk"> <PropertyGroup> <OutputType>Exe</OutputType> <TargetFramework>net8.0</TargetFramework> <Nullable>enable</Nullable> <ImplicitUsings>enable</ImplicitUsings> <EnablePreviewFeatures>true</EnablePreviewFeatures> <LangVersion>preview</LangVersion> </PropertyGroup> </Project> Method interceptors An interceptor is a method that substitutes a call to an interceptable method with a call to itself. This is an advanced feature most commonly used in source generators. If readers are interested, then I might add a section about them to the ninth edition. More Information: You can learn more about interceptors at the following link: https:// learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12#interceptors. Practicing and exploring Test your knowledge and understanding by answering some questions, getting some hands-on practice, and exploring with deeper research into the topics of this chapter. 