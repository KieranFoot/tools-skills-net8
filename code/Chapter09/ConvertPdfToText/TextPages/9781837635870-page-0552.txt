Chapter 10 533 The DbContext-derived class can optionally have an overridden method named OnModelCreating. This is where you can write Fluent API statements as an alternative to decorating your entity classes with attributes. Letâ€™s write the code: 1. In the WorkingWithEFCore project, modify the NorthwindDb class to add statements to define two properties for the two tables and an OnModelCreating method, as shown highlighted in the following code: public class NorthwindDb : DbContext { // These two properties map to tables in the database. public DbSet<Category>? Categories { get; set; } public DbSet<Product>? Products { get; set; } protected override void OnConfiguring( DbContextOptionsBuilder optionsBuilder) { ... } protected override void OnModelCreating( ModelBuilder modelBuilder) { // Example of using Fluent API instead of attributes // to limit the length of a category name to 15. modelBuilder.Entity<Category>() .Property(category => category.CategoryName) .IsRequired() // NOT NULL .HasMaxLength(15); // Some SQLite-specific configuration. if (Database.ProviderName?.Contains("Sqlite") ?? false) { // To "fix" the lack of decimal support in SQLite. modelBuilder.Entity<Product>() .Property(product => product.Cost) .HasConversion<double>(); } } } 