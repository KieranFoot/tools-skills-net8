Chapter 2 107 For all code editors: 1. Note the result indicates four arguments, as shown in the following output: There are 4 arguments. 2. In Program.cs, to enumerate or iterate (that is, loop through) the values of those four arguments, add the following statements after outputting the length of the array: foreach (string arg in args) { WriteLine(arg); } 3. Run the code again and note the result shows the details of the four arguments, as shown in the following output: There are 4 arguments. firstarg second-arg third:arg fourth arg Setting options with arguments We will now use these arguments to allow the user to pick a color for the background, foreground, and cursor size of the output window. The cursor size can be an integer value from 1, meaning a line at the bottom of the cursor cell, up to 100, meaning a percentage of the height of the cursor cell. We have statically imported the System.Console class. It has properties like ForegroundColor, BackgroundColor, and CursorSize that we can now set just by using their names without needing to prefix them with Console. The System namespace is already imported so that the compiler knows about the ConsoleColor and Enum types: â€¢ Add statements to warn the user if they do not enter three arguments, and then parse those arguments and use them to set the color and dimensions of the console window, as shown in the following code: if (args.Length < 3) { WriteLine("You must specify two colors and cursor size, e.g."); WriteLine("dotnet run red yellow 50"); return; // Stop running. } ForegroundColor = (ConsoleColor)Enum.Parse( 