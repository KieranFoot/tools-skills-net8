Writing, Debugging, and Testing Functions 208 Reviewing project packages for working with configuration After adding the NuGet packages, we can see the references in the project file. Package references are case-insensitive, so you do not need to worry if they are not an exact case match. Letâ€™s review the package references: 1. Open Instrumenting.csproj and note the <ItemGroup> section with the added NuGet packages, as shown highlighted in the following markup: <Project Sdk="Microsoft.NET.Sdk"> <PropertyGroup> <OutputType>Exe</OutputType> <TargetFramework>net8.0</TargetFramework> <Nullable>enable</Nullable> <ImplicitUsings>enable</ImplicitUsings> </PropertyGroup> <ItemGroup> <PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="8.0.0" /> <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="8.0.0" /> </ItemGroup> </Project> After the final release of .NET 7, Microsoft fixed a bug in Microsoft.Extensions. Configuration.Binder package version 7.0.3. This caused an exception to be thrown due to the way the previous edition read a setting. This is known as a bug- fix regression. Good unit tests should detect fixes that then cascade to cause other problems. It is also an example of unexpected issues with future package versions. If you have unexpected issues with a package, try an earlier version. 2. Add a file named appsettings.json to the Instrumenting project folder. appsettings.json, define a setting named PacktSwitch with a Value of Info, as shown in 3. In the following code: { "PacktSwitch": { "Value": "Info" 