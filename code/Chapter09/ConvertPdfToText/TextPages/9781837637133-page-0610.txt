Chapter 13 577 The Grpc.Tools package generates the C# class files from the registered .proto files, and those class files use types defined in Googleâ€™s package to implement the serialization to the Protobuf serialization format. The Grpc.AspNetCore.Server. ClientFactory package includes both server side and client-side support for gRPC in a .NET project. 10. In Program.cs, in the section that configures services, note the call to add gRPC to the Services collection, as shown in the following code: builder.Services.AddGrpc(); 11. In Program.cs, in the section for configuring the HTTP pipeline, note the call to map the Greeter service, as shown in the following code: app.MapGrpcService<GreeterService>(); 12. In the Properties folder, open launchSettings.json and modify the applicationUrl setting to use port 5131 for https and port 5132 for http, as shown highlighted in the following markup: { "$schema": "http://json.schemastore.org/launchsettings.json", "profiles": { "http": { "commandName": "Project", "dotnetRunMessages": true, "launchBrowser": false, "applicationUrl": "http://localhost:5132", "environmentVariables": { "ASPNETCORE_ENVIRONMENT": "Development" } }, "https": { "commandName": "Project", "dotnetRunMessages": true, "launchBrowser": false, "applicationUrl": "https://localhost:5131;http://localhost:5132", "environmentVariables": { "ASPNETCORE_ENVIRONMENT": "Development" } } } } 13. Build the Northwind.Grpc.Service project. 