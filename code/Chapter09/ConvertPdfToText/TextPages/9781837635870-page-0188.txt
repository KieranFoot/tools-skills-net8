4 Writing, Debugging, and Testing Functions This chapter is about writing functions to reuse code, debugging logic errors during development, logging exceptions during runtime, unit testing your code to remove bugs, and improving stability and reliability. This chapter covers the following topics: • Writing functions • Debugging during development • Hot reloading during development • Logging during development and runtime • Unit testing • Throwing and catching exceptions in functions Writing functions A fundamental principle of programming is Don’t Repeat Yourself (DRY). While programming, if you find yourself writing the same statements over and over again, then turn those statements into a function. Functions are like tiny programs that complete one small task. For example, you might write a function to calculate sales tax and then reuse that function in many places in a financial application. Like programs, functions usually have inputs and outputs. They are sometimes described as black boxes, where you feed some raw materials in at one end and a manufactured item emerges at the other. Once created and thoroughly debugged and tested, you don’t need to think about how they work. 