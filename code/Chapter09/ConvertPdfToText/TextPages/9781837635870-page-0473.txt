Working with Common .NET Types 454 2. In Program.cs, add statements to pass the keywords dictionary to this naughty method, as shown in the following code: UseDictionary(keywords); 3. Run the code, view the result, and note that the naughty method was able to add a new key-value pair, so the count has incremented, as shown in the following output: Count before is 3. Adding new item with GUID values. Count after is 4. 4. In Program.cs, comment out the UseDictionary statement and then add a statement to pass the dictionary converted into a read-only collection, as shown in the following code: //UseDictionary(keywords); UseDictionary(keywords.AsReadOnly()); 5. Run the code, view the result, and note that this time the method was not able to add an item, so the count is the same, as shown in the following output: Count before is 3. Adding new item with GUID values. This dictionary does not support the Add method. Count after is 3. 6. At the top of Program.cs, import the System.Collections.Immutable namespace, as shown in the following code: using System.Collections.Immutable; // To use ImmutableDictionary<T, T>. 7. In Program.cs, comment out the AsReadOnly statement and then add a statement to pass the keywords converted into an immutable dictionary, as shown highlighted in the following code: //UseDictionary(keywords.AsReadOnly()); UseDictionary(keywords.ToImmutableDictionary()); 8. Run the code, view the result, and note that this time the method was also not able to add a default value, so the count is the same – it is the same behavior as using a read-only collection, so what’s the point of immutable collections? If you import the System.Collections.Immutable namespace, then any collection that implements IEnumerable<T> is given six extension methods to convert it into an immutable collection like a list, dictionary, set, and so on. Although the immutable collection will have a method named Add, it does not add an item to the original immutable collection! Instead, it returns a new immutable collection with the new item in it. The original immutable collection still only has the original items in it. 