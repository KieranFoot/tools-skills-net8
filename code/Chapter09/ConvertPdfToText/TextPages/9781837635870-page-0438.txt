Chapter 8 419 Letâ€™s see some examples of generating pseudo-random numbers: 1. In Program.cs, add statements to access the shared Random instance, and then call its methods to generate random numbers, as shown in the following code: Random r = Random.Shared; // minValue is an inclusive lower bound i.e. 1 is a possible value. // maxValue is an exclusive upper bound i.e. 7 is not a possible value. int dieRoll = r.Next(minValue: 1, maxValue: 7); // Returns 1 to 6. WriteLine($"Random die roll: {dieRoll}"); double randomReal = r.NextDouble(); // Returns 0.0 to less than 1.0. WriteLine($"Random double: {randomReal}"); byte[] arrayOfBytes = new byte[256]; r.NextBytes(arrayOfBytes); // Fills array with 256 random bytes. Write("Random bytes: "); for (int i = 0; i < arrayOfBytes.Length; i++) { Write($"{arrayOfBytes[i]:X2} "); } WriteLine(); 2. Run the code and view the result, as shown in the following output: Random die roll: 1 Random double: 0.06735275453092382 Random bytes: D9 38 CD F3 5B 40 2D F4 5B D0 48 DF F7 B6 67 C1 95 A1 2C 58 42 CF 70 6C C3 BE 82 D7 EC 61 0D D2 2D C4 49 7B C7 0F EA CC B3 41 F3 04 5D 29 25 B7 F7 99 8A 0F 56 20 A6 B3 57 C4 48 DA 94 2B 07 F1 15 64 EA 8D FF 79 E6 E4 9A C8 65 C5 D8 55 3D 3C C0 2B 0B 4C 3A 0E E6 A5 91 B7 59 6C 9A 94 97 43 B7 90 EE D8 9A C6 CA A1 8F DD 0A 23 3C 01 48 E0 45 E1 D6 BD 7C 41 C8 22 8A 81 82 DC 1F 2E AD 3F 93 68 0F B5 40 7B 2B 31 FC A6 BF BA 05 C0 76 EE 58 B3 41 63 88 E5 5C 8B B5 08 5C C3 52 FF 73 69 B0 97 78 B5 3B 87 2C 12 F3 C3 AE 96 43 7D 67 2F F8 C9 31 70 BD AD B3 9B 44 53 39 5F 19 73 C8 43 0E A5 5B 6B 5A 9D 2F DF DC A3 EE C5 CF AF A4 8C 0F F2 9C 78 19 48 CE 49 A8 28 06 A3 4E 7D F7 75 AA 49 E7 4E 20 AF B1 77 0A 90 CF C1 E0 62 BC 4F 79 76 64 98 BF 63 76 B4 F9 1D A4 C4 74 03 63 02 In scenarios that do need truly random numbers like cryptography, there are specialized types for that, like RandomNumberGenerator. I plan to cover this and other cryptographic types in the companion book, Tools and Skills for .NET 8 Pros in a chapter titled Protecting Data and Apps Using Cryptography, expected to publish in the first half of 2024. 