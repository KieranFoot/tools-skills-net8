Broadcasting Real-Time Communication Using SignalR 480 • Configure for HTTPS: Selected. • Enable Docker: Cleared. • Do not use top-level statements: Cleared. Northwind.SignalR.Service.Client.Mvc project, treat warnings as errors and add a 2. In the project reference to the Northwind.Common project, as shown in the following markup: <ItemGroup> <ProjectReference Include="..\Northwind.Common\Northwind.Common.csproj" /> </ItemGroup> 3. In the Properties folder, in launchSettings.json, in the https profile, modify the applicationUrl to use port 5111 for https and 5112 for http, as shown highlighted in the following configuration: "https": { "commandName": "Project", "dotnetRunMessages": true, "launchBrowser": true, "applicationUrl": "https://localhost:5111;http://localhost:5112", "environmentVariables": { "ASPNETCORE_ENVIRONMENT": "Development" } 4. In the Northwind.SignalR.Service.Client.Mvc project, add a class file named ChatHub.cs. ChatHub.cs, modify its contents to inherit from the Hub class and implement two methods 5. In that can be called by a client, as shown in the following code: using Microsoft.AspNetCore.SignalR; // To use Hub. using Northwind.Chat.Models; // To use UserModel, MessageModel. namespace Northwind.SignalR.Service.Hubs; public class ChatHub : Hub { // A new instance of ChatHub is created to process each method so we // must store user names, connection IDs, and groups in a static field. private static Dictionary<string, UserModel> Users = new(); public async Task Register(UserModel newUser) { UserModel user; string action = "registered as a new user"; 