10 Building Serverless Nanoservices Using Azure Functions In this chapter, you will be introduced to Azure Functions, which can be configured to only require server-side resources while they execute. They execute when they are triggered by an activity like a message sent to a queue or a file uploaded to Azure Storage, or at a regularly scheduled interval. This chapter will cover the following topics: • Understanding Azure Functions • Building an Azure Functions project • Responding to timer and resource triggers • Publishing an Azure Functions project to the cloud • Cleaning up Azure Functions resources Understanding Azure Functions Azure Functions is an event-driven serverless compute platform. You can build and debug locally and later deploy to Microsoft Azure cloud. Azure Functions can be implemented in many languages, not just C# and .NET. It has extensions for Visual Studio 2022 and Visual Studio Code and a command-line tool. But first, you might be wondering, “How is it possible to have a service without a server?” Serverless does not literally mean there is no server. What serverless means is a service without a per- manently running server, and usually that means not running for most of the time or running with low resources and scaling up dynamically when needed. This can save a lot of costs. For example, organizations often have business functions that only need to run once per hour, once per month, or on an ad hoc basis. Perhaps the organization prints checks (cheques in England) to pay its employees at the end of the month. Those checks might need the salary amounts converted to words to print on the check. A function to convert numbers to words could be implemented as a serverless service. 