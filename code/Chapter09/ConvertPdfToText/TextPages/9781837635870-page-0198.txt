Chapter 4 179 In the preceding code, note the following: • CalculateTax has two inputs: a parameter named amount, which will be the amount of money spent, and a parameter named twoLetterRegionCode, which will be the region the amount is spent in. CalculateTax will perform a calculation using a switch expression and then return • the sales tax or VAT owed on the amount as a decimal value; so, before the name of the function, we have declared the data type of the return value to be decimal. 2. At the top of Program.Functions.cs, import the namespace to work with cultures, as shown in the following code: using System.Globalization; // To use CultureInfo. 3. In Program.Functions.cs, in the Program class, write a function named ConfigureConsole, as shown in the following code: static void ConfigureConsole(string culture = "en-US", bool useComputerCulture = false) { // To enable Unicode characters like Euro symbol in the console. OutputEncoding = System.Text.Encoding.UTF8; if (!useComputerCulture) { CultureInfo.CurrentCulture = CultureInfo.GetCultureInfo(culture); } WriteLine($"CurrentCulture: {CultureInfo.CurrentCulture.DisplayName}"); } This function enables UTF-8 encoding for the console output. This is necessary to output some special symbols like the Euro currency symbol. This function also controls the current culture used to format dates, times, and currency values. 4. In Program.cs, comment out any TimesTable method calls, and then call the ConfigureConsole method and the CalculateTax method, passing values for the amount such as 149 and a valid FR, as shown in the following code: region code such as // TimesTable(number: 7, size: 10); ConfigureConsole(); decimal taxToPay = CalculateTax(amount: 149, twoLetterRegionCode: "FR"); WriteLine($"You must pay {taxToPay:C} in tax."); 