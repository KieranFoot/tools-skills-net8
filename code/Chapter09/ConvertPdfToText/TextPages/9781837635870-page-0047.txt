Hello, C#! Welcome, .NET! 28 8. At the command prompt or terminal, use the dotnet CLI to create a new subfolder and project for a console app named HelloCS, as shown in the following command: dotnet new console --output HelloCS You can use either -o or --output as the switch to specify the folder and project name. The dotnet new console command targets your latest .NET SDK version by default. To target a different version, use the -f or --framework switch to specify a target framework. For example, to target .NET 6, use the following command: dotnet new console -f net6.0 9. At the command prompt or terminal, use the dotnet CLI to add the project to the solution, as shown in the following command: dotnet sln add HelloCS 10. Note the results, as shown in the following output: Project `HelloCS\HelloCS.csproj` added to the solution. 11. At the command prompt or terminal, start Visual Studio Code and open the current folder indicated with a . (dot), as shown in the following command: code . 12. If you are prompted, Do you trust the authors of the files in this folder?, then select the Trust the authors of all files in the parent folder ‘cs12dotnet8’ check box and then click Yes, I trust the authors. In Visual Studio Code, in EXPLORER, in the CHAPTER01-VSCODE folder view, expand the 13. HelloCS folder, and you will see that the dotnet command-line tool created two files, HelloCS. csproj and Program.cs, and bin and obj folders, as shown in Figure 1.10: Figure 1.10: EXPLORER shows that two files and a folder have been created 