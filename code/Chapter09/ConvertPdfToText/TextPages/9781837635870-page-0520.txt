Chapter 9 501 Figure 9.6: A comment by the original author of Json.NET Deserializing JSON files Letâ€™s see how to use the modern JSON APIs to deserialize a JSON file: 1. In the WorkingWithSerialization project, at the top of Program.cs, import the new JSON class to perform serialization, using an alias to avoid conflicting names with the Json.NET one we used before, as shown in the following code: using FastJson = System.Text.Json.JsonSerializer; 2. In Program.cs, add statements to open the JSON file, deserialize it, and output the names and counts of the children of the people, as shown in the following code: SectionTitle("Deserializing JSON files"); await using (FileStream jsonLoad = File.Open(jsonPath, FileMode.Open)) { // Deserialize object graph into a "List of Person". List<Person>? loadedPeople = await FastJson.DeserializeAsync(utf8Json: jsonLoad, returnType: typeof(List<Person>)) as List<Person>; if (loadedPeople is not null) { foreach (Person p in loadedPeople) { WriteLine("{0} has {1} children.", p.LastName, p.Children?.Count ?? 0); } } } 3. Run the code and view the result, as shown in the following output: Smith has 0 children. Jones has 0 children. Cox has 1 children. 