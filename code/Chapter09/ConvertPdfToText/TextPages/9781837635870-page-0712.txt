Chapter 13 693 Endpoint name: /Suppliers Endpoint route pattern: Suppliers 6. Navigate to https://localhost:5131/index and note that there was a match on an endpoint route /index, and the Index.cshtml Razor Page was executed to return the response, as shown in the following output: Endpoint name: /index Endpoint route pattern: index 7. Navigate to https://localhost:5131/index.html and note that there is no output written to the console because there was no match on an endpoint route, but there was a match for a static file, so it was returned as the response. https://localhost:5131/bonjour and note that there is no output written to the 8. Navigate to console because there was no match on an endpoint route. Instead, our delegate matched on /bonjour, wrote directly to the response stream, and returned with no further processing. 9. Close Chrome and shut down the web server. More Information: You can learn more about the HTTP pipeline and middleware or- der at the following link: https://learn.microsoft.com/en-us/aspnet/core/ fundamentals/middleware/#middleware-order. Practicing and exploring Test your knowledge and understanding by answering some questions, getting some hands-on practice, and exploring this chapter’s topics with deeper research. Exercise 13.1 – Test your knowledge Answer the following questions: 1. List six method names that can be specified in an HTTP request. 2. List six status codes and their descriptions that can be returned in an HTTP response. Program class used for? 3. In ASP.NET Core, what is the 4. What does the acronym HSTS stand for and what does it do? 5. How do you enable static HTML pages for a website? 6. How do you mix C# code into the middle of HTML to create a dynamic page? 7. How can you define shared layouts for Razor Pages? 8. How can you separate the markup from the code-behind in a Razor Page? 9. How do you configure an Entity Framework Core data context for use with an ASP.NET Core website? 10. How can you reuse Razor Pages with ASP.NET Core 2.2 or later? 