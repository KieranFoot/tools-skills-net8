Chapter 7 279 Working with cultures Internationalization is the process of enabling your code to correctly run all over the world. It has two parts, globalization and localization, and both of them are about working with cultures. Globalization is about writing your code to accommodate multiple languages and region combinations. The combination of a language and a region is known as a culture. It is important for your code to know both the language and region because, for example, the date and currency formats are different in Quebec and Paris, despite them both using the French language. There are International Organization for Standardization (ISO) codes for all culture combinations. For example, in the code da-DK, da indicates the Danish language and DK indicates the Denmark region, and in the code fr-CA, fr indicates the French language and CA indicates the Canada region. ISO is not just an acronym. ISO is a reference to the Greek word isos (which means equal). You can see a list of ISO culture codes at the following link: https://lonewolfonline. net/list-net-culture-country-codes/. Localization is about customizing the user interface to support a language, for example, changing the label of a button to Close (en) or Fermer (fr). Since localization is more about the language, it doesn’t always need to know about the region, although, ironically enough, the words standardization (en-US) and standardisation (en-GB) suggest otherwise. Good Practice: I am not a professional translator of software user interfaces, so take all examples in this chapter as general guidance. My research into French user interface labeling common practice led me to the following links, but it would be best to hire a professional if you are not a native language speaker: https://french.stackexchange. com/questions/12969/translation-of-it-terms-like-close-next-search-etc and https://www.linguee.com/english-french/translation/close+button.html. Detecting and changing the current culture Internationalization is a huge topic on which thousand-page books have been written. In this section, you will get a brief introduction to the basics, using the CultureInfo and RegionInfo types in the System.Globalization namespace. Let’s write some code: 1. Use your preferred code editor to add a new Console App / console project named WorkingWithCultures to the Chapter07 solution. • In the project file, treat warnings as errors, and then statically and globally import the System.Console class, and globally import the System.Globalization namespace so that we can use the CultureInfo class, as shown in the following markup: 