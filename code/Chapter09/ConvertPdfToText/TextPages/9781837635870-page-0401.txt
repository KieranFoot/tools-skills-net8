Packaging and Distributing .NET Types 382 Most developers write code for other developers to use in their own projects, or for users to run as an app. To do so, you must publish your code as packaged class libraries or executable applications. There are three ways to publish and deploy a .NET application. They are: • Framework-dependent deployment (FDD) • Framework-dependent executable (FDE) • Self-contained If you choose to deploy your application and its package dependencies, but not .NET itself, then you rely on .NET already being on the target computer. This works well for web applications deployed to a server because .NET and lots of other web applications are likely already on the server. FDD means you deploy a DLL that must be executed by the dotnet command-line tool. FDE means you deploy an EXE that can be run directly from the command line. Both require the appropriate version of the .NET runtime to be installed on the system. Sometimes, you want to be able to give someone a USB stick containing your application built for their operating system and know that it can execute on their computer. You would want to perform a self-contained deployment. While the size of the deployment files will be larger, you’ll know that it will work. Creating a console app to publish Let’s explore how to publish a console app: 1. Use your preferred code editor to add a new Console App / console project named DotNetEverywhere to the Chapter07 solution. Make sure you target .NET 8. System.Console class in all C# files. 2. Modify the project file to statically import the Program.cs, delete the existing statements, and then add a statement to output a message 3. In saying the console app can run everywhere and some information about the operating system, as shown in the following code: WriteLine("I can run everywhere!"); WriteLine($"OS Version is {Environment.OSVersion}."); if (OperatingSystem.IsMacOS()) { WriteLine("I am macOS."); } else if (OperatingSystem.IsWindowsVersionAtLeast(major: 10, build: 22000)) { WriteLine("I am Windows 11."); } else if (OperatingSystem.IsWindowsVersionAtLeast(major: 10)) 