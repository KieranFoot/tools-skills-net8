Working with Data Using Entity Framework Core 542 WriteLine($"CurrentCulture: {CultureInfo.CurrentCulture. DisplayName}"); } private static void WriteLineInColor(string text, ConsoleColor color) { ConsoleColor previousColor = ForegroundColor; ForegroundColor = color; WriteLine(text); ForegroundColor = previousColor; } private static void SectionTitle(string title) { WriteLineInColor($"*** {title} ***", ConsoleColor.DarkYellow); } private static void Fail(string message) { WriteLineInColor($"Fail > {message}", ConsoleColor.Red); } private static void Info(string message) { WriteLineInColor($"Info > {message}", ConsoleColor.Cyan); } } 3. Add a new class file named Program.Queries.cs. Program.Queries.cs, define a partial Program class with a QueryingCategories method, 4. In and add statements to do these tasks, as shown in the following code: • Create an instance of the Northwind class that will manage the database. Database context instances are designed for short lifetimes in a unit of work. They should be disposed of as soon as possible. So, we will wrap our instance in a using statement. In Chapter 13, Building Websites Using ASP.NET Core Razor Pages, you will learn how to get a database context using dependency injection. Create a query for all categories that includes their related products. Include is an • extension method that requires you to import the Microsoft.EntityFrameworkCore namespace. 