Chapter 10 545 SectionTitle("Products with a minimum number of units in stock"); string? input; int stock; do { Write("Enter a minimum for units in stock: "); input = ReadLine(); } while (!int.TryParse(input, out stock)); IQueryable<Category>? categories = db.Categories? .Include(c => c.Products.Where(p => p.Stock >= stock)); if (categories is null || !categories.Any()) { Fail("No categories found."); return; } foreach (Category c in categories) { WriteLine( "{0} has {1} products with a minimum {2} units in stock.", arg0: c.CategoryName, arg1: c.Products.Count, arg2: stock); foreach(Product p in c.Products) { WriteLine($" {p.ProductName} has {p.Stock} units in stock."); } } } 2. In Program.cs, call the FilteredIncludes method, as shown in the following code: FilteredIncludes(); 3. Run the code, enter a minimum value for units in stock, like 100, and view the result, as shown in the following partial output: Enter a minimum for units in stock: 100 Beverages has 2 products with a minimum of 100 units in stock. 