Chapter 13 691 Figure 13.11: The HTTP request and response pipeline The diagram shows two HTTP requests, as described in the following list: • First, in yellow, an HTTP request is made for the static file index.html. The first middleware to process this request is HTTPS redirection, which detects that the request is not for HTTPS 307 status code and the URL for the secure version of the resource. The and responds with a browser then makes another request using HTTPS, which gets past the HTTPS redirection middleware and is passed on to the UseDefaultFiles and UseStaticFiles middleware. This finds a matching static file in the wwwroot folder and returns it. Second, in blue, an HTTPS request is made for the relative path index. The request uses HTTPS, • so the HTTPS redirection middleware passes it through to the next middleware component. No matching static file is found in the wwwroot folder, so the static file’s middleware passes the request through to the next middleware in the pipeline. A match is found in the Pages folder index.cshtml. The Razor Page is executed to generate an HTML page for the Razor Page file that is returned as the HTTP response. Any code in the middleware that is part of the pipeline could make changes to this HTTP response as it flows back through them if needed, although in this scenario none of them do. Implementing an anonymous inline delegate as middleware A delegate can be specified as an inline anonymous method. We will register one that plugs into the pipeline after routing decisions for endpoints have been made. 