Chapter 10 535 You can also remove the tool, as shown in the following command: dotnet tool uninstall --global dotnet-ef Scaffolding models using an existing database Scaffolding is the process of using a tool to create classes that represent the model of an existing database using reverse engineering. A good scaffolding tool allows you to extend the automatically generated classes because they are partial and then regenerate those classes without losing your partial classes. If you know that you will never regenerate the classes using the tool, then feel free to change the code for the automatically generated classes as much as you want. The code generated by the tool is just the best approximation. Good Practice: Do not be afraid to overrule a tool when you know better. Letâ€™s see if the tool generates the same model as we did manually: 1. Add the latest version of the Microsoft.EntityFrameworkCore.Design package to the WorkingWithEFCore project, as shown highlighted in the following markup: <ItemGroup> <PackageReference Version="8.0.0" Include="Microsoft.EntityFrameworkCore.Design"> <PrivateAssets>all</PrivateAssets> <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets> </PackageReference> <PackageReference Version="8.0.0" Include="Microsoft.EntityFrameworkCore.Sqlite" /> </ItemGroup> More Information: If you are unfamiliar with how packages like Microsoft. EntityFrameworkCore.Design can manage their assets, then you can learn more at the following link: https://learn.microsoft.com/en-us/nuget/ consume-packages/package-references-in-project-files#controlling- dependency-assets. 2. Build the WorkingWithEFCore project to restore packages. 