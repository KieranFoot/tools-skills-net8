Building User Interfaces Using Blazor 766 { _db.Customers.Add(c); _db.SaveChangesAsync(); return Task.FromResult(c); } public Task<Customer> UpdateCustomerAsync(Customer c) { _db.Entry(c).State = EntityState.Modified; _db.SaveChangesAsync(); return Task.FromResult(c); } public Task DeleteCustomerAsync(string id) { Customer? customer = _db.Customers.FirstOrDefaultAsync (c => c.CustomerId == id).Result; if (customer == null) { return Task.CompletedTask; } else { _db.Customers.Remove(customer); return _db.SaveChangesAsync(); } } } 10. In Program.cs, import the namespace for our service, as shown in the following code: using Northwind.Blazor.Services; // To use INorthwindService. 11. In Program.cs, before the call to Build, add a statement to register NorthwindServiceServerSide as a transient service that implements the INorthwindService interface, as shown in the following code: builder.Services.AddTransient<INorthwindService, NorthwindServiceServerSide>(); 