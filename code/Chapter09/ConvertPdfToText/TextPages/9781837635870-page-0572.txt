Chapter 10 553 int id; do { Write("Enter a product ID: "); input = ReadLine(); } while (!int.TryParse(input, out id)); Product? product = db.Products? .First(product => product.ProductId == id); Info($"First: {product?.ProductName}"); if (product is null) Fail("No product found using First."); product = db.Products? .Single(product => product.ProductId == id); Info($"Single: {product?.ProductName}"); if (product is null) Fail("No product found using Single."); } 2. In Program.cs, call the GettingOneProduct method. 1 when prompted to enter a product ID, view the result, and note the SQL 3. Run the code, enter statements used by First and Single, as shown in the following output: Enter a product ID: 1 Connection: Data Source=C:\cs12dotnet8\Chapter10\WorkingWithEFCore\bin\ Debug\net8.0\Northwind.db dbug: 9/17/2023 18:04:14.210 RelationalEventId.CommandExecuting[20100] (Microsoft.EntityFrameworkCore.Database.Command) Executing DbCommand [Parameters=[@__id_0='1'], CommandType='Text', CommandTimeout='30'] SELECT "p"."ProductId", "p"."CategoryId", "p"."UnitPrice", "p"."Discontinued", "p"."ProductName", "p"."UnitsInStock" FROM "Products" AS "p" WHERE NOT ("p"."Discontinued") AND "p"."ProductId" > @__id_0 LIMIT 1 Info > First: Chang dbug: 9/17/2023 18:04:14.286 RelationalEventId.CommandExecuting[20100] (Microsoft.EntityFrameworkCore.Database.Command) 