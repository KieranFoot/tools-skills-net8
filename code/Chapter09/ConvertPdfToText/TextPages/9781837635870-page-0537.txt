Working with Data Using Entity Framework Core 518 4. Extract the ZIP file into a folder named C:\Sqlite\. Make sure that the three extracted files including sqlite3.exe are directly inside the C:\SQLite folder or the executable will not be found later when you try to use it. 5. In the Windows Start menu, navigate to Settings. environment and choose Edit the system environment variables. On non-English 6. Search for versions of Windows, please search for the equivalent word in your local language to find the setting. 7. Click the Environment Variables button. 8. In System variables, select Path in the list, and then click Edit…. C:\SQLite is not already in the path, then click New, enter C:\Sqlite, and press Enter. 9. If 10. Click OK, then OK, then OK again, and then close Settings. 11. To confirm that the path to SQLite has been configured correctly, at any command prompt or terminal, enter a command to start SQLite, as shown in the following command: sqlite3 12. Note the result, as shown in the following output: SQLite version 3.42.0 2023-05-16 12:36:15 Enter ".help" for usage hints. Connected to a transient in-memory database. Use ".open FILENAME" to reopen on a persistent database. sqlite> 13. To exit the SQLite command prompt: • On Windows, press Ctrl + C twice. • On macOS, press Ctrl + D. Setting up SQLite for macOS and Linux On macOS, SQLite is included in the /usr/bin/ directory as a command-line application named sqlite3. On Linux, you can get set up with SQLite using the following command: sudo apt-get install sqlite3 SQLite can be downloaded and installed for other OSs from the following link: https://www.sqlite. . org/download.html Setting up EF Core in a .NET project Now that we have a database system set up, we can create a database and .NET project that use it. 