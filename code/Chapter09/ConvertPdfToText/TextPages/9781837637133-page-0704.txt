Chapter 15 671 <div> ... </div> How to navigate Blazor routes to page components Microsoft provides a dependency service named NavigationManager that understands Blazor routing and the NavLink component. The NavigateTo method is used to go to the specified URL. In HTML, you use the <a> element to define navigation links, as shown in the following markup: <a href="/employees">Employees</a> In Blazor, use the <NavLink> component, as shown in the following markup: <NavLink href="/employees">Employees</NavLink> The NavLink component is better than an anchor element because it automatically sets its class to active if its href is a match on the current location URL. If your CSS uses a different class name, then you can set the class name in the NavLink.ActiveClass property. By default, in the matching algorithm, the href is a path prefix, so if NavLink has an href of /employees, as shown in the preceding code example, then it would match all the following paths and set them active class style: all to have the /employees /employees/USA /employees/UK/London To ensure that the matching algorithm only performs matches on all of the text in the path, (in other words, there is only a match when the whole complete text matches and not when just part of the Match parameter to NavLinkMatch.All, as shown in the following code: path matches), then set the <NavLink href="/employees" Match="NavLinkMatch.All">Employees</NavLink> If you set other attributes such as target, they are passed through to the underlying <a> element that is generated. CSS and JavaScript isolation Blazor components often need to provide their own CSS to apply styling or JavaScript for activities that cannot be performed purely in C#, like access to browser APIs. To ensure this does not conflict with site-level CSS and JavaScript, Blazor supports CSS and JavaScript isolation. If you have a component named Home.razor, simply create a CSS file named Home.razor.css. The styles defined within this file will override any other styles in the project for this component, but not for the rest of the website. 