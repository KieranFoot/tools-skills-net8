Chapter 9 469 When constructing custom paths, you must be careful to write your code so that it makes no assump- tions about the platform, for example, what to use for the directory separator character: 1. In Program.cs, write statements to do the following: • Define a custom path under the user’s home directory by creating an array of strings for the directory names, and then properly combine them with the Path type’s Combine method. Exists method of the • Check for the existence of the custom directory path using the Directory class. Create and then delete the directory, including files and subdirectories within it, using • the CreateDirectory and Delete methods of the Directory class: SectionTitle("Managing directories"); string newFolder = Combine( GetFolderPath(SpecialFolder.Personal), "NewFolder"); WriteLine($"Working with: {newFolder}"); // We must explicitly say which Exists method to use // because we statically imported both Path and Directory. WriteLine($"Does it exist? {Path.Exists(newFolder)}"); WriteLine("Creating it..."); CreateDirectory(newFolder); // Let's use the Directory.Exists method this time. WriteLine($"Does it exist? {Directory.Exists(newFolder)}"); Write("Confirm the directory exists, and then press any key."); ReadKey(intercept: true); WriteLine("Deleting it..."); Delete(newFolder, recursive: true); WriteLine($"Does it exist? {Path.Exists(newFolder)}"); In .NET 6 and earlier, only the Directory class had an Exists method. In .NET 7 or later, the Path class also has an Exists method. Both can be used to check for the existence of a path. 