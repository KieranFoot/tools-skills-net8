Chapter 1 13 .NET MAUI makes it easy to develop those apps by sharing user interface components as well as busi- ness logic; they can target the same .NET APIs as used by console apps, websites, and web services. The apps can exist standalone, but they usually call services to provide an experience that spans all your computing devices, from servers and laptops to phones and gaming systems. .NET MAUI supports existing MVVM and XAML patterns. The team also plans to add support in the future for Model-View-Update (MVU) with C#, which is like Apple’s Swift UI. MVU using Comet is still only a proof of concept. It is not as mature or well supported as Swift UI. I will not cover it in this book. You can read more about it at the following link: https://github.com/dotnet/Comet. .NET MAUI alternatives Before Microsoft created .NET MAUI, third parties created open-source initiatives to enable .NET developers to build cross-platform apps using XAML, named Uno and Avalonia. Understanding the Uno platform Uno is “the first C# & XAML, free and open-source platform for creating true single-source, multi-platform applications,” as stated on its own website at the following link: https://platform.uno/. Developers can reuse 99% of the business logic and UI layer across native mobile, web, and desktop. The Uno platform uses the Xamarin native platform but not Xamarin.Forms. For WebAssembly, Uno uses the mono-wasm runtime just like Blazor WebAssembly. For Linux, Uno uses Skia to draw the user interface on the canvas. A book to read to learn about the Uno platform can be found at the following link: https:// www.packtpub.com/product/creating-cross-platform-c-applications-with-uno- platform/9781801078498. Understanding Avalonia Avalonia “is a cross-platform UI framework for .NET. It creates pixel-perfect, native apps” and “is supported on all major platforms.” Avalonia “is the trusted UI framework for complex apps,” as stated on its official website home page at the following link: https://avaloniaui.net/. You can think of Avalonia as a spiritual successor to WPF. WPF, Silverlight, and UWP developers can continue to benefit from their years of pre-existing knowledge and skills. It was used by JetBrains to modernize their legacy WPF-based tools and take them cross-platform. This means their C# code editor runs on Windows, macOS, and Linux. The Avalonia extension for Visual Studio 2022 and deep integration with JetBrains Rider makes devel- opment easier and more productive. Now that we’ve reviewed the theory about the apps and services technologies that can be used with .NET 8, let’s get practical and see how you can set up your development environment. 