Building and Securing Web Services Using Minimal APIs 354 5. In NorthwindJsonSerializerContext.cs, define a class that enables a Product and a list of Product objects to be serialized as JSON, as shown in the following code: using System.Text.Json.Serialization; // To use JsonSerializerContext. using Northwind.Models; // To use Product. namespace Northwind.Serialization; [JsonSerializable(typeof(Product))] [JsonSerializable(typeof(List<Product>))] internal partial class NorthwindJsonSerializerContext : JsonSerializerContext { } 6. Delete the Northwind.MinimalAot.Service.http file. WebApplication.Extensions.cs. 7. Add a new class file named In WebApplication.Extensions.cs, define an extension method for the WebApplication 8. class that maps some HTTP GET requests to return a plain text response, and a list of either all products or products with a minimum price from the Northwind database using ADO.NET, as shown in the following code: using Microsoft.Data.SqlClient; // To use SqlConnection and so on. using Northwind.Models; // To use Product. using System.Data; // To use CommandType. namespace Packt.Extensions; public static class WebApplicationExtensions { public static WebApplication MapGets(this WebApplication app) { // app.MapGet(pattern, handler); app.MapGet("/", () => "Hello from a native AOT minimal API web service."); app.MapGet("/products", GetProducts); app.MapGet("/products/{minimumUnitPrice:decimal?}", GetProducts); return app; } 