Building Efficient Microservices Using gRPC 576 7. In the obj\Debug\net8.0\Protos folder, note the two class files named Greet.cs and GreetGrpc. cs that are automatically generated from the greet.proto file, as shown in Figure 13.2: Figure 13.2: The autogenerated class files from a .proto file for a gRPC service 8. In GreetGrpc.cs, note the Greeter.GreeterBase class that the GreeterService class inherited from. You do not need to understand how this base class is implemented, but you should know it is what handles all the details of gRPC’s efficient communication. 9. If you are using Visual Studio 2022, in Solution Explorer, expand Dependencies, expand Pack- ages, expand Grpc.AspNetCore, and note that it has dependencies on Google’s Google.Protobuf package, and Microsoft’s Grpc.AspNetCore.Server.ClientFactory and Grpc.Tools packages, as shown in Figure 13.3: Figure 13.3: The Grpc.AspNetCore package references the Grpc.Tools and Google.Protobuf packages 