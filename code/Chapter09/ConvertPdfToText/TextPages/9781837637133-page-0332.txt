Chapter 7 299 That is what the team did with System.DateTime. That type has a Kind property that indicates if it is a local time, UTC time, or unspecified. It varies in behavior depending on how you treat it. This makes date/time values as implemented in .NET fundamentally tricky to work with and understand. More Information: Jon Skeet, the creator of Noda Time, has a lot more to say about the limitations of date/time support in .NET and DateTime, specifically in a 2011 blog post found at the following link: https://blog.nodatime.org/2011/08/what-wrong-with- datetime-anyway.html Important concepts and defaults in Noda Time The built-in DateTime type stores both global and local values, or values that are unspecified. Unless treated with great care, this opens the door to subtle bugs and misunderstandings. The first big difference with Noda Time is that it forces you to make a choice at the type level. Noda Time, therefore, has more types and, at first, can seem more confusing. Types in Noda Time are global or local. Every person anywhere in the world would share the same global values at the same instant, whereas each person would have a different local value, depending on factors like their time zone. The built-in date/time types in .NET are only accurate to the tick, which is about 100 nanoseconds. Noda Time is accurate to 1 nanosecond, 100 times more accurate. The “zero” baseline in Noda Time is midnight at the start of 1 January 1970 in the UTC time zone. The Noda Time Instant is the number of nanoseconds before (if a negative value) or since (if a positive value) that time and represents a point in time on the global timeline. The default calendaring system in Noda Time is the ISO-8601 calendar because it is the standard, and you can read more about it at the following link: https://en.wikipedia.org/wiki/ISO_8601. Automatic conversions to other calendaring systems like Julian, Coptic, and Buddhist are supported. Noda Time has some common types that are like some .NET date/time types, as summarized in Table 7.6: Noda Time type Description Instant struct Represents an instant on the global timeline, with nanosecond resolution. Interval struct Two Instant values, an inclusive start and an exclusive end. LocalDateTime struct A date/time value in a particular calendaring system, but it does not represent a fixed point on the global timeline. For example, midnight on New Year’s Eve 2023 happens for different people in different time zones. If you do not know the user’s time zone, you will likely have to use this type. LocalDate and Like LocalDateTime struct but only the date or time part. When LocalTime structs prompting the user to enter date and time values, you often start with them separately and then combine them into a single LocalDateTime struct. 