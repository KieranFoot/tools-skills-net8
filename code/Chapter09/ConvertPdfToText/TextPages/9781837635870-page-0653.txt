Introducing Web Development Using ASP.NET Core 634 Creating the Northwind database The script files for creating the Northwind database for SQLite and SQL Server are different. The script for SQL Server creates 13 tables as well as related views and stored procedures. The script for SQLite is a simplified version that only creates 10 tables because SQLite does not support as many features. The main projects in this book only need those 10 tables so you can complete every task in this book with either database. The SQL scripts are found at the following link: https://github.com/markjprice/cs12dotnet8/ tree/main/scripts/sql-scripts. There are multiple SQL scripts to choose from, as described in the following list: • Northwind4Sqlite.sql script: To use SQLite on a local Windows, macOS, or Linux computer. This script could probably also be used for other SQL systems like PostgreSQL or MySQL but has not been tested for use with those! Northwind4SqlServer.sql script: To use SQL Server on a local Windows computer. The script • checks if the Northwind database already exists and drops it before creating it. Northwind4AzureSqlDatabaseCloud.sql script: To use SQL Server with an Azure SQL Database • resource created in the Azure cloud. These resources cost money as long as they exist! The script does not drop or create the Northwind database because you should manually create the Northwind database using the Azure portal user interface. Northwind4AzureSqlEdgeDocker.sql script: To use SQL Server on a local computer in Docker. • The script creates the Northwind database. It does not drop it if it already exists because the Docker container should be empty anyway as a fresh one will be spun up each time. Instructions to install SQLite can be found in Chapter 10, Working with Data Using Entity Framework Core. In that chapter, you will also find instructions for installing the dotnet-ef tool, which you will use to scaffold an entity model from an existing database. Instructions to install SQL Server Developer Edition (free) on your local Windows computer can be found in the GitHub repository for this book at the following link: https://github.com/markjprice/ . cs12dotnet8/blob/main/docs/sql-server/README.md Instructions to set up Azure SQL Edge in Docker for Windows, macOS, or Linux can be found in the GitHub repository for the companion book at the following link: https://github.com/markjprice/ . apps-services-net8/blob/main/docs/ch02-sql-edge.md Creating a class library for entity models using SQLite You will now define entity data models in a class library so that they can be reused in other types of projects including client-side app models. Good Practice: You should create a separate class library project for your entity data models. This allows easier sharing between backend web servers and frontend desktop, mobile, and Blazor clients. 