Chapter 8 451 “Add” “Remove” Collection Description methods methods Lists are ordered so items have an integer index Remove, position. Add will add a new item at the end of List Add, Insert RemoveAt the list. Insert will add a new item at the index position specified. Dictionaries are not ordered so items do not have Dictionary Add Remove integer index positions. You can check if a key has been used by calling the ContainsKey method. Stacks always add a new item at the top of the stack using the Push method. The first item is at the bottom. Items are always removed from the Stack Push Pop top of the stack using the Pop method. Call the Peek method to see this value without removing it. Stacks are LIFO. Queues always add a new item at the end of the queue using the Enqueue method. The first item is at the front of the queue. Items are always removed Queue Enqueue Dequeue from the front of the queue using the Dequeue method. Call the Peek method to see this value without removing it. Queues are FIFO. Table 8.13: Collection “add” and “remove” methods Sorting collections A List<T> class can be sorted by manually calling its Sort method (but remember that the indexes of each item will change). Manually sorting a list of string values or other built-in types will work without extra effort on your part, but if you create a collection of your own type, then that type must IComparable. You learned how to do this in Chapter 6, Implementing implement an interface named Interfaces and Inheriting Classes. A Stack<T> or Queue<T> collection cannot be sorted because you wouldn’t usually want that func- tionality; for example, you would probably never sort a queue of guests checking into a hotel. But sometimes, you might want to sort a dictionary or a set. Sometimes it would be useful to have an automatically sorted collection, that is, one that maintains the items in a sorted order as you add and remove them. There are multiple auto-sorting collections to choose from. The differences between these sorted collections are often subtle but can have an impact on the memory requirements and performance of your application, so it is worth putting effort into picking the most appropriate option for your requirements. 