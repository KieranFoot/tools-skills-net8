Chapter 8 337 7. On the home page, in the text box, enter man, click Get Products, and note that the console shows the JSON document returned from the web service, and the table is filled with the two products, as shown in Figure 8.8: Figure 8.8: A successful cross-origin request to the web service using JavaScript 8. Close the browser and shut down the web servers. Enabling CORS for specific endpoints In the previous example, we enabled the same CORS policy for the whole web service. You might need finer control at the endpoint level: 1. In the Northwind.WebApi.Service project, in Program.cs, change the call to UseCors to not specify the policy name, as shown highlighted in the following code: // app.UseCors(policyName: "Northwind.Mvc.Policy"); // Without a named policy the middleware is added but not active. app.UseCors(); 2. In WebApplication.Extensions.cs, at the end of the call to MapGet that gets products that contain part of a product name, add a call to RequiresCors, as shown highlighted in the fol- lowing code: app.MapGet("api/products/{name}", ( [FromServices] NorthwindContext db, [FromRoute] string name) => 