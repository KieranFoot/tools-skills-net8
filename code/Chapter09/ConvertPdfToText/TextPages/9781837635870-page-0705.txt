Building Websites Using ASP.NET Core Razor Pages 686 3. Start the website using the https launch profile and navigate to the website home page. /orders, and you will see that 4. In the browser address bar, navigate to the relative address, there are 830 orders in the Northwind database. 5. Close Chrome and shut down the web server. Configuring services and the HTTP request pipeline Now that we have built a website that reads and writes to a database, we will return to the website configuration and review how services and the HTTP request pipeline work in more detail. Understanding endpoint routing Endpoint routing is designed to enable better interoperability between frameworks that need routing, such as Razor Pages, MVC, or Web APIs, and middleware that needs to understand how routing affects them, such as localization, authorization, and so on. Endpoint routing gets its name because it represents the route table as a compiled tree of endpoints that can be walked efficiently by the routing system. One of the biggest improvements is the perfor- mance of routing and action method selection. Configuring endpoint routing For more complex scenarios than we have seen so far, endpoint routing can use a pair of calls to the UseRouting and UseEndpoints methods: • UseRouting marks the pipeline position where a routing decision is made. UseEndpoints marks the pipeline position where the selected endpoint is executed. • Middleware such as the localization that runs in between these methods can see the selected endpoint and switch to a different endpoint if necessary. Endpoint routing uses the same route template syntax that has been used in ASP.NET MVC since 2010 and the [Route] attribute introduced with ASP.NET MVC 5 in 2013. Reviewing the endpoint routing configuration in our project Review the statements in Program.cs, as shown in the following code: using Northwind.EntityModels; // To use AddNorthwindContext method. #region Configure the web server host and services var builder = WebApplication.CreateBuilder(args); builder.Services.AddRazorPages(); builder.Services.AddNorthwindContext(); var app = builder.Build(); 