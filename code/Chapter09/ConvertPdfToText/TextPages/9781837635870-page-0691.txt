Building Websites Using ASP.NET Core Razor Pages 672 5. Modify the content of _Layout.cshtml. It is similar to index.cshtml, so you can copy and paste the HTML markup from there, and then make the changes, as shown highlighted in the following markup: <!doctype html> <html lang="en"> <head> <!-- Required meta tags --> <meta charset="utf-8" /> <meta name="viewport" content= "width=device-width, initial-scale=1, shrink-to-fit=no" /> <!-- Bootstrap CSS --> <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/ bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi 0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous"> <title>@ViewData["Title"]</title> </head> <body> <div class="container"> @RenderBody() <hr /> <footer> <p>Copyright &copy; 2023 - @ViewData["Title"]</p> </footer> </div> <!-- JavaScript to enable features like carousel --> <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/ bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwH VBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script> @RenderSection("Scripts", required: false) </body> </html> While reviewing the preceding markup, note the following: • <title> is set dynamically using server-side code by reading from a dictionary named ViewData. This is a simple way to pass data between different parts of an ASP.NET Core website. In this case, the title value will be set in a Razor Page class file and then output in the shared layout. @RenderBody() marks the insertion point for the view being requested. • • A horizontal rule and footer will appear at the bottom of each page. • At the bottom of the layout is a script to implement some cool features of Bootstrap that we can use later, such as a carousel of images. 