Chapter 6 325 Let’s review what memory is allocated on the stack and heap when this method is executed, as shown in Figure 6.1 and as described in the following list: • The number1 variable is a value type (also known as struct), so it is allocated on the stack, and it uses 4 bytes of memory since it is a 32-bit integer. Its value, 49, is stored directly in the variable. • The number2 variable is also a value type, so it is also allocated on the stack, and it uses 8 bytes since it is a 64-bit integer. location variable is also a value type, so it is allocated on the stack, and it uses 8 bytes • The x and y. since it is made up of two 32-bit integers, kevin variable is a reference type (also known as class), so 8 bytes for a 64-bit memory • The address (assuming a 64-bit operating system) are allocated on the stack, and enough bytes are Person. allocated on the heap to store an instance of a sally variable is a reference type, so 8 bytes for a 64-bit memory address are allocated on • The null), meaning no memory has yet been allocated for it the stack. It is currently unassigned ( on the heap. If we were to later assign kevin to sally, then the memory address of the Person on the heap would be copied into sally, as shown in the following code: sally = kevin; // Both variables point at the same Person on heap. Figure 6.1: How value and reference types are allocated in the stack and heap All the allocated memory for a reference type is stored on the heap except for its memory address on DateTimeOffset is used for a field of a reference type like Person, the stack. If a value type such as then the DateTimeOffset value is stored on the heap, as shown in Figure 6.1. If a value type has a field that is a reference type, then that part of the value type is stored on the heap. Point is a value type that consists of two fields, both of which are themselves value types, so the entire object can be allocated on the stack. If the Point value type had a field that was a reference type, like string, then the string bytes would be stored on the heap. 