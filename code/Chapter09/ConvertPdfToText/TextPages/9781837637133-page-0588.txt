Chapter 12 555 public class UpdateProductPayload { public UpdateProductPayload(Product? product, bool updated) { Product = product; Success = updated; } public Product? Product { get; } public bool Success { get; } } public class DeleteProductPayload { public DeleteProductPayload(bool deleted) { Success = deleted; } public bool Success { get; } } 3. In Mutation.cs, in the Mutation class, define three methods to implement two updateProduct and one deleteProduct mutations, as shown in the following code: public async Task<UpdateProductPayload> UpdateProductPriceAsync( UpdateProductPriceInput input, NorthwindContext db) { Product? product = await db.Products.FindAsync(input.ProductId); int affectedRows = 0; if (product is not null) { product.UnitPrice = input.UnitPrice; affectedRows = await db.SaveChangesAsync(); } return new UpdateProductPayload(product, updated: affectedRows == 1); } 