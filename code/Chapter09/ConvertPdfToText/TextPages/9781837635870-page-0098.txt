Chapter 2 79 In the previous code, the XML is indented by 13 spaces. The compiler looks at the indentation of the last three or more double-quote characters, and then automatically removes that level of indentation from all the content inside the raw string literal. The results of the previous code would therefore not be indented as in the defining code, but instead be aligned with the left margin, as shown in the following markup: <person age="50"> <first_name>Mark</first_name> </person> If the end three double-quote characters are aligned with the left margin, as shown in the following code: string xml = """ <person age="50"> <first_name>Mark</first_name> </person> """; Then the 13-space indentation would not be removed, as shown in the following markup: <person age="50"> <first_name>Mark</first_name> </person> Raw interpolated string literals You can mix interpolated strings that use curly braces { } with raw string literals. You specify the number of braces that indicates a replaced expression by adding that number of dollar signs to the start of the literal. Any fewer braces than that are treated as raw content. For example, if we want to define some JSON, single braces will be treated as normal braces, but the two dollar symbols tell the compiler that any two curly braces indicate a replaced expression value, as shown in the following code: var person = new { FirstName = "Alice", Age = 56 }; string json = $$""" { "first_name": "{{person.FirstName}}", "age": {{person.Age}}, "calculation": "{{{ 1 + 2 }}}" } """; Console.WriteLine(json); 