Chapter 7 259 More Information: A full list of format code can be found at the following link: https:// learn.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and- time-format-strings. Letâ€™s run some examples: 1. In Program.cs, add statements to define Christmas Day in 2024 and display it in various ways, as shown in the following code: DateTime xmas = new(year: 2024, month: 12, day: 25); WriteLine($"Christmas (default format): {xmas}"); WriteLine($"Christmas (custom short format): {xmas:ddd d/M/yy}"); WriteLine($"Christmas (custom long format): { xmas:dddd, dd MMMM yyyy}"); WriteLine($"Christmas (standard long format): {xmas:D}"); WriteLine($"Christmas (sortable): {xmas:u}"); WriteLine($"Christmas is in month {xmas.Month} of the year."); WriteLine($"Christmas is day {xmas.DayOfYear} of {xmas.Year}."); WriteLine($"Christmas {xmas.Year} is on a {xmas.DayOfWeek}."); 2. Run the code, and note the results, as shown in the following output: Christmas (default format): 12/25/2024 12:00:00 AM Christmas (custom short format): Wed, 25/12/24 Christmas (custom long format): Wednesday, 25 December 2024 Christmas (standard long format): Wednesday, December 25, 2024 Christmas (sortable): 2024-12-25 00:00:00Z Christmas is in month 12 of the year. Christmas is day 360 of 2024. Christmas 2024 is on a Wednesday. 3. Disable overriding your computer culture or pass a specific culture code, like French in France, as shown in the following code: ConfigureConsole("fr-FR"); // Defaults to en-US culture. 4. Run the code, and note that the results should be localized to that culture. 5. Reset the console configuration back to the default of US English. 