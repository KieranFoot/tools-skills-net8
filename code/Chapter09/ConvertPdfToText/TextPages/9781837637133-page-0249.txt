Using Popular Third-Party Libraries 216 Title casing: The Cat Sat on the Mat. Sentence casing: The cat sat on the mat. Lower, then Sentence casing: The cat sat on the mat. Original casing: THE CAT SAT ON THE MAT. Lower casing: the cat sat on the mat. Upper casing: THE CAT SAT ON THE MAT. Title casing: THE CAT SAT ON THE MAT. Sentence casing: THE CAT SAT ON THE MAT. Lower, then Sentence casing: The cat sat on the mat. Original casing: the cat sat on the mat. the frog jumped. Lower casing: the cat sat on the mat. the frog jumped. Upper casing: THE CAT SAT ON THE MAT. THE FROG JUMPED. Title casing: The Cat Sat on the Mat. the Frog Jumped. Sentence casing: The cat sat on the mat. the frog jumped. Lower, then Sentence casing: The cat sat on the mat. the frog jumped. 11. In Program.Functions.cs, add statements to define a method that outputs an ugly string value using various Humanizer extension methods, as shown in the following code: private static void OutputSpacingAndDashes() { string ugly = "ERROR_MESSAGE_FROM_SERVICE"; WriteLine("Original string: {0}", ugly); WriteLine("Humanized: {0}", ugly.Humanize()); // LetterCasing is legacy and will be removed in future. WriteLine("Humanized, lower case: {0}", ugly.Humanize(LetterCasing.LowerCase)); // Use Transform for casing instead. WriteLine("Transformed (lower case, then sentence case): {0}", ugly.Transform(To.LowerCase, To.SentenceCase)); WriteLine("Humanized, Transformed (lower case, then sentence case): {0}", ugly.Humanize().Transform(To.LowerCase, To.SentenceCase)); } 