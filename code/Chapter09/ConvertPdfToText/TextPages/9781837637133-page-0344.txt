Chapter 8 311 Setting up an ASP.NET Core Web API project First, we will create a simple ASP.NET Core Web API project that we will later protect using various techniques like rate limiting, CORS, and authentication and authorization. The API for this web service is defined as shown in Table 8.2: Method Path Request body Response body Success code GET / 200 None Hello World! GET /api/products 200 None Array of in-stock Product objects GET /api/products/outofstock 200 None Array of out-of-stock Product objects GET /api/products/discontinued 200 None Array of discontinued Product objects GET /api/products/{id} 200 None Product object GET /api/products/{name} 200 None Array of Product objects that contain the name POST /api/products 201 Product Product object object (no Id value) PUT /api/products/{id} 204 Product None object DELETE /api/products/{id} 204 None None Table 8.2: API methods implemented by the example project Let’s go: 1. Use your preferred code editor to create a new solution named Chapter08. 2. Add a Web API project, as defined in the following list: webapi • Project template: ASP.NET Core Web API / • Solution file and folder: Chapter08 • Project file and folder: Northwind.WebApi.Service • Authentication type: None. • Configure for HTTPS: Selected. • Enable Docker: Cleared. • Enable OpenAPI support: Selected. • Do not use top-level statements: Cleared. • Use controllers: Cleared. 