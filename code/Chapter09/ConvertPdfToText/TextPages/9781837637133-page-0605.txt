Building Efficient Microservices Using gRPC 572 gRPC limitations The main limitation of gRPC is that it cannot be used in web browsers because no browser provides the level of control required to support a gRPC client. For example, browsers do not allow a caller to require that HTTP/2 be used. Another limitation for developers is that due to the binary format of the messages, it is harder to diagnose and monitor issues. Many tools do not understand the format and cannot show messages in a human-readable format. There is an initiative called gRPC-Web that adds an extra proxy layer, and the proxy forwards requests to the gRPC server. However, it only supports a subset of gRPC due to the listed limitations. Types of gRPC methods gRPC has four types of method. The first method is the most common: • Unary methods have structured request and response messages. A unary method completes when the response message is returned. Unary methods should be chosen in all scenarios that do not require a stream. Streaming methods are used when a large amount of data must be exchanged, and they do so by us- ing a stream of bytes. They have the stream keyword prefix for either an input parameter, an output parameter, or both. The three streaming methods are as follows: • Server streaming methods receive a request message from the client and return a stream. Multiple messages can be returned over the stream. A server streaming call ends when the server side method returns, but the server side method could run until it receives a cancella- tion token from the client. Client streaming methods only receive a stream from the client without any message. The • server side method processes the stream until it is ready to return a response message. Once the server side method returns its message, the client streaming call is done. • Bi-directional streaming methods only receive a stream from the client without any message and only return data via a second stream. The call is done when the server side method returns. Once a bi-directional streaming method is called, the client and service can send messages to each other at any time. In this book, we will only look at the details of unary methods. If you would like the next edition to cover streaming methods, please let me know. Microsoft’s gRPC packages Microsoft has invested in building a set of packages for .NET to work with gRPC and, since May 2021, it is Microsoft’s recommended implementation of gRPC for .NET. 